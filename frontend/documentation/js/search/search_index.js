var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddressComponent.html",[0,0.163,1,0.72]],["body/components/AddressComponent.html",[0,0.193,1,0.96,2,0.918,3,0.21,4,0.182,5,0.65,6,0.65,7,0.65,8,0.182,9,1.266,10,0.65,11,1.548,12,1.275,13,2.673,14,0.84,15,0.7,16,0.84,17,1.926,18,1.926,19,1.749,20,1.749,21,1.926,22,2.132,23,1.749,24,0.84,25,2.204,26,1.308,27,2.204,28,0.154,29,0.468,30,3.263,31,2.887,32,0.996,33,2.689,34,2.689,35,0.84,36,3.021,37,3.021,38,2.163,39,3.06,40,1.579,41,2.379,42,0.71,43,1.986,44,2.468,45,2.572,46,1.123,47,3.06,48,0.84,49,0.035,50,0.456,51,0.456,52,1.595,53,1.986,54,1.986,55,1.052,56,1.84,57,1.986,58,1.986,59,2.204,60,1.986,61,1.266,62,2.337,63,0.854,64,0.854,65,1.986,66,1.888,67,1.986,68,1.986,69,0.808,70,1.308,71,0.304,72,1.431,73,1.266,74,0.65,75,1.025,76,1.134,77,0.931,78,0.931,79,0.849,80,1.431,81,1.431,82,0.918,83,0.937,84,1.935,85,0.21,86,0.21,87,0.596,88,0.65,89,1.266,90,1.431,91,1.431,92,1.95,93,1.431,94,1.579,95,3.28,96,1.431,97,1.266,98,2.204,99,2.132,100,1.431,101,2.132,102,1.266,103,1.266,104,1.431,105,1.025,106,3.446,107,1.431,108,1.431,109,1.431,110,0.849,111,1.431,112,2.586,113,2.163,114,1.431,115,1.431,116,1.266,117,1.431,118,1.431,119,1.431,120,1.431,121,1.431,122,2.379,123,1.431,124,1.431,125,1.431,126,1.431,127,1.431,128,1.431,129,1.431,130,1.431,131,1.025,132,1.431,133,1.266,134,2.379,135,1.431,136,1.431,137,2.673,138,3.021,139,1.431,140,1.266,141,1.431,142,1.431,143,1.431,144,1.458,145,2.204,146,1.431,147,1.431,148,0.931,149,1.431,150,2.689,151,1.431,152,2.204,153,1.431,154,0.849,155,2.204,156,1.431,157,1.266,158,1.431,159,3.021,160,1.431,161,1.431,162,1.431,163,1.431,164,1.266,165,1.431,166,1.431,167,1.431,168,1.431,169,1.431,170,1.431,171,2.204,172,1.266,173,1.431,174,2.204,175,1.431,176,1.134,177,2.204,178,2.204,179,2.204,180,1.431,181,1.869,182,1.95,183,1.95,184,1.431,185,1.431,186,2.204,187,1.431,188,1.431,189,1.431,190,1.431,191,2.544,192,2.544,193,3.06,194,4.194,195,3.06,196,3.06,197,0.65,198,1.002,199,1.002,200,0.65,201,1.373,202,0.65,203,0.65,204,0.545,205,0.65,206,0.545,207,0.65,208,0.545,209,0.65,210,0.545,211,0.65,212,0.545,213,0.65,214,0.545,215,0.65,216,0.545,217,0.65,218,0.545,219,0.65,220,0.545,221,0.65,222,0.545,223,0.596,224,0.65,225,0.65,226,0.016,227,0.016]],["title/components/AppComponent.html",[0,0.163,204,0.863]],["body/components/AppComponent.html",[0,0.274,1,0.859,2,1.44,3,0.397,4,0.343,5,1.228,6,1.228,7,1.228,8,0.343,10,1.228,11,1.726,12,1.432,14,1.318,15,1.099,16,1.318,24,1.318,26,2.051,28,0.292,29,0.735,46,0.781,49,0.034,50,0.439,51,0.343,63,0.859,64,0.859,69,0.735,71,0.574,83,0.941,85,0.397,86,0.397,197,1.228,198,1.572,199,1.572,200,1.228,201,1.827,202,1.228,203,1.228,204,1.532,205,1.228,206,1.03,207,1.228,208,1.03,209,1.228,210,1.03,211,1.228,212,1.03,213,1.228,214,1.03,215,1.228,216,1.03,217,1.228,218,1.03,219,1.228,220,1.03,221,1.228,222,1.03,223,1.125,224,1.228,225,1.228,226,0.026,227,0.026,228,3.119,229,2.476,230,5.294,231,4.8,232,4.8,233,4.401,234,3.991,235,3.752,236,2.702]],["title/components/CadastreComponent.html",[0,0.163,206,0.863]],["body/components/CadastreComponent.html",[0,0.263,1,0.789,2,1.362,3,0.365,4,0.315,5,1.128,6,1.128,7,1.128,8,0.315,10,1.128,11,1.706,12,1.415,14,1.247,15,1.04,16,1.247,23,2.381,24,1.247,26,1.941,28,0.268,32,0.718,35,1.247,46,0.946,48,0.946,49,0.035,50,0.465,51,0.415,55,0.865,56,1.232,69,0.778,71,0.527,78,1.615,85,0.365,86,0.365,112,1.968,113,1.778,144,1.346,197,1.128,198,1.487,199,1.487,200,1.128,201,1.769,202,1.128,203,1.128,204,0.946,205,1.128,206,1.483,207,1.128,208,0.946,209,1.128,210,0.946,211,1.128,212,0.946,213,1.128,214,0.946,215,1.128,216,1.541,217,1.128,218,0.946,219,1.128,220,0.946,221,1.128,222,0.946,223,1.033,224,1.128,225,1.128,226,0.024,227,0.024,237,2.865,238,3.272,239,4.543,240,4.543,241,4.543,242,3.272,243,5.082,244,3.66,245,3.446,246,4.543,247,3.446,248,3.272,249,3.272,250,2.865,251,1.615,252,2.482,253,3.446,254,3.446,255,1.615,256,2.865,257,2.865,258,4.543,259,2.865,260,3.446]],["title/interfaces/City.html",[62,1.623,82,0.943]],["body/interfaces/City.html",[0,0.192,1,0.587,3,0.271,4,0.235,8,0.235,9,1.634,11,0.704,12,0.587,13,1.634,14,0.704,15,0.587,16,0.704,17,1.911,18,1.911,19,1.736,20,1.736,21,1.911,22,2.115,23,1.736,24,0.704,25,1.847,26,1.096,27,1.847,28,0.199,29,0.567,30,3.131,31,2.77,33,1.847,34,1.847,36,1.847,37,1.847,38,1.323,41,1.634,44,2.243,45,2.243,49,0.035,50,0.481,51,0.235,52,1.583,56,1.702,59,1.847,62,2.456,63,0.587,64,0.587,66,1.939,69,0.866,70,1.583,71,0.393,72,1.847,73,1.634,74,0.84,75,1.323,76,1.465,77,1.202,78,1.202,79,1.096,80,1.847,81,1.847,82,1.111,83,1.267,84,1.857,85,0.271,86,0.271,87,0.769,88,0.84,89,1.634,90,1.847,91,1.847,92,2.36,93,1.847,94,1.911,95,3.539,96,1.847,97,1.634,98,2.668,99,2.482,100,1.847,101,2.482,102,1.634,103,1.634,104,1.847,105,1.323,106,3.79,107,1.847,108,1.847,109,1.847,110,1.096,111,1.847,112,2.883,113,2.456,114,1.847,115,1.847,116,1.634,117,1.847,118,1.847,119,1.847,120,1.847,121,1.847,122,2.77,123,1.847,124,1.847,125,1.847,126,1.847,127,1.847,128,1.847,129,1.847,130,1.847,131,1.323,132,1.847,133,1.634,134,2.77,135,1.847,136,1.847,137,3.034,138,3.429,139,1.847,140,1.634,141,1.847,142,1.847,143,1.847,144,1.698,145,2.668,146,1.847,147,1.847,148,1.202,149,1.847,150,3.131,151,1.847,152,2.668,153,1.847,154,1.096,155,2.668,156,1.847,157,1.634,158,1.847,159,3.429,160,1.847,161,1.847,162,1.847,163,1.847,164,1.634,165,1.847,166,1.847,167,1.847,168,1.847,169,1.847,170,1.847,171,2.668,172,1.634,173,1.847,174,2.668,175,1.847,176,1.465,177,2.668,178,2.668,179,2.668,180,1.847,181,2.055,182,2.36,183,2.36,184,1.847,185,1.847,186,2.668,187,1.847,188,1.847,189,1.847,190,1.847,226,0.02,227,0.02,261,1.323]],["title/injectables/CityService.html",[45,1.623,262,1.03]],["body/injectables/CityService.html",[3,0.415,4,0.358,8,0.358,28,0.304,29,0.755,32,1.027,35,1.354,42,1.401,45,2.545,46,1.181,48,1.354,49,0.035,50,0.451,51,0.451,55,0.983,63,1.129,64,1.129,69,0.868,71,0.6,83,1.355,85,0.415,86,0.415,87,1.175,88,1.954,144,1.53,226,0.026,227,0.026,229,2.021,262,1.616,263,2.021,264,3.257,265,5.401,266,4.49,267,4.934,268,2.021,269,2.925,270,4.934,271,2.312,272,4.934,273,3.918,274,3.918,275,2.786,276,4.934,277,3.918,278,4.934,279,1.836,280,1.836,281,1.674,282,2.021,283,2.237,284,3.918,285,3.918,286,1.283,287,3.918]],["title/components/ConciergeComponent.html",[0,0.163,208,0.863]],["body/components/ConciergeComponent.html",[0,0.191,1,0.445,2,0.903,3,0.206,4,0.178,5,0.637,6,0.637,7,0.637,8,0.178,10,0.637,11,1.541,12,1.268,14,0.826,15,0.843,16,0.826,17,1.9,18,1.9,19,1.726,20,1.726,21,1.9,22,2.103,23,1.726,24,0.826,26,1.286,28,0.151,29,0.461,32,0.767,35,1.011,38,2.139,40,1.553,42,0.695,46,1.137,48,1.011,49,0.035,50,0.434,51,0.468,52,1.574,55,1.041,56,1.604,61,1.239,63,1.027,64,1.027,69,0.878,70,1.286,71,0.298,74,0.637,75,1.003,76,1.11,77,0.911,78,0.911,79,0.831,83,1.19,85,0.206,86,0.206,87,0.583,92,1.239,94,1.9,95,3.153,101,1.11,105,1.003,144,0.759,181,2.049,182,2.347,183,2.347,197,0.637,198,0.986,199,0.986,200,0.637,201,1.358,202,0.637,203,0.637,204,0.534,205,0.637,206,0.534,207,0.637,208,1.138,209,0.637,210,0.534,211,0.637,212,0.534,213,0.637,214,0.534,215,0.637,216,0.534,217,0.637,218,0.534,219,0.637,220,0.534,221,0.637,222,0.534,223,0.583,224,0.637,225,0.637,226,0.016,227,0.016,252,2.168,255,1.943,286,0.637,288,1.617,289,2.168,290,2.653,291,4.113,292,3.684,293,3.684,294,3.684,295,3.684,296,3.684,297,3.684,298,3.011,299,3.011,300,4.363,301,3.684,302,4.486,303,3.684,304,3.062,305,3.684,306,3.011,307,3.011,308,4.147,309,3.062,310,1.945,311,3.023,312,1.945,313,1.945,314,3.011,315,1.945,316,3.011,317,1.945,318,3.011,319,1.945,320,1.945,321,1.945,322,4.147,323,3.684,324,3.062,325,3.448,326,4.147,327,4.147,328,1.945,329,1.945,330,1.918,331,1.945,332,1.945,333,1.945,334,1.945,335,1.945,336,1.945,337,1.945,338,1.617,339,1.617,340,1.945,341,1.945,342,1.401,343,1.617,344,1.945,345,1.945,346,3.011,347,3.011,348,1.945,349,1.945,350,1.945,351,1.945,352,3.684,353,1.945,354,1.945,355,1.945,356,4.147,357,1.945,358,2.503,359,1.945,360,1.945,361,1.945,362,3.011,363,1.945,364,1.945,365,1.945,366,1.945,367,1.945,368,1.617,369,1.401,370,1.617,371,1.401,372,1.945,373,1.617,374,1.945,375,1.617,376,1.945,377,2.503,378,1.617,379,1.11,380,1.945,381,1.945,382,1.617,383,3.011,384,1.945,385,1.617,386,1.945,387,3.011,388,1.617,389,1.945,390,1.945,391,1.945,392,1.945,393,1.945,394,1.945,395,1.945,396,1.945,397,1.945,398,1.945,399,1.945,400,1.945,401,1.945,402,1.945,403,1.945,404,1.945,405,1.945,406,1.945,407,1.945,408,1.945,409,1.945,410,1.945,411,1.945]],["title/components/CondominiumComponent.html",[0,0.163,210,0.863]],["body/components/CondominiumComponent.html",[0,0.134,1,0.699,2,0.594,3,0.21,4,0.106,5,0.381,6,0.381,7,0.381,8,0.106,10,0.381,11,1.341,12,1.094,13,1.648,14,0.543,15,0.592,16,0.543,17,1.334,24,0.543,28,0.154,29,0.303,32,0.713,35,0.543,38,1.575,41,1.945,42,0.416,46,1.142,48,0.94,49,0.035,50,0.399,51,0.399,52,2.197,55,1.135,56,1.617,61,2.969,62,1.575,63,0.592,64,0.592,66,1.091,69,0.817,71,0.178,73,0.741,74,0.381,83,0.292,85,0.123,86,0.123,87,0.349,88,1.22,89,0.741,94,0.6,97,0.741,99,0.664,101,1.476,102,0.741,103,0.741,105,1.021,110,1.866,112,2.391,113,2.16,116,1.648,122,0.741,131,1.922,133,1.648,134,0.741,140,0.741,144,1.635,154,1.991,176,1.13,181,1.337,191,2.538,192,2.15,197,0.381,198,0.648,199,0.648,200,0.381,201,1,202,0.381,203,0.381,204,0.319,205,0.381,206,0.838,207,0.381,208,0.838,209,0.381,210,0.838,211,0.381,212,0.838,213,0.381,214,0.319,215,0.381,216,0.319,217,0.381,218,0.838,219,0.381,220,0.838,221,0.381,222,0.838,223,0.775,224,0.381,225,0.381,226,0.011,227,0.011,233,0.967,238,0.837,242,1.426,244,1.862,248,1.426,249,1.426,251,0.545,255,1.43,257,0.967,259,1.646,268,0.6,269,1.575,271,0.928,279,0.545,281,0.497,282,0.6,286,1.371,291,2.15,300,2.15,304,0.967,309,2.15,325,0.967,330,1.945,358,0.967,368,0.967,370,0.967,371,1.426,373,0.967,375,0.967,377,0.967,378,0.967,382,0.967,385,0.967,388,0.967,412,0.741,413,0.967,414,1.426,415,3.442,416,4.367,417,1.98,418,1.476,419,2.586,420,2.15,421,1.862,422,2.586,423,1.262,424,2.586,425,1.646,426,5.212,427,2.586,428,2.586,429,2.586,430,1.98,431,1.98,432,3.053,433,3.053,434,1.98,435,3.053,436,1.98,437,3.053,438,3.053,439,2.15,440,1.646,441,3.053,442,2.15,443,2.538,444,2.15,445,2.538,446,2.27,447,1.98,448,1.163,449,1.98,450,1.163,451,1.98,452,2.846,453,1.163,454,1.163,455,1.13,456,1.163,457,1.163,458,1.98,459,1.212,460,1.163,461,1.163,462,1.98,463,1.163,464,1.163,465,1.163,466,1.98,467,1.163,468,1.163,469,1.98,470,2.586,471,1.163,472,1.163,473,1.163,474,1.163,475,1.163,476,1.163,477,1.163,478,1.163,479,1.163,480,1.163,481,1.163,482,1.163,483,0.837,484,0.967,485,3.481,486,1.163,487,1.163,488,1.163,489,1.163,490,1.163,491,1.163,492,0.664,493,1.163,494,0.967,495,0.967,496,0.837,497,1.163,498,1.163,499,0.967,500,0.967,501,0.741,502,1.163,503,1.163,504,1.163,505,4.367,506,5.276,507,1.163,508,0.741,509,1.163,510,0.967,511,1.163,512,1.163,513,3.053,514,1.646,515,1.98,516,1.98,517,1.163,518,1.163,519,1.163,520,1.163,521,1.163,522,1.163,523,3.424,524,1.98,525,1.98,526,1.163,527,1.98,528,1.163,529,1.163,530,1.163,531,2.586,532,1.163,533,1.163,534,1.163,535,1.163,536,1.98,537,1.163,538,1.163,539,1.163,540,1.163,541,1.98,542,1.163,543,1.163,544,1.163,545,1.163,546,0.967,547,1.163,548,0.967,549,1.163,550,3.424,551,1.163,552,1.98,553,1.163,554,1.163,555,1.163,556,1.646,557,1.646,558,1.646,559,1.163,560,3.631,561,1.163,562,1.646,563,1.646,564,1.163,565,1.163,566,1.163,567,1.163,568,1.163,569,3.305,570,3.305,571,3.976,572,1.163,573,3.976,574,3.976,575,1.163,576,1.163,577,1.163,578,1.163,579,1.98,580,1.163,581,0.967,582,2.538,583,1.163,584,1.98,585,1.163,586,1.163,587,1.163,588,1.163,589,1.98,590,0.967,591,1.163,592,1.98,593,1.163,594,1.163,595,1.163,596,1.163,597,1.163,598,1.163,599,1.163,600,1.163,601,1.163,602,1.163,603,1.163,604,1.163,605,2.586,606,2.586,607,1.163,608,1.163,609,1.98,610,1.163,611,1.163,612,1.98,613,1.98,614,1.98,615,1.98,616,1.163,617,3.053,618,1.163,619,1.163,620,1.163,621,2.586,622,1.163,623,1.98,624,1.163,625,1.163,626,0.967,627,1.163,628,1.163,629,1.163,630,1.98,631,1.163,632,1.163,633,1.163,634,1.163,635,1.163,636,0.741,637,1.163,638,1.163,639,1.98,640,1.163,641,1.163,642,1.163,643,0.6,644,1.163,645,1.163,646,1.163,647,1.163,648,1.163,649,1.163,650,1.163,651,1.163,652,0.967,653,1.98,654,2.15,655,1.163,656,1.163,657,1.163,658,1.163,659,1.163,660,1.163,661,1.163,662,1.163,663,1.163,664,1.163,665,1.163,666,1.163,667,1.163,668,1.163,669,1.163,670,1.163,671,1.163,672,1.163,673,1.163,674,1.426,675,2.586,676,1.98,677,1.163,678,1.646,679,0.741,680,1.163,681,1.646,682,1.163,683,1.163,684,1.163,685,1.163,686,1.163,687,1.163,688,1.163,689,1.163,690,1.163,691,1.163,692,1.646,693,2.15,694,0.967,695,1.646,696,1.98,697,1.163,698,1.163,699,1.163,700,1.163,701,1.98,702,1.163,703,1.426,704,1.646,705,1.163,706,1.163,707,1.163,708,1.163,709,1.163,710,1.163,711,1.163,712,1.163,713,1.163]],["title/injectables/CondominiumService.html",[262,1.03,311,2.004]],["body/injectables/CondominiumService.html",[3,0.392,4,0.339,8,0.339,28,0.288,29,0.729,32,0.771,35,1.306,42,1.323,46,1.245,48,1.016,49,0.035,50,0.339,51,0.339,55,1.32,63,1.204,64,1.204,69,0.85,71,0.567,85,0.392,86,0.392,87,1.11,88,2.004,226,0.026,227,0.026,229,1.909,262,1.558,263,1.909,268,1.909,269,2.864,271,2.23,275,3.084,279,1.735,280,1.735,281,1.582,282,1.909,283,2.114,286,1.722,311,3.033,714,3.077,715,4.373,716,4.373,717,4.373,718,5.552,719,5.552,720,5.552,721,4.759,722,3.702,723,3.702,724,3.702,725,4.759,726,3.702,727,4.759,728,3.702,729,4.759,730,3.702,731,3.702,732,3.702]],["title/components/CoproprietaireComponent.html",[0,0.163,212,0.863]],["body/components/CoproprietaireComponent.html",[0,0.279,1,0.895,2,1.478,3,0.414,4,0.358,5,1.28,6,1.28,7,1.28,8,0.358,10,1.28,11,1.735,12,1.44,14,1.353,15,1.128,16,1.073,24,1.353,26,2.105,49,0.034,50,0.451,69,0.599,71,0.599,85,0.414,86,0.414,197,1.28,198,1.614,199,1.614,200,1.28,201,1.855,202,1.28,203,1.28,204,1.073,205,1.28,206,1.073,207,1.28,208,1.073,209,1.28,210,1.073,211,1.28,212,1.555,213,1.28,214,1.073,215,1.28,216,1.073,217,1.28,218,1.073,219,1.28,220,1.073,221,1.28,222,1.073,223,1.173,224,1.28,225,1.28,226,0.026,227,0.026,733,3.251,734,5.666,735,4.928,736,4.928,737,4.928]],["title/interfaces/Country.html",[66,1.124,82,0.943]],["body/interfaces/Country.html",[3,0.45,4,0.389,8,0.389,28,0.33,29,0.795,32,1.215,49,0.034,50,0.557,51,0.475,66,2.086,82,1.681,83,1.596,84,2.493,85,0.593,226,0.028,227,0.028,261,2.193,379,2.964,455,2.428,459,2.626,643,2.193,738,2.709,739,2.89,740,2.709,741,2.193,742,3.062,743,3.062,744,3.062,745,3.062,746,3.062]],["title/interfaces/Country-1.html",[66,0.942,82,0.791,131,1.36]],["body/interfaces/Country-1.html",[0,0.191,1,0.582,3,0.269,4,0.232,8,0.232,9,1.62,11,0.698,12,0.582,13,1.62,14,0.698,15,0.582,16,0.698,17,1.898,18,1.898,19,1.724,20,1.724,21,1.898,22,2.101,23,1.724,24,0.698,25,1.83,26,1.086,27,1.83,28,0.197,29,0.563,30,3.115,31,2.756,33,1.83,34,1.83,36,1.83,37,1.83,38,1.311,41,1.62,44,2.231,45,2.231,49,0.035,50,0.48,51,0.337,52,1.572,56,1.695,59,1.83,62,2.231,63,0.582,64,0.582,66,1.98,69,0.864,70,1.572,71,0.389,72,1.83,73,1.62,74,0.832,75,1.311,76,1.451,77,1.191,78,1.191,79,1.086,80,1.83,81,1.83,82,1.103,83,1.357,84,2.241,85,0.269,86,0.269,87,0.762,88,0.832,89,1.62,90,1.83,91,1.83,92,2.345,93,1.83,94,1.898,95,3.53,96,1.83,97,1.62,98,2.65,99,2.469,100,1.83,101,2.469,102,1.62,103,1.62,104,1.83,105,1.311,106,3.778,107,1.83,108,1.83,109,1.83,110,1.086,111,1.83,112,2.873,113,2.445,114,1.83,115,1.83,116,1.62,117,1.83,118,1.83,119,1.83,120,1.83,121,1.83,122,2.756,123,1.83,124,1.83,125,1.83,126,1.83,127,1.83,128,1.83,129,1.83,130,1.83,131,1.311,132,1.83,133,1.62,134,2.756,135,1.83,136,1.83,137,3.021,138,3.414,139,1.83,140,1.62,141,1.83,142,1.83,143,1.83,144,1.689,145,2.65,146,1.83,147,1.83,148,1.191,149,1.83,150,3.115,151,1.83,152,2.65,153,1.83,154,1.086,155,2.65,156,1.83,157,1.62,158,1.83,159,3.414,160,1.83,161,1.83,162,1.83,163,1.83,164,1.62,165,1.83,166,1.83,167,1.83,168,1.83,169,1.83,170,1.83,171,2.65,172,1.62,173,1.83,174,2.65,175,1.83,176,1.451,177,2.65,178,2.65,179,2.65,180,1.83,181,2.048,182,2.345,183,2.345,184,1.83,185,1.83,186,2.65,187,1.83,188,1.83,189,1.83,190,1.83,226,0.02,227,0.02,261,1.311]],["title/injectables/CountryService.html",[44,1.623,262,1.03]],["body/injectables/CountryService.html",[3,0.438,4,0.379,8,0.379,28,0.322,29,0.782,31,3.53,32,0.863,35,1.402,42,1.481,44,2.635,46,1.154,48,1.137,49,0.035,50,0.379,51,0.379,55,1.039,63,0.948,64,0.948,69,0.885,71,0.634,85,0.438,86,0.438,87,1.243,88,1.814,226,0.027,227,0.027,229,2.137,262,1.673,263,2.137,268,2.137,269,2.983,271,2.394,275,2.858,279,1.941,280,1.941,281,1.77,282,2.137,283,2.366,286,1.357,747,3.444,748,4.808,749,5.109,750,4.143,751,5.109,752,4.143]],["title/interfaces/Customer.html",[82,0.943,741,1.623]],["body/interfaces/Customer.html",[3,0.386,4,0.333,8,0.333,28,0.283,29,0.721,32,1.332,49,0.034,50,0.536,51,0.563,66,2.159,82,1.566,83,1.589,84,1.558,85,0.553,226,0.025,227,0.025,261,1.881,379,3.402,455,2.982,459,2.859,643,2.848,738,2.324,739,3.115,740,2.324,741,2.431,742,3.976,743,3.976,744,3.976,745,3.976,746,3.976]],["title/components/DisplayCondominiumComponent.html",[0,0.163,214,0.863]],["body/components/DisplayCondominiumComponent.html",[0,0.178,1,0.399,2,0.829,3,0.363,4,0.16,5,0.571,6,0.571,7,0.571,8,0.16,10,0.571,11,1.503,12,1.189,14,0.759,15,0.975,16,0.759,18,1.772,19,1.609,20,1.609,22,1.961,24,0.759,28,0.136,29,0.423,32,0.715,35,0.759,38,2.016,42,0.624,46,1.168,48,0.943,49,0.035,50,0.513,51,0.485,55,1.137,56,1.523,63,0.894,64,1.161,69,0.882,71,0.267,74,0.571,76,0.996,77,0.817,79,0.745,83,1.069,85,0.185,86,0.185,87,0.523,88,0.571,105,1.426,110,1.181,148,0.817,154,0.745,164,1.762,197,0.571,198,0.905,199,0.905,200,0.571,201,1.28,202,0.571,203,0.571,204,0.479,205,0.571,206,0.479,207,0.571,208,0.479,209,0.571,210,1.244,211,0.571,212,0.479,213,0.571,214,1.073,215,0.571,216,0.479,217,0.571,218,0.479,219,0.571,220,0.479,221,0.571,222,0.479,223,0.523,224,0.571,225,0.571,226,0.015,227,0.015,236,1.256,251,1.831,252,1.256,255,1.295,279,0.817,286,1.484,289,1.991,290,2.474,330,2.49,343,1.45,369,1.991,379,2.231,414,1.991,418,1.961,421,2.474,425,2.298,439,3.249,455,2.231,459,1.295,492,0.996,496,1.256,569,3.768,581,2.298,636,1.762,643,0.9,679,1.762,703,1.991,739,1.772,740,3.312,741,1.772,753,4.709,754,4.709,755,1.45,756,4.095,757,3.434,758,2.765,759,2.855,760,3.434,761,2.855,762,3.434,763,2.855,764,3.434,765,3.434,766,4.533,767,3.434,768,3.434,769,3.434,770,3.434,771,3.434,772,2.298,773,2.765,774,3.908,775,3.908,776,1.744,777,4.749,778,2.765,779,2.765,780,3.542,781,1.744,782,1.744,783,2.765,784,1.744,785,2.765,786,2.298,787,2.765,788,1.744,789,1.744,790,1.744,791,1.744,792,1.744,793,2.765,794,1.744,795,1.744,796,1.744,797,1.744,798,1.744,799,2.765,800,1.744,801,1.744,802,1.744,803,1.744,804,1.744,805,1.744,806,1.744,807,1.45,808,2.298,809,1.45,810,1.744,811,1.744,812,1.744,813,1.744,814,1.744,815,1.744,816,3.434,817,1.744,818,1.744,819,1.744,820,1.744,821,1.744,822,1.744,823,1.744,824,1.744,825,1.744,826,1.744,827,1.744,828,1.744,829,1.744,830,1.744,831,1.744,832,1.744,833,1.744,834,1.744,835,1.744,836,1.744,837,1.744,838,1.744,839,1.744,840,1.744,841,1.744,842,1.744,843,1.744,844,1.744,845,1.744,846,1.744,847,1.744,848,1.744,849,1.744,850,3.434,851,3.434,852,3.434,853,3.434,854,2.765,855,1.744,856,1.744,857,2.765,858,1.744,859,1.744,860,1.744,861,1.744,862,1.744,863,1.744,864,1.744,865,1.744,866,4.26,867,2.765,868,2.765,869,2.298,870,2.765,871,2.765,872,2.765,873,2.765,874,1.744,875,2.765,876,2.765,877,2.765,878,2.765,879,2.765,880,1.744]],["title/components/FileUploadComponent.html",[0,0.163,216,0.863]],["body/components/FileUploadComponent.html",[0,0.18,1,0.406,2,0.84,3,0.188,4,0.162,5,0.58,6,0.58,7,0.58,8,0.509,10,0.58,11,1.509,12,1.24,14,0.769,15,0.641,16,0.769,19,1.627,24,0.769,28,0.414,29,0.429,32,0.95,35,0.769,40,1.445,46,1.183,48,1.253,49,0.035,50,0.453,51,0.478,55,1.199,56,1.99,61,3.452,63,1.134,64,1.134,69,0.781,70,1.483,71,0.271,79,0.757,83,1.077,85,0.188,86,0.188,88,1.67,94,0.914,110,2.179,113,1.445,144,1.54,148,0.831,154,0.757,176,1.012,181,1.54,197,0.58,198,0.917,199,0.917,200,0.58,201,1.291,202,0.58,203,0.58,204,0.487,205,0.58,206,0.487,207,0.58,208,0.487,209,0.58,210,0.487,211,0.58,212,0.487,213,0.58,214,0.487,215,0.58,216,1.082,217,0.58,218,0.487,219,0.58,220,0.487,221,0.58,222,0.487,223,0.532,224,0.58,225,0.58,226,0.015,227,0.015,238,1.277,242,2.017,244,2.5,248,1.277,249,2.017,251,0.831,255,0.831,256,1.474,286,0.917,342,2.84,412,1.13,415,2.84,418,1.982,420,2.886,423,1.785,459,2.322,483,2.5,484,3.57,492,1.012,494,1.474,495,1.474,556,2.328,557,2.328,558,2.328,560,2.328,562,2.328,563,2.328,652,1.474,674,1.277,679,1.785,763,2.886,772,2.328,786,2.328,809,1.474,881,1.474,882,3.943,883,3.471,884,3.471,885,3.471,886,2.8,887,2.5,888,3.973,889,4.294,890,4.294,891,3.471,892,2.513,893,2.8,894,2.8,895,2.8,896,2.8,897,2.8,898,3.943,899,2.8,900,2.886,901,3.471,902,1.773,903,1.773,904,2.8,905,4.564,906,1.773,907,2.8,908,1.773,909,3.943,910,2.8,911,1.773,912,2.8,913,3.471,914,1.773,915,1.773,916,2.8,917,1.773,918,1.773,919,2.8,920,1.773,921,2.8,922,1.773,923,1.773,924,2.8,925,1.773,926,1.773,927,2.8,928,2.8,929,2.8,930,1.773,931,2.8,932,2.8,933,1.773,934,2.8,935,1.773,936,1.773,937,1.474,938,1.773,939,1.773,940,1.773,941,1.773,942,1.773,943,1.773,944,1.773,945,1.773,946,1.773,947,1.773,948,1.773,949,1.474,950,1.773,951,1.773,952,1.773,953,1.773,954,1.773,955,1.773,956,1.773,957,1.773,958,1.773,959,1.773,960,1.773,961,1.773,962,1.773,963,1.474,964,1.773,965,1.773,966,1.773,967,1.773,968,1.773,969,1.773,970,1.773,971,1.474,972,1.773,973,1.773,974,1.773,975,1.773,976,1.773,977,1.773,978,1.773,979,1.773,980,2.8,981,2.8,982,2.8,983,2.8,984,3.278,985,3.943,986,3.943,987,2.8,988,2.8,989,2.8,990,2.8,991,2.8,992,2.8]],["title/components/FtpblueprintComponent.html",[0,0.163,218,0.863]],["body/components/FtpblueprintComponent.html",[0,0.268,1,0.821,2,1.398,3,0.379,4,0.328,5,1.174,6,1.174,7,1.174,8,0.328,10,1.174,11,1.716,12,1.423,14,1.28,15,1.067,16,1.28,20,2.428,21,2.672,23,2.428,24,1.28,26,1.992,28,0.279,40,2.405,46,0.747,49,0.035,50,0.426,51,0.328,52,2.214,69,0.892,70,1.992,71,0.549,74,1.174,75,1.85,77,1.68,78,1.68,85,0.379,86,0.379,197,1.174,198,1.527,199,1.527,200,1.174,201,1.796,202,1.174,203,1.174,204,0.984,205,1.174,206,0.984,207,1.174,208,0.984,209,1.174,210,0.984,211,1.174,212,0.984,213,1.174,214,0.984,215,1.174,216,1.506,217,1.174,218,1.506,219,1.174,220,0.984,221,1.174,222,0.984,223,1.075,224,1.174,225,1.174,226,0.025,227,0.025,250,2.981,442,4.307,514,3.876,993,2.981,994,4.662,995,4.662,996,3.586]],["title/components/InformationComponent.html",[0,0.163,220,0.863]],["body/components/InformationComponent.html",[0,0.225,1,0.589,2,1.113,3,0.272,4,0.235,5,0.842,6,0.842,7,0.842,8,0.235,10,0.842,11,1.629,12,1.346,14,1.019,15,0.849,16,1.019,17,2.246,18,2.246,19,2.04,20,2.04,21,2.246,23,2.04,24,1.019,28,0.2,40,1.914,46,0.536,49,0.035,50,0.436,51,0.235,52,1.86,69,0.891,70,1.586,71,0.394,74,0.842,75,1.327,77,1.205,78,1.205,79,1.099,85,0.272,86,0.272,99,3.173,110,1.586,148,2.04,154,2.25,157,2.365,172,3.038,181,1.004,197,0.842,198,1.215,199,1.215,200,0.842,201,1.561,202,0.842,203,0.842,204,0.706,205,0.842,206,0.706,207,0.842,208,0.706,209,0.842,210,0.706,211,0.842,212,0.706,213,0.842,214,0.706,215,0.842,216,0.706,217,0.842,218,0.706,219,0.842,220,1.308,221,0.842,222,0.706,223,0.771,224,0.842,225,0.842,226,0.02,227,0.02,255,1.205,290,1.852,324,3.085,338,3.62,339,2.138,369,3.793,412,1.639,418,2.486,423,2.365,492,1.468,508,2.365,510,3.963,546,2.138,654,3.085,674,3.136,678,3.085,679,3.038,681,2.138,692,2.138,693,3.085,694,2.138,695,2.138,703,1.852,704,3.62,869,3.963,971,2.138,997,2.138,998,3.711,999,4.354,1000,4.354,1001,4.354,1002,4.354,1003,3.711,1004,4.354,1005,2.572,1006,2.572,1007,2.572,1008,2.572,1009,2.572,1010,2.572,1011,2.572,1012,4.767,1013,2.572,1014,3.711,1015,3.711,1016,3.711,1017,4.767,1018,2.572,1019,4.767,1020,4.767,1021,2.572,1022,2.572,1023,2.572,1024,2.572,1025,2.572,1026,2.572,1027,2.572,1028,3.711,1029,3.711,1030,3.711,1031,4.354,1032,2.572,1033,2.572,1034,2.572,1035,2.572,1036,2.572,1037,2.572,1038,2.572,1039,3.711,1040,2.572,1041,2.572,1042,2.572,1043,2.572,1044,2.572,1045,2.572,1046,2.572,1047,2.572,1048,2.572,1049,2.572,1050,2.572,1051,2.572,1052,2.572,1053,2.572,1054,2.572,1055,2.572]],["title/interfaces/Representative.html",[82,0.943,739,1.623]],["body/interfaces/Representative.html",[3,0.45,4,0.389,8,0.389,28,0.33,29,0.795,32,1.215,49,0.034,50,0.557,51,0.475,66,2.003,82,1.681,83,1.596,84,1.817,85,0.593,226,0.028,227,0.028,261,2.193,379,2.964,455,2.428,459,2.626,643,2.193,738,2.709,739,3.01,740,3.719,741,2.193,742,3.062,743,3.062,744,3.062,745,3.062,746,3.062]],["title/injectables/UniqueCheckService.html",[262,1.03,446,1.796]],["body/injectables/UniqueCheckService.html",[3,0.402,4,0.348,8,0.348,28,0.295,29,0.741,32,1.109,35,1.329,42,1.359,46,1.168,48,1.462,49,0.035,50,0.513,51,0.487,55,1.215,63,0.87,64,0.87,69,0.858,71,0.582,83,1.485,85,0.402,86,0.402,87,1.141,88,1.744,137,2.423,226,0.026,227,0.026,229,1.962,262,1.586,263,1.962,268,1.962,269,2.893,271,2.269,275,2.988,279,1.782,280,1.782,281,1.625,282,1.962,283,2.171,286,1.586,446,2.765,508,2.423,1056,4.815,1057,3.162,1058,4.429,1059,4.025,1060,4.025,1061,4.842,1062,4.842,1063,3.803,1064,4.842,1065,3.803,1066,4.842,1067,3.803,1068,3.803,1069,3.803,1070,3.803,1071,3.803]],["title/classes/UniqueValidator.html",[86,0.333,501,2.004]],["body/classes/UniqueValidator.html",[3,0.37,4,0.32,8,0.32,15,1.049,28,0.272,32,0.955,35,1.259,46,0.955,48,1.259,49,0.035,50,0.468,51,0.419,55,1.15,69,0.832,74,1.145,85,0.37,86,0.37,181,1.791,226,0.025,227,0.025,275,2.64,280,1.638,286,2,446,3.456,499,2.906,500,2.906,501,2.922,508,2.228,636,2.922,1059,3.812,1060,3.812,1072,3.496,1073,4.254,1074,2.906,1075,5.789,1076,4.585,1077,3.496,1078,5.641,1079,4.585,1080,3.496,1081,5.117,1082,3.496,1083,2.906,1084,3.496,1085,3.496,1086,4.585,1087,4.585,1088,5.432,1089,3.496,1090,4.585,1091,4.585,1092,3.496,1093,4.585,1094,4.585,1095,4.585,1096,3.812,1097,3.812,1098,4.585,1099,4.585,1100,3.496,1101,3.496]],["title/components/UnitComponent.html",[0,0.163,222,0.863]],["body/components/UnitComponent.html",[0,0.215,1,0.542,2,1.048,3,0.251,4,0.217,5,0.775,6,0.775,7,0.775,8,0.217,10,0.775,11,1.605,12,1.325,14,0.959,15,0.8,16,0.959,24,0.959,28,0.356,29,0.535,32,0.865,35,0.959,40,1.803,42,0.847,46,1.155,48,1.14,49,0.035,50,0.447,51,0.419,52,2.089,55,1.15,56,1.829,63,0.8,64,0.8,69,0.783,70,1.493,71,0.363,74,0.775,85,0.251,86,0.251,87,0.71,197,0.775,198,1.144,199,1.144,200,0.775,201,1.501,202,0.775,203,0.775,204,0.65,205,0.775,206,0.65,207,0.775,208,0.65,209,0.775,210,0.65,211,0.775,212,0.65,213,0.775,214,0.65,215,0.775,216,0.65,217,0.775,218,0.65,219,0.775,220,0.65,221,0.775,222,1.258,223,1.375,224,0.775,225,0.775,226,0.019,227,0.019,286,1.144,371,3.302,412,1.509,418,2.371,421,2.991,423,2.227,440,2.905,443,3.452,444,2.905,445,3.811,459,1.946,483,1.706,485,4.253,492,1.352,496,1.706,548,2.905,582,2.905,636,2.646,643,2.142,759,3.452,761,3.452,807,1.969,808,1.969,984,2.905,1102,1.969,1103,4.153,1104,3.494,1105,4.153,1106,4.89,1107,4.584,1108,4.584,1109,3.494,1110,3.494,1111,4.153,1112,2.368,1113,3.494,1114,2.368,1115,2.368,1116,2.368,1117,3.494,1118,2.368,1119,3.494,1120,2.368,1121,3.494,1122,2.368,1123,3.494,1124,2.368,1125,2.368,1126,2.368,1127,2.368,1128,2.368,1129,2.368,1130,2.368,1131,2.368,1132,2.368,1133,2.368,1134,2.368,1135,2.368,1136,4.584,1137,4.584,1138,2.368,1139,2.368,1140,2.368,1141,2.368,1142,2.368,1143,3.494,1144,2.368,1145,2.368,1146,2.368,1147,2.368,1148,2.368,1149,2.368,1150,4.584,1151,3.494,1152,2.368,1153,2.368,1154,2.368,1155,3.494,1156,2.368,1157,2.368,1158,2.368,1159,2.368,1160,2.368,1161,2.368,1162,2.368,1163,2.368,1164,2.368,1165,2.368,1166,2.368,1167,2.368,1168,2.368,1169,2.368]],["title/injectables/UploadService.html",[262,1.03,892,2.004]],["body/injectables/UploadService.html",[3,0.37,4,0.32,8,0.529,28,0.272,29,0.702,32,1.066,35,1.259,42,1.25,46,1.131,48,1.405,49,0.035,50,0.468,51,0.468,55,1.15,63,0.8,64,0.8,69,0.832,71,0.535,83,1.284,84,1.493,85,0.37,86,0.37,87,1.048,88,1.895,144,1.365,181,2.121,226,0.025,227,0.025,229,1.803,251,2.149,262,1.501,263,1.803,268,1.803,269,2.802,271,2.149,275,2.64,279,1.638,280,1.638,281,1.493,282,1.803,283,1.996,286,1.501,452,4.516,590,3.812,892,2.922,900,4.516,963,2.906,1083,2.906,1170,2.906,1171,5.117,1172,4.585,1173,4.585,1174,4.585,1175,4.585,1176,3.496,1177,4.585,1178,3.496,1179,4.585,1180,4.585,1181,3.496,1182,3.496,1183,3.496,1184,3.496,1185,3.496,1186,5.117,1187,3.496,1188,3.496,1189,3.496,1190,3.496,1191,3.496,1192,4.585,1193,4.585,1194,2.906,1195,3.496,1196,3.496,1197,3.496,1198,3.496]],["title/coverage.html",[1199,3.553]],["body/coverage.html",[0,0.316,1,0.76,8,0.304,9,3.18,12,0.76,44,1.714,45,1.714,49,0.035,51,0.304,62,1.714,66,1.585,82,1.664,86,0.352,110,2.757,204,0.912,206,0.912,208,0.912,210,0.912,212,0.912,214,0.912,216,0.912,218,0.912,220,0.912,222,0.912,226,0.024,227,0.024,228,2.762,237,2.762,251,1.557,262,1.869,264,2.762,281,1.894,288,2.762,311,2.117,342,3.193,413,2.762,446,1.897,501,2.117,714,2.762,733,2.762,738,3.18,739,1.714,741,1.714,747,2.762,753,2.762,754,2.762,755,2.762,756,2.762,780,2.762,881,2.762,887,2.393,892,2.117,993,2.762,997,2.762,1056,2.762,1057,2.762,1073,2.762,1074,2.762,1102,2.762,1170,2.762,1199,2.762,1200,3.323,1201,3.323,1202,3.323,1203,3.686,1204,5.993,1205,2.393,1206,5.325,1207,3.686,1208,5.707,1209,2.762,1210,2.762,1211,2.762,1212,4.434,1213,5.547,1214,3.323,1215,3.323,1216,3.323,1217,4.434,1218,3.323,1219,4.99,1220,3.323,1221,3.323,1222,3.323,1223,3.323,1224,2.762,1225,2.762,1226,2.762,1227,2.762,1228,3.323]],["title/dependencies.html",[1229,1.899,1230,3.141]],["body/dependencies.html",[49,0.035,71,0.679,74,1.452,79,1.895,226,0.029,227,0.029,236,3.195,280,2.079,1230,3.688,1231,4.436,1232,6.311,1233,4.436,1234,5.708,1235,5.326,1236,4.436,1237,3.688,1238,4.436,1239,3.688,1240,4.436,1241,4.436,1242,4.436,1243,4.436,1244,3.688,1245,4.436,1246,4.436,1247,4.436,1248,4.436,1249,4.436,1250,4.436]],["title/miscellaneous/functions.html",[1251,1.68,1252,3.141]],["body/miscellaneous/functions.html",[12,1.353,28,0.375,49,0.033,55,1.403,56,1.723,226,0.03,227,0.03,1203,4.913,1205,4.256,1251,3.072,1252,4.007,1253,4.82]],["title/index.html",[28,0.205,1254,2.636,1255,2.636]],["body/index.html",[0,0.282,4,0.365,49,0.027,50,0.365,84,1.705,223,1.497,226,0.027,227,0.027,234,3.317,251,1.87,289,2.874,570,4.149,888,3.317,1097,3.317,1205,4.232,1229,2.874,1237,4.149,1239,3.317,1256,4.991,1257,3.99,1258,5.447,1259,5.447,1260,3.317,1261,3.99,1262,6.081,1263,3.99,1264,3.99,1265,3.99,1266,3.99,1267,3.99,1268,3.99,1269,3.99,1270,3.99,1271,3.99,1272,5.447,1273,5.447,1274,3.99,1275,5.707,1276,3.99,1277,3.99,1278,3.99,1279,3.99,1280,4.991,1281,5.707,1282,3.99,1283,4.991,1284,4.991,1285,3.99,1286,5.994,1287,3.99,1288,3.99,1289,3.99,1290,3.99,1291,3.99,1292,3.317,1293,3.99,1294,3.99,1295,3.99,1296,5.447,1297,3.99,1298,3.99,1299,3.99,1300,2.874,1301,3.99,1302,3.99]],["title/modules.html",[1303,3.553]],["body/modules.html",[49,0.031,226,0.031,227,0.031,1303,4.184]],["title/overview.html",[1300,3.078]],["body/overview.html",[2,1.479,49,0.03,86,0.522,131,2.543,226,0.03,227,0.03,261,2.543,263,2.543,1300,3.551,1304,4.93,1305,4.93,1306,4.93]],["title/properties.html",[29,0.578,1229,1.899]],["body/properties.html",[29,0.764,49,0.032,226,0.031,227,0.031,1260,4.151,1307,4.994]],["title/miscellaneous/variables.html",[1251,1.68,1308,3.141]],["body/miscellaneous/variables.html",[15,1.084,28,0.285,49,0.035,51,0.506,63,1.343,64,1.343,148,1.721,154,2.023,226,0.025,227,0.025,255,2.219,266,3.054,271,1.721,281,2.366,330,2.341,414,3.411,415,2.646,626,3.937,715,3.054,716,3.054,717,3.054,748,3.054,887,3.775,937,3.054,949,3.054,1058,3.054,1096,3.054,1194,3.054,1207,3.054,1209,4.357,1210,3.054,1211,3.937,1224,3.054,1225,3.054,1226,3.054,1227,3.937,1244,3.937,1251,2.341,1292,3.054,1308,3.054,1309,3.674,1310,3.674,1311,4.736,1312,3.674,1313,3.674,1314,4.736,1315,3.674,1316,3.674,1317,3.674,1318,3.674,1319,3.674,1320,3.674,1321,3.674,1322,3.674,1323,3.674,1324,3.674,1325,5.241,1326,3.674,1327,3.674,1328,3.674,1329,3.674,1330,3.674,1331,4.736,1332,4.736,1333,4.736,1334,3.674,1335,3.674,1336,3.674,1337,3.674,1338,3.674,1339,3.674,1340,3.674,1341,3.674,1342,3.674,1343,3.674,1344,3.674,1345,3.674]]],"invertedIndex":[["",{"_index":49,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"interfaces/City.html":{},"injectables/CityService.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"components/CoproprietaireComponent.html":{},"interfaces/Country.html":{},"interfaces/Country-1.html":{},"injectables/CountryService.html":{},"interfaces/Customer.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"interfaces/Representative.html":{},"injectables/UniqueCheckService.html":{},"classes/UniqueValidator.html":{},"components/UnitComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":110,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/CondominiumComponent.html":{},"interfaces/Country-1.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/InformationComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1307,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":689,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["0.14.3",{"_index":1250,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1204,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1212,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1214,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1216,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1218,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1215,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1206,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1213,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1221,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1219,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1220,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1217,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":131,"title":{"interfaces/Country-1.html":{}},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/CondominiumComponent.html":{},"interfaces/Country-1.html":{},"overview.html":{}}}],["1.6rem",{"_index":1037,"title":{},"body":{"components/InformationComponent.html":{}}}],["10",{"_index":932,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["100",{"_index":679,"title":{},"body":{"components/CondominiumComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/InformationComponent.html":{}}}],["1024",{"_index":966,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["10px",{"_index":692,"title":{},"body":{"components/CondominiumComponent.html":{},"components/InformationComponent.html":{}}}],["11",{"_index":1304,"title":{},"body":{"overview.html":{}}}],["12",{"_index":1034,"title":{},"body":{"components/InformationComponent.html":{}}}],["17.18.9",{"_index":1245,"title":{},"body":{"dependencies.html":{}}}],["18.1.0",{"_index":1232,"title":{},"body":{"dependencies.html":{}}}],["18.1.2",{"_index":1239,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["1mb",{"_index":981,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["2",{"_index":133,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/CondominiumComponent.html":{},"interfaces/Country-1.html":{}}}],["2.3.0",{"_index":1248,"title":{},"body":{"dependencies.html":{}}}],["20px",{"_index":681,"title":{},"body":{"components/CondominiumComponent.html":{},"components/InformationComponent.html":{}}}],["3",{"_index":674,"title":{},"body":{"components/CondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/InformationComponent.html":{}}}],["3000",{"_index":563,"title":{},"body":{"components/CondominiumComponent.html":{},"components/FileUploadComponent.html":{}}}],["30px",{"_index":696,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["3166",{"_index":130,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["4",{"_index":675,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["4.18.2",{"_index":1241,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":517,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["4px",{"_index":686,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["5",{"_index":1306,"title":{},"body":{"overview.html":{}}}],["500",{"_index":1030,"title":{},"body":{"components/InformationComponent.html":{}}}],["6",{"_index":1305,"title":{},"body":{"overview.html":{}}}],["7.0.0",{"_index":1243,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":1246,"title":{},"body":{"dependencies.html":{}}}],["8px",{"_index":687,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["92",{"_index":702,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["absolute",{"_index":700,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["abstractcontrol",{"_index":1081,"title":{},"body":{"classes/UniqueValidator.html":{}}}],["accept",{"_index":555,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["accessors",{"_index":440,"title":{},"body":{"components/CondominiumComponent.html":{},"components/UnitComponent.html":{}}}],["actif",{"_index":535,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["activeindex",{"_index":426,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["activity",{"_index":744,"title":{},"body":{"interfaces/Country.html":{},"interfaces/Customer.html":{},"interfaces/Representative.html":{}}}],["activityvalues",{"_index":764,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["actual_component",{"_index":225,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["add",{"_index":1292,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["address",{"_index":13,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/CondominiumComponent.html":{},"interfaces/Country-1.html":{}}}],["address'},{'name",{"_index":203,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["address.component.html",{"_index":25,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["address.component.scss",{"_index":27,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["address/address.component",{"_index":486,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["address_complement",{"_index":512,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["address_complement_concierge",{"_index":519,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["addresscomponent",{"_index":1,"title":{"components/AddressComponent.html":{}},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"interfaces/Country-1.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{},"coverage.html":{}}}],["addressform",{"_index":41,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/CondominiumComponent.html":{},"interfaces/Country-1.html":{}}}],["addressform?.valid",{"_index":538,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["adresse",{"_index":371,"title":{},"body":{"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/UnitComponent.html":{}}}],["ajoute",{"_index":653,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["ajouter",{"_index":669,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["alpha",{"_index":132,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["amy",{"_index":819,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["amyelsner.png",{"_index":821,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["angular",{"_index":1258,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1231,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":79,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"interfaces/Country-1.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/InformationComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":279,"title":{},"body":{"injectables/CityService.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"injectables/CountryService.html":{},"components/DisplayCondominiumComponent.html":{},"injectables/UniqueCheckService.html":{},"injectables/UploadService.html":{}}}],["angular/compiler",{"_index":1233,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":71,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"interfaces/City.html":{},"injectables/CityService.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"components/CoproprietaireComponent.html":{},"interfaces/Country-1.html":{},"injectables/CountryService.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"injectables/UniqueCheckService.html":{},"components/UnitComponent.html":{},"injectables/UploadService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":74,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"interfaces/Country-1.html":{},"components/DisplayCondominiumComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"classes/UniqueValidator.html":{},"components/UnitComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1234,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/DisplayCondominiumComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":1238,"title":{},"body":{"dependencies.html":{}}}],["anna",{"_index":822,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["annafali.png",{"_index":824,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["annuler",{"_index":1155,"title":{},"body":{"components/UnitComponent.html":{}}}],["api",{"_index":1069,"title":{},"body":{"injectables/UniqueCheckService.html":{}}}],["apiurls",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"interfaces/Country-1.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["app.component.html",{"_index":231,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":232,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":204,"title":{"components/AppComponent.html":{}},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1211,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appeler",{"_index":858,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["application",{"_index":1267,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["après",{"_index":652,"title":{},"body":{"components/CondominiumComponent.html":{},"components/FileUploadComponent.html":{}}}],["array.isarray(data",{"_index":108,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["array.isarray(unitinfo.owners",{"_index":637,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["artifacts",{"_index":1276,"title":{},"body":{"index.html":{}}}],["asiya",{"_index":825,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["asiyajavayant.png",{"_index":827,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["assuming",{"_index":188,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["assurez",{"_index":121,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["asyncvalidatorfn",{"_index":1078,"title":{},"body":{"classes/UniqueValidator.html":{}}}],["au",{"_index":654,"title":{},"body":{"components/CondominiumComponent.html":{},"components/InformationComponent.html":{}}}],["auto",{"_index":713,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["automatically",{"_index":1268,"title":{},"body":{"index.html":{}}}],["avec",{"_index":606,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["avoir",{"_index":1015,"title":{},"body":{"components/InformationComponent.html":{}}}],["b",{"_index":980,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["background",{"_index":682,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["badgemodule",{"_index":884,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["balance",{"_index":746,"title":{},"body":{"interfaces/Country.html":{},"interfaces/Customer.html":{},"interfaces/Representative.html":{}}}],["bas",{"_index":139,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["basecitiesurl",{"_index":265,"title":{},"body":{"injectables/CityService.html":{}}}],["bernardo",{"_index":828,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["bernardodominic.png",{"_index":830,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["between",{"_index":708,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["bien",{"_index":100,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["birthdate",{"_index":378,"title":{},"body":{"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{}}}],["blockuimodule",{"_index":296,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["blueprint",{"_index":515,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["boolean",{"_index":455,"title":{},"body":{"components/CondominiumComponent.html":{},"interfaces/Country.html":{},"interfaces/Customer.html":{},"components/DisplayCondominiumComponent.html":{},"interfaces/Representative.html":{}}}],["bootstrap",{"_index":1227,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["border",{"_index":690,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["bottom",{"_index":695,"title":{},"body":{"components/CondominiumComponent.html":{},"components/InformationComponent.html":{}}}],["bowcher",{"_index":835,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["box",{"_index":684,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["brouillon",{"_index":644,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["browser",{"_index":1235,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":1275,"title":{},"body":{"index.html":{}}}],["button",{"_index":697,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["buttonmodule",{"_index":418,"title":{},"body":{"components/CondominiumComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["buttons",{"_index":709,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["bytes",{"_index":909,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["bâtiment",{"_index":610,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["cadastrale",{"_index":1137,"title":{},"body":{"components/UnitComponent.html":{}}}],["cadastralreference",{"_index":641,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["cadastre",{"_index":238,"title":{},"body":{"components/CadastreComponent.html":{},"components/CondominiumComponent.html":{},"components/FileUploadComponent.html":{}}}],["cadastre'},{'name",{"_index":207,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["cadastre.component.html",{"_index":239,"title":{},"body":{"components/CadastreComponent.html":{}}}],["cadastre.component.scss",{"_index":240,"title":{},"body":{"components/CadastreComponent.html":{}}}],["cadastre/cadastre.component",{"_index":490,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["cadastrecomponent",{"_index":206,"title":{"components/CadastreComponent.html":{}},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{},"coverage.html":{}}}],["calendarmodule",{"_index":294,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["callback",{"_index":905,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["capabilities",{"_index":1294,"title":{},"body":{"index.html":{}}}],["caractères",{"_index":1017,"title":{},"body":{"components/InformationComponent.html":{}}}],["card",{"_index":677,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["cardmodule",{"_index":23,"title":{},"body":{"components/AddressComponent.html":{},"components/CadastreComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"interfaces/Country-1.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{}}}],["case",{"_index":866,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["catcherror",{"_index":1083,"title":{},"body":{"classes/UniqueValidator.html":{},"injectables/UploadService.html":{}}}],["catcherror((error",{"_index":1093,"title":{},"body":{"classes/UniqueValidator.html":{}}}],["catcherror(this.handleerror",{"_index":1185,"title":{},"body":{"injectables/UploadService.html":{}}}],["cca2",{"_index":127,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["ce",{"_index":172,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{},"components/InformationComponent.html":{}}}],["cette",{"_index":326,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["change",{"_index":1270,"title":{},"body":{"index.html":{}}}],["chaque",{"_index":531,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["charge",{"_index":175,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["charger",{"_index":170,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["check",{"_index":1097,"title":{},"body":{"classes/UniqueValidator.html":{},"index.html":{}}}],["check.service",{"_index":500,"title":{},"body":{"components/CondominiumComponent.html":{},"classes/UniqueValidator.html":{}}}],["check.service.ts",{"_index":1057,"title":{},"body":{"injectables/UniqueCheckService.html":{},"coverage.html":{}}}],["check.service.ts:10",{"_index":1061,"title":{},"body":{"injectables/UniqueCheckService.html":{}}}],["check.service.ts:14",{"_index":1063,"title":{},"body":{"injectables/UniqueCheckService.html":{}}}],["check.service.ts:18",{"_index":1065,"title":{},"body":{"injectables/UniqueCheckService.html":{}}}],["checknameuniqueness",{"_index":1059,"title":{},"body":{"injectables/UniqueCheckService.html":{},"classes/UniqueValidator.html":{}}}],["checknameuniqueness(name",{"_index":1062,"title":{},"body":{"injectables/UniqueCheckService.html":{}}}],["checknameuniqueness(uniquecheckservice",{"_index":1076,"title":{},"body":{"classes/UniqueValidator.html":{}}}],["checkprefixuniqueness",{"_index":1060,"title":{},"body":{"injectables/UniqueCheckService.html":{},"classes/UniqueValidator.html":{}}}],["checkprefixuniqueness(prefix",{"_index":1064,"title":{},"body":{"injectables/UniqueCheckService.html":{}}}],["checkprefixuniqueness(uniquecheckservice",{"_index":1079,"title":{},"body":{"classes/UniqueValidator.html":{}}}],["checkuniqueness",{"_index":1058,"title":{},"body":{"injectables/UniqueCheckService.html":{},"miscellaneous/variables.html":{}}}],["choice",{"_index":1289,"title":{},"body":{"index.html":{}}}],["choose",{"_index":893,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["choose(event",{"_index":904,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["cities",{"_index":30,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["city",{"_index":62,"title":{"interfaces/City.html":{}},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/CondominiumComponent.html":{},"interfaces/Country-1.html":{},"coverage.html":{}}}],["city.name",{"_index":196,"title":{},"body":{"components/AddressComponent.html":{}}}],["city_concierge",{"_index":520,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["cityservice",{"_index":45,"title":{"injectables/CityService.html":{}},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"injectables/CityService.html":{},"interfaces/Country-1.html":{},"coverage.html":{}}}],["civilit",{"_index":381,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["civilities",{"_index":350,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["civility",{"_index":358,"title":{},"body":{"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{}}}],["civilitytypes",{"_index":301,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["class",{"_index":86,"title":{"classes/UniqueValidator.html":{}},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"interfaces/City.html":{},"injectables/CityService.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"components/CoproprietaireComponent.html":{},"interfaces/Country-1.html":{},"injectables/CountryService.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"injectables/UniqueCheckService.html":{},"classes/UniqueValidator.html":{},"components/UnitComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":1072,"title":{},"body":{"classes/UniqueValidator.html":{}}}],["clear",{"_index":772,"title":{},"body":{"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{}}}],["clear(table",{"_index":779,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["cli",{"_index":1259,"title":{},"body":{"index.html":{}}}],["client",{"_index":1194,"title":{},"body":{"injectables/UploadService.html":{},"miscellaneous/variables.html":{}}}],["closedetailsdialog",{"_index":1107,"title":{},"body":{"components/UnitComponent.html":{}}}],["closedialog",{"_index":439,"title":{},"body":{"components/CondominiumComponent.html":{},"components/DisplayCondominiumComponent.html":{}}}],["closing",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["co",{"_index":581,"title":{},"body":{"components/CondominiumComponent.html":{},"components/DisplayCondominiumComponent.html":{}}}],["code",{"_index":84,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country.html":{},"interfaces/Country-1.html":{},"interfaces/Customer.html":{},"interfaces/Representative.html":{},"injectables/UploadService.html":{},"index.html":{}}}],["codes",{"_index":128,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["col",{"_index":1032,"title":{},"body":{"components/InformationComponent.html":{}}}],["color",{"_index":1042,"title":{},"body":{"components/InformationComponent.html":{}}}],["combiner",{"_index":646,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["command",{"_index":570,"title":{},"body":{"components/CondominiumComponent.html":{},"index.html":{}}}],["commonmodule",{"_index":19,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"interfaces/Country-1.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/InformationComponent.html":{}}}],["company",{"_index":743,"title":{},"body":{"interfaces/Country.html":{},"interfaces/Customer.html":{},"interfaces/Representative.html":{}}}],["complement",{"_index":192,"title":{},"body":{"components/AddressComponent.html":{},"components/CondominiumComponent.html":{}}}],["completed",{"_index":988,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["complément",{"_index":630,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["component",{"_index":0,"title":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"interfaces/Country-1.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":202,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{},"overview.html":{}}}],["computed",{"_index":484,"title":{},"body":{"components/CondominiumComponent.html":{},"components/FileUploadComponent.html":{}}}],["concierge",{"_index":291,"title":{},"body":{"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{}}}],["concierge'},{'name",{"_index":209,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["concierge.component.html",{"_index":298,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["concierge.component.scss",{"_index":299,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["concierge/concierge.component",{"_index":488,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["conciergecomponent",{"_index":208,"title":{"components/ConciergeComponent.html":{}},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{},"coverage.html":{}}}],["conciergeform",{"_index":309,"title":{},"body":{"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{}}}],["conciergemessage",{"_index":302,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["conciergeswitch",{"_index":306,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["conciergeswitch(event",{"_index":314,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["condocomponent",{"_index":765,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["condominium",{"_index":417,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["condominium'},{'name",{"_index":211,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["condominium.component.html",{"_index":425,"title":{},"body":{"components/CondominiumComponent.html":{},"components/DisplayCondominiumComponent.html":{}}}],["condominium.component.scss",{"_index":424,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["condominium.component.ts",{"_index":755,"title":{},"body":{"components/DisplayCondominiumComponent.html":{},"coverage.html":{}}}],["condominium.component.ts:29",{"_index":796,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["condominium.component.ts:30",{"_index":794,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["condominium.component.ts:32",{"_index":795,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["condominium.component.ts:33",{"_index":798,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["condominium.component.ts:35",{"_index":800,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["condominium.component.ts:37",{"_index":797,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["condominium.component.ts:39",{"_index":791,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["condominium.component.ts:41",{"_index":778,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["condominium.component.ts:45",{"_index":789,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["condominium.component.ts:76",{"_index":781,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["condominium.component.ts:80",{"_index":790,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["condominium.component.ts:83",{"_index":782,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["condominium.component.ts:86",{"_index":788,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["condominium.component.ts:90",{"_index":784,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["condominium.service",{"_index":804,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["condominium.service.ts",{"_index":1223,"title":{},"body":{"coverage.html":{}}}],["condominium/condominium.component",{"_index":811,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["condominium/display",{"_index":754,"title":{},"body":{"components/DisplayCondominiumComponent.html":{},"coverage.html":{}}}],["condominiumapi",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["condominiumcomponent",{"_index":210,"title":{"components/CondominiumComponent.html":{}},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{},"coverage.html":{}}}],["condominiumservice",{"_index":311,"title":{"injectables/CondominiumService.html":{}},"body":{"components/ConciergeComponent.html":{},"injectables/CondominiumService.html":{},"coverage.html":{}}}],["config",{"_index":887,"title":{},"body":{"components/FileUploadComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirm",{"_index":561,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["confirmation",{"_index":430,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["confirmation(event",{"_index":449,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["confirmationservice",{"_index":416,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["confirmdetails",{"_index":1108,"title":{},"body":{"components/UnitComponent.html":{}}}],["confirmed",{"_index":559,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["confirmer",{"_index":548,"title":{},"body":{"components/CondominiumComponent.html":{},"components/UnitComponent.html":{}}}],["confirmpopupmodule",{"_index":422,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["console.error('data",{"_index":177,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["console.error('erreur",{"_index":598,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["console.error('error",{"_index":1094,"title":{},"body":{"classes/UniqueValidator.html":{}}}],["console.error('failed",{"_index":182,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"interfaces/Country-1.html":{}}}],["console.log('cities",{"_index":185,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["console.log('civility",{"_index":355,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["console.log('countries",{"_index":96,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["console.log('formulaire",{"_index":587,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["console.log('réponse",{"_index":595,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["console.log(`default",{"_index":160,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["console.log(response",{"_index":960,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["console.log(text",{"_index":602,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["console.log(this.files",{"_index":956,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["console.warn('no",{"_index":163,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["const",{"_index":144,"title":{},"body":{"components/AddressComponent.html":{},"components/CadastreComponent.html":{},"interfaces/City.html":{},"injectables/CityService.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"interfaces/Country-1.html":{},"components/FileUploadComponent.html":{},"injectables/UploadService.html":{}}}],["constructor",{"_index":42,"title":{},"body":{"components/AddressComponent.html":{},"injectables/CityService.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"injectables/CountryService.html":{},"components/DisplayCondominiumComponent.html":{},"injectables/UniqueCheckService.html":{},"components/UnitComponent.html":{},"injectables/UploadService.html":{}}}],["constructor(condominiumservice",{"_index":310,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["constructor(countryservice",{"_index":43,"title":{},"body":{"components/AddressComponent.html":{}}}],["constructor(displaycondominiumservice",{"_index":776,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["constructor(fb",{"_index":1112,"title":{},"body":{"components/UnitComponent.html":{}}}],["constructor(http",{"_index":268,"title":{},"body":{"injectables/CityService.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"injectables/CountryService.html":{},"injectables/UniqueCheckService.html":{},"injectables/UploadService.html":{}}}],["constructor(private",{"_index":87,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"injectables/CityService.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"interfaces/Country-1.html":{},"injectables/CountryService.html":{},"components/DisplayCondominiumComponent.html":{},"injectables/UniqueCheckService.html":{},"components/UnitComponent.html":{},"injectables/UploadService.html":{}}}],["contains",{"_index":189,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["content",{"_index":706,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["contient",{"_index":104,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["control",{"_index":1086,"title":{},"body":{"classes/UniqueValidator.html":{}}}],["control.value",{"_index":1087,"title":{},"body":{"classes/UniqueValidator.html":{}}}],["coproprietaire",{"_index":734,"title":{},"body":{"components/CoproprietaireComponent.html":{}}}],["coproprietaire'},{'name",{"_index":213,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["coproprietaire.component.html",{"_index":735,"title":{},"body":{"components/CoproprietaireComponent.html":{}}}],["coproprietaire.component.scss",{"_index":736,"title":{},"body":{"components/CoproprietaireComponent.html":{}}}],["coproprietaire/coproprietaire.component",{"_index":498,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["coproprietairecomponent",{"_index":212,"title":{"components/CoproprietaireComponent.html":{}},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{},"coverage.html":{}}}],["copropriét",{"_index":327,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["corporation",{"_index":373,"title":{},"body":{"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{}}}],["correct",{"_index":124,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["countries",{"_index":31,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{},"injectables/CountryService.html":{}}}],["country",{"_index":66,"title":{"interfaces/Country.html":{},"interfaces/Country-1.html":{}},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/CondominiumComponent.html":{},"interfaces/Country.html":{},"interfaces/Country-1.html":{},"interfaces/Customer.html":{},"interfaces/Representative.html":{},"coverage.html":{}}}],["country.cca2",{"_index":125,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["country.code",{"_index":152,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["country.name",{"_index":195,"title":{},"body":{"components/AddressComponent.html":{}}}],["country.name.common",{"_index":120,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["country_concierge",{"_index":522,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["countrycode",{"_index":274,"title":{},"body":{"injectables/CityService.html":{}}}],["countryservice",{"_index":44,"title":{"injectables/CountryService.html":{}},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{},"injectables/CountryService.html":{},"coverage.html":{}}}],["coverage",{"_index":1199,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createcondominiumform",{"_index":427,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["crée",{"_index":639,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["custom",{"_index":1033,"title":{},"body":{"components/InformationComponent.html":{}}}],["customer",{"_index":741,"title":{"interfaces/Customer.html":{}},"body":{"interfaces/Country.html":{},"interfaces/Customer.html":{},"components/DisplayCondominiumComponent.html":{},"interfaces/Representative.html":{},"coverage.html":{}}}],["customer.country.name",{"_index":877,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["customer.date",{"_index":816,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["customer.name",{"_index":876,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["customer.representative.name",{"_index":878,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["customers",{"_index":766,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["côt",{"_index":1193,"title":{},"body":{"injectables/UploadService.html":{}}}],["d'adresse",{"_index":605,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["d'exercice",{"_index":874,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["d'upload",{"_index":950,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["d\\'envoi",{"_index":383,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["d\\'exercice",{"_index":880,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["danger",{"_index":785,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["dans",{"_index":325,"title":{},"body":{"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{}}}],["data",{"_index":95,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"interfaces/Country-1.html":{}}}],["data.length",{"_index":109,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["data.map((country",{"_index":119,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["dataviewmodule",{"_index":805,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["date",{"_index":379,"title":{},"body":{"components/ConciergeComponent.html":{},"interfaces/Country.html":{},"interfaces/Customer.html":{},"components/DisplayCondominiumComponent.html":{},"interfaces/Representative.html":{}}}],["date(customer.date",{"_index":817,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["db",{"_index":92,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"interfaces/Country-1.html":{}}}],["de",{"_index":255,"title":{},"body":{"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/InformationComponent.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":792,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["default",{"_index":63,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"interfaces/City.html":{},"injectables/CityService.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"interfaces/Country-1.html":{},"injectables/CountryService.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"injectables/UniqueCheckService.html":{},"components/UnitComponent.html":{},"injectables/UploadService.html":{},"miscellaneous/variables.html":{}}}],["defaultcountry",{"_index":150,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["defaultcountrycode",{"_index":145,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["defined",{"_index":46,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"injectables/CityService.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"injectables/CountryService.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"injectables/UniqueCheckService.html":{},"classes/UniqueValidator.html":{},"components/UnitComponent.html":{},"injectables/UploadService.html":{}}}],["dependencies",{"_index":1230,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["depuis",{"_index":257,"title":{},"body":{"components/CadastreComponent.html":{},"components/CondominiumComponent.html":{}}}],["des",{"_index":105,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"interfaces/Country-1.html":{},"components/DisplayCondominiumComponent.html":{}}}],["description",{"_index":510,"title":{},"body":{"components/CondominiumComponent.html":{},"components/InformationComponent.html":{}}}],["detail",{"_index":560,"title":{},"body":{"components/CondominiumComponent.html":{},"components/FileUploadComponent.html":{}}}],["dev",{"_index":1264,"title":{},"body":{"index.html":{}}}],["development",{"_index":1261,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":861,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["dialogmodule",{"_index":421,"title":{},"body":{"components/CondominiumComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/UnitComponent.html":{}}}],["directive",{"_index":200,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["directives",{"_index":224,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1274,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1279,"title":{},"body":{"index.html":{}}}],["display",{"_index":703,"title":{},"body":{"components/CondominiumComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/InformationComponent.html":{}}}],["displaycondominium",{"_index":758,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["displaycondominium'},{'name",{"_index":215,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["displaycondominiumcomponent",{"_index":214,"title":{"components/DisplayCondominiumComponent.html":{}},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{},"coverage.html":{}}}],["displaycondominiumservice",{"_index":756,"title":{},"body":{"components/DisplayCondominiumComponent.html":{},"coverage.html":{}}}],["displaydetailsdialog",{"_index":1105,"title":{},"body":{"components/UnitComponent.html":{}}}],["displaydialog",{"_index":767,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["dist",{"_index":1278,"title":{},"body":{"index.html":{}}}],["dividermodule",{"_index":1001,"title":{},"body":{"components/InformationComponent.html":{}}}],["dm",{"_index":967,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["document_receiving_method",{"_index":382,"title":{},"body":{"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{}}}],["documentation",{"_index":1200,"title":{},"body":{"coverage.html":{}}}],["documentreceivingmethods",{"_index":303,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["documents",{"_index":384,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["doit",{"_index":1014,"title":{},"body":{"components/InformationComponent.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["domain/diplaycondominium.domain",{"_index":802,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["dominic",{"_index":829,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["donc",{"_index":634,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["données",{"_index":254,"title":{},"body":{"components/CadastreComponent.html":{}}}],["drag",{"_index":990,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["drop",{"_index":991,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["dropdownmodule",{"_index":22,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"interfaces/Country-1.html":{},"components/DisplayCondominiumComponent.html":{}}}],["du",{"_index":176,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/CondominiumComponent.html":{},"interfaces/Country-1.html":{},"components/FileUploadComponent.html":{}}}],["during",{"_index":1095,"title":{},"body":{"classes/UniqueValidator.html":{}}}],["dynamic",{"_index":1236,"title":{},"body":{"dependencies.html":{}}}],["défaut",{"_index":138,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["définir",{"_index":136,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["déj",{"_index":1019,"title":{},"body":{"components/InformationComponent.html":{}}}],["délai",{"_index":386,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["dépasser",{"_index":1029,"title":{},"body":{"components/InformationComponent.html":{}}}],["détails",{"_index":875,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["e2e",{"_index":1287,"title":{},"body":{"index.html":{}}}],["element",{"_index":199,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["elsner",{"_index":820,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["elwin",{"_index":831,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["elwinsharvill.png",{"_index":833,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["email",{"_index":370,"title":{},"body":{"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{}}}],["empty",{"_index":180,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["en",{"_index":533,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["end",{"_index":1286,"title":{},"body":{"index.html":{}}}],["entreprise",{"_index":374,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["environment",{"_index":281,"title":{},"body":{"injectables/CityService.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"injectables/CountryService.html":{},"injectables/UniqueCheckService.html":{},"injectables/UploadService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurls.checkuniqueness",{"_index":1066,"title":{},"body":{"injectables/UniqueCheckService.html":{}}}],["environment.apiurls.condominiumapi",{"_index":469,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["environment.apiurls.getcitiesbase",{"_index":276,"title":{},"body":{"injectables/CityService.html":{}}}],["environment.apiurls.getcivilities",{"_index":725,"title":{},"body":{"injectables/CondominiumService.html":{}}}],["environment.apiurls.getcountries",{"_index":751,"title":{},"body":{"injectables/CountryService.html":{}}}],["environment.apiurls.getdocumentremindingmethod",{"_index":727,"title":{},"body":{"injectables/CondominiumService.html":{}}}],["environment.apiurls.getreminderremindingmethod",{"_index":729,"title":{},"body":{"injectables/CondominiumService.html":{}}}],["environment.apiurls.uploadapi",{"_index":1179,"title":{},"body":{"injectables/UploadService.html":{}}}],["environment.apiurls.username",{"_index":278,"title":{},"body":{"injectables/CityService.html":{}}}],["environments/environment",{"_index":282,"title":{},"body":{"injectables/CityService.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"injectables/CountryService.html":{},"injectables/UniqueCheckService.html":{},"injectables/UploadService.html":{}}}],["erreur",{"_index":1192,"title":{},"body":{"injectables/UploadService.html":{}}}],["erreurs",{"_index":673,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["error",{"_index":181,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"interfaces/Country-1.html":{},"components/FileUploadComponent.html":{},"components/InformationComponent.html":{},"classes/UniqueValidator.html":{},"injectables/UploadService.html":{}}}],["error(errormessage",{"_index":1198,"title":{},"body":{"injectables/UploadService.html":{}}}],["error.error",{"_index":1189,"title":{},"body":{"injectables/UploadService.html":{}}}],["error.error.message",{"_index":1195,"title":{},"body":{"injectables/UploadService.html":{}}}],["error.message",{"_index":963,"title":{},"body":{"components/FileUploadComponent.html":{},"injectables/UploadService.html":{}}}],["error.status}\\nmessage",{"_index":1197,"title":{},"body":{"injectables/UploadService.html":{}}}],["errorevent",{"_index":1191,"title":{},"body":{"injectables/UploadService.html":{}}}],["errormessage",{"_index":1186,"title":{},"body":{"injectables/UploadService.html":{}}}],["errors",{"_index":1099,"title":{},"body":{"classes/UniqueValidator.html":{}}}],["est",{"_index":99,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/CondominiumComponent.html":{},"interfaces/Country-1.html":{},"components/InformationComponent.html":{}}}],["et",{"_index":103,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/CondominiumComponent.html":{},"interfaces/Country-1.html":{}}}],["etes",{"_index":547,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["event",{"_index":61,"title":{},"body":{"components/AddressComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/FileUploadComponent.html":{}}}],["event,index",{"_index":914,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["event.checked",{"_index":346,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["event.item.label",{"_index":574,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["event.target",{"_index":544,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["event.value",{"_index":187,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["eventcoalescing",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":244,"title":{},"body":{"components/CadastreComponent.html":{},"components/CondominiumComponent.html":{},"components/FileUploadComponent.html":{}}}],["eventtarget",{"_index":545,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["ex",{"_index":943,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["exclamation",{"_index":553,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["execute",{"_index":1283,"title":{},"body":{"index.html":{}}}],["exemple",{"_index":146,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["existantes",{"_index":618,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["existe",{"_index":633,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["export",{"_index":85,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"interfaces/City.html":{},"injectables/CityService.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"components/CoproprietaireComponent.html":{},"interfaces/Country.html":{},"interfaces/Country-1.html":{},"injectables/CountryService.html":{},"interfaces/Customer.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"interfaces/Representative.html":{},"injectables/UniqueCheckService.html":{},"classes/UniqueValidator.html":{},"components/UnitComponent.html":{},"injectables/UploadService.html":{}}}],["express",{"_index":1240,"title":{},"body":{"dependencies.html":{}}}],["express.express",{"_index":1253,"title":{},"body":{"miscellaneous/functions.html":{}}}],["facture",{"_index":944,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["fali",{"_index":823,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["false",{"_index":330,"title":{},"body":{"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/DisplayCondominiumComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":444,"title":{},"body":{"components/CondominiumComponent.html":{},"components/UnitComponent.html":{}}}],["feng",{"_index":847,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["ferme",{"_index":863,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["fichier",{"_index":942,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["field",{"_index":318,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"interfaces/City.html":{},"injectables/CityService.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"components/CoproprietaireComponent.html":{},"interfaces/Country.html":{},"interfaces/Country-1.html":{},"injectables/CountryService.html":{},"interfaces/Customer.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"interfaces/Representative.html":{},"injectables/UniqueCheckService.html":{},"classes/UniqueValidator.html":{},"components/UnitComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{}}}],["file.name",{"_index":985,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["file.size",{"_index":929,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["files",{"_index":888,"title":{},"body":{"components/FileUploadComponent.html":{},"index.html":{}}}],["files.filter((_",{"_index":953,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["files.length",{"_index":982,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["filetype",{"_index":900,"title":{},"body":{"components/FileUploadComponent.html":{},"injectables/UploadService.html":{}}}],["fileuploadcomponent",{"_index":216,"title":{"components/FileUploadComponent.html":{}},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{},"coverage.html":{}}}],["fileuploaded",{"_index":901,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["fileuploadmodule",{"_index":883,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["fin",{"_index":873,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["first",{"_index":1291,"title":{},"body":{"index.html":{}}}],["firstname",{"_index":661,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["flex",{"_index":704,"title":{},"body":{"components/CondominiumComponent.html":{},"components/InformationComponent.html":{}}}],["floatlabelmodule",{"_index":21,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"interfaces/Country-1.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{}}}],["fonction",{"_index":89,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/CondominiumComponent.html":{},"interfaces/Country-1.html":{}}}],["form",{"_index":344,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["formarray",{"_index":485,"title":{},"body":{"components/CondominiumComponent.html":{},"components/UnitComponent.html":{}}}],["format",{"_index":178,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["formatsize",{"_index":894,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["formatsize(bytes",{"_index":907,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["formatsize(file.size",{"_index":986,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["formbuilder",{"_index":445,"title":{},"body":{"components/CondominiumComponent.html":{},"components/UnitComponent.html":{}}}],["formcontrol",{"_index":72,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["formdata",{"_index":590,"title":{},"body":{"components/CondominiumComponent.html":{},"injectables/UploadService.html":{}}}],["formdata).pipe",{"_index":1184,"title":{},"body":{"injectables/UploadService.html":{}}}],["formdata).subscribe",{"_index":594,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["formdata.append('file",{"_index":1181,"title":{},"body":{"injectables/UploadService.html":{}}}],["formdata.append('type",{"_index":1182,"title":{},"body":{"injectables/UploadService.html":{}}}],["formdata.concierge",{"_index":591,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["formdata.concierge.corporation",{"_index":592,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["formgroup",{"_index":52,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"interfaces/Country-1.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["formsmodule",{"_index":18,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"interfaces/Country-1.html":{},"components/DisplayCondominiumComponent.html":{},"components/InformationComponent.html":{}}}],["formulaire",{"_index":550,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["found",{"_index":164,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{},"components/DisplayCondominiumComponent.html":{}}}],["fournit",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fr",{"_index":147,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["france",{"_index":149,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["fromurlcreatecondominium",{"_index":428,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["frontend",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ftpblueprint",{"_index":514,"title":{},"body":{"components/CondominiumComponent.html":{},"components/FtpblueprintComponent.html":{}}}],["ftpblueprint'},{'name",{"_index":219,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["ftpblueprint.component.html",{"_index":994,"title":{},"body":{"components/FtpblueprintComponent.html":{}}}],["ftpblueprint.component.scss",{"_index":995,"title":{},"body":{"components/FtpblueprintComponent.html":{}}}],["ftpblueprint/ftpblueprint.component",{"_index":487,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["ftpblueprintcomponent",{"_index":218,"title":{"components/FtpblueprintComponent.html":{}},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{},"coverage.html":{}}}],["ftpblueprintform",{"_index":442,"title":{},"body":{"components/CondominiumComponent.html":{},"components/FtpblueprintComponent.html":{}}}],["function",{"_index":342,"title":{},"body":{"components/ConciergeComponent.html":{},"components/FileUploadComponent.html":{},"coverage.html":{}}}],["functions",{"_index":1252,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1295,"title":{},"body":{"index.html":{}}}],["galement",{"_index":169,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["gap",{"_index":711,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["gb",{"_index":972,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["generate",{"_index":1272,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1257,"title":{},"body":{"index.html":{}}}],["gestion",{"_index":672,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["getaddressform",{"_index":475,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["getcities",{"_index":267,"title":{},"body":{"injectables/CityService.html":{}}}],["getcities(countrycode",{"_index":272,"title":{},"body":{"injectables/CityService.html":{}}}],["getcitiesbase",{"_index":1342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcivilities",{"_index":715,"title":{},"body":{"injectables/CondominiumService.html":{},"miscellaneous/variables.html":{}}}],["getcivilityoptions",{"_index":718,"title":{},"body":{"injectables/CondominiumService.html":{}}}],["getconciergeform",{"_index":481,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["getcountries",{"_index":748,"title":{},"body":{"injectables/CountryService.html":{},"miscellaneous/variables.html":{}}}],["getdocumentreceivingmethodoptions",{"_index":719,"title":{},"body":{"injectables/CondominiumService.html":{}}}],["getdocumentremindingmethod",{"_index":716,"title":{},"body":{"injectables/CondominiumService.html":{},"miscellaneous/variables.html":{}}}],["geterrorsubmit",{"_index":431,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["geterrorsubmit(error",{"_index":451,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["getftpblueprintform",{"_index":477,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["getinformationsform",{"_index":473,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["getlabel",{"_index":307,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["getlabel('birthdate",{"_index":396,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["getlabel('civility",{"_index":397,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["getlabel('corporation",{"_index":393,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["getlabel('document_receiving_method",{"_index":398,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["getlabel('email",{"_index":392,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["getlabel('iban",{"_index":395,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["getlabel('name",{"_index":390,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["getlabel('phone",{"_index":394,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["getlabel('reminder_delay",{"_index":399,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["getlabel('reminder_receiving_method",{"_index":400,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["getlabel('surname",{"_index":391,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["getlabel(\\'birthdate",{"_index":407,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["getlabel(\\'civility",{"_index":408,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["getlabel(\\'corporation",{"_index":404,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["getlabel(\\'document_receiving_method",{"_index":409,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["getlabel(\\'email",{"_index":403,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["getlabel(\\'iban",{"_index":406,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["getlabel(\\'name",{"_index":401,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["getlabel(\\'phone",{"_index":405,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["getlabel(\\'reminder_delay",{"_index":410,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["getlabel(\\'reminder_receiving_method",{"_index":411,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["getlabel(\\'surname",{"_index":402,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["getlabel(field",{"_index":316,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["getowners",{"_index":1109,"title":{},"body":{"components/UnitComponent.html":{}}}],["getowners(selectedunit()!)?.controls",{"_index":1150,"title":{},"body":{"components/UnitComponent.html":{}}}],["getowners(unit",{"_index":1117,"title":{},"body":{"components/UnitComponent.html":{}}}],["getreminderreceivingmethodoptions",{"_index":720,"title":{},"body":{"injectables/CondominiumService.html":{}}}],["getreminderremindingmethod",{"_index":717,"title":{},"body":{"injectables/CondominiumService.html":{},"miscellaneous/variables.html":{}}}],["getseverity",{"_index":773,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["getseverity(status",{"_index":783,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["getter",{"_index":523,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["getting",{"_index":1254,"title":{"index.html":{}},"body":{}}],["getunitcontrols",{"_index":1124,"title":{},"body":{"components/UnitComponent.html":{}}}],["getunits",{"_index":479,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["go",{"_index":1298,"title":{},"body":{"index.html":{}}}],["grid",{"_index":1038,"title":{},"body":{"components/InformationComponent.html":{}}}],["group",{"_index":698,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["handledialoghide",{"_index":774,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["handleerror",{"_index":1172,"title":{},"body":{"injectables/UploadService.html":{}}}],["handleerror(error",{"_index":1175,"title":{},"body":{"injectables/UploadService.html":{}}}],["height",{"_index":1041,"title":{},"body":{"components/InformationComponent.html":{}}}],["help",{"_index":1296,"title":{},"body":{"index.html":{}}}],["here",{"_index":992,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["html",{"_index":198,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["http",{"_index":271,"title":{},"body":{"injectables/CityService.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"injectables/CountryService.html":{},"injectables/UniqueCheckService.html":{},"injectables/UploadService.html":{},"miscellaneous/variables.html":{}}}],["http://api.geonames.org/searchjson",{"_index":1343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1266,"title":{},"body":{"index.html":{}}}],["http://localhost:8080/check",{"_index":1345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8080/condominium",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8080/getcivilities",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8080/getdocumentreceivingmethods",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8080/getreminderreceivingmethods",{"_index":1339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8080/upload",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":269,"title":{},"body":{"injectables/CityService.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"injectables/CountryService.html":{},"injectables/UniqueCheckService.html":{},"injectables/UploadService.html":{}}}],["httpclientmodule",{"_index":760,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["httperrorresponse",{"_index":452,"title":{},"body":{"components/CondominiumComponent.html":{},"injectables/UploadService.html":{}}}],["https://api.example.com/upload",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://restcountries.com/v3.1/independent?status=true&fields=name,cca2",{"_index":1341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i)).tofixed(dm",{"_index":978,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["iban",{"_index":377,"title":{},"body":{"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{}}}],["icon",{"_index":551,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["id",{"_index":742,"title":{},"body":{"interfaces/Country.html":{},"interfaces/Customer.html":{},"interfaces/Representative.html":{}}}],["identifier",{"_index":1201,"title":{},"body":{"coverage.html":{}}}],["il",{"_index":322,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["image",{"_index":740,"title":{},"body":{"interfaces/Country.html":{},"interfaces/Customer.html":{},"components/DisplayCondominiumComponent.html":{},"interfaces/Representative.html":{}}}],["implements",{"_index":289,"title":{},"body":{"components/ConciergeComponent.html":{},"components/DisplayCondominiumComponent.html":{},"index.html":{}}}],["import",{"_index":69,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"interfaces/City.html":{},"injectables/CityService.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"components/CoproprietaireComponent.html":{},"interfaces/Country-1.html":{},"injectables/CountryService.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"injectables/UniqueCheckService.html":{},"classes/UniqueValidator.html":{},"components/UnitComponent.html":{},"injectables/UploadService.html":{}}}],["imports",{"_index":16,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"interfaces/Country-1.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["incorrect",{"_index":179,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["index",{"_index":28,"title":{"index.html":{}},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"interfaces/City.html":{},"injectables/CityService.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"interfaces/Country.html":{},"interfaces/Country-1.html":{},"injectables/CountryService.html":{},"interfaces/Customer.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"interfaces/Representative.html":{},"injectables/UniqueCheckService.html":{},"classes/UniqueValidator.html":{},"components/UnitComponent.html":{},"injectables/UploadService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"interfaces/City.html":{},"injectables/CityService.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"components/CoproprietaireComponent.html":{},"interfaces/Country.html":{},"interfaces/Country-1.html":{},"injectables/CountryService.html":{},"interfaces/Customer.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"interfaces/Representative.html":{},"injectables/UniqueCheckService.html":{},"classes/UniqueValidator.html":{},"components/UnitComponent.html":{},"injectables/UploadService.html":{}}}],["information",{"_index":998,"title":{},"body":{"components/InformationComponent.html":{}}}],["information'},{'name",{"_index":221,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["information.component.html",{"_index":1003,"title":{},"body":{"components/InformationComponent.html":{}}}],["information.component.scss",{"_index":1002,"title":{},"body":{"components/InformationComponent.html":{}}}],["information/information.component",{"_index":489,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["informationcomponent",{"_index":220,"title":{"components/InformationComponent.html":{}},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{},"coverage.html":{}}}],["informationform",{"_index":1004,"title":{},"body":{"components/InformationComponent.html":{}}}],["informationform.get('description')?.errors?.['maxlength",{"_index":1027,"title":{},"body":{"components/InformationComponent.html":{}}}],["informationform.get('description')?.invalid",{"_index":1025,"title":{},"body":{"components/InformationComponent.html":{}}}],["informationform.get('description')?.touched",{"_index":1026,"title":{},"body":{"components/InformationComponent.html":{}}}],["informationform.get('name')?.errors?.['minlength",{"_index":1013,"title":{},"body":{"components/InformationComponent.html":{}}}],["informationform.get('name')?.errors?.['nametaken",{"_index":1018,"title":{},"body":{"components/InformationComponent.html":{}}}],["informationform.get('name')?.errors?.['required",{"_index":1011,"title":{},"body":{"components/InformationComponent.html":{}}}],["informationform.get('name')?.invalid",{"_index":1009,"title":{},"body":{"components/InformationComponent.html":{}}}],["informationform.get('name')?.touched",{"_index":1010,"title":{},"body":{"components/InformationComponent.html":{}}}],["informationform.get('prefix')?.errors?.['nametaken",{"_index":1024,"title":{},"body":{"components/InformationComponent.html":{}}}],["informationform.get('prefix')?.errors?.['required",{"_index":1023,"title":{},"body":{"components/InformationComponent.html":{}}}],["informationform.get('prefix')?.invalid",{"_index":1021,"title":{},"body":{"components/InformationComponent.html":{}}}],["informationform.get('prefix')?.touched",{"_index":1022,"title":{},"body":{"components/InformationComponent.html":{}}}],["informationform.get(\\'description\\')?.errors?.[\\'maxlength",{"_index":1055,"title":{},"body":{"components/InformationComponent.html":{}}}],["informationform.get(\\'description\\')?.invalid",{"_index":1053,"title":{},"body":{"components/InformationComponent.html":{}}}],["informationform.get(\\'description\\')?.touched",{"_index":1054,"title":{},"body":{"components/InformationComponent.html":{}}}],["informationform.get(\\'name\\')?.errors?.[\\'minlength",{"_index":1047,"title":{},"body":{"components/InformationComponent.html":{}}}],["informationform.get(\\'name\\')?.errors?.[\\'nametaken",{"_index":1048,"title":{},"body":{"components/InformationComponent.html":{}}}],["informationform.get(\\'name\\')?.errors?.[\\'required",{"_index":1046,"title":{},"body":{"components/InformationComponent.html":{}}}],["informationform.get(\\'name\\')?.invalid",{"_index":1044,"title":{},"body":{"components/InformationComponent.html":{}}}],["informationform.get(\\'name\\')?.touched",{"_index":1045,"title":{},"body":{"components/InformationComponent.html":{}}}],["informationform.get(\\'prefix\\')?.errors?.[\\'nametaken",{"_index":1052,"title":{},"body":{"components/InformationComponent.html":{}}}],["informationform.get(\\'prefix\\')?.errors?.[\\'required",{"_index":1051,"title":{},"body":{"components/InformationComponent.html":{}}}],["informationform.get(\\'prefix\\')?.invalid",{"_index":1049,"title":{},"body":{"components/InformationComponent.html":{}}}],["informationform.get(\\'prefix\\')?.touched",{"_index":1050,"title":{},"body":{"components/InformationComponent.html":{}}}],["informations",{"_index":116,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/CondominiumComponent.html":{},"interfaces/Country-1.html":{}}}],["informationsform",{"_index":441,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["informationsform?.valid",{"_index":537,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["init",{"_index":90,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["initialisation",{"_index":649,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["inject",{"_index":936,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["inject(messageservice",{"_index":924,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["inject(primengconfig",{"_index":921,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["inject(uploadservice",{"_index":934,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["injectable",{"_index":262,"title":{"injectables/CityService.html":{},"injectables/CondominiumService.html":{},"injectables/CountryService.html":{},"injectables/UniqueCheckService.html":{},"injectables/UploadService.html":{}},"body":{"injectables/CityService.html":{},"injectables/CondominiumService.html":{},"injectables/CountryService.html":{},"injectables/UniqueCheckService.html":{},"injectables/UploadService.html":{},"coverage.html":{}}}],["injectables",{"_index":263,"title":{},"body":{"injectables/CityService.html":{},"injectables/CondominiumService.html":{},"injectables/CountryService.html":{},"injectables/UniqueCheckService.html":{},"injectables/UploadService.html":{},"overview.html":{}}}],["injection",{"_index":948,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["input",{"_index":70,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"interfaces/Country-1.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["inputmaskmodule",{"_index":292,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["inputs",{"_index":40,"title":{},"body":{"components/AddressComponent.html":{},"components/ConciergeComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["inputswitchmodule",{"_index":293,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["inputtextareamodule",{"_index":999,"title":{},"body":{"components/InformationComponent.html":{}}}],["inputtextmodule",{"_index":20,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"interfaces/Country-1.html":{},"components/DisplayCondominiumComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{}}}],["instanceof",{"_index":1190,"title":{},"body":{"injectables/UploadService.html":{}}}],["interface",{"_index":82,"title":{"interfaces/City.html":{},"interfaces/Country.html":{},"interfaces/Country-1.html":{},"interfaces/Customer.html":{},"interfaces/Representative.html":{}},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country.html":{},"interfaces/Country-1.html":{},"interfaces/Customer.html":{},"interfaces/Representative.html":{},"coverage.html":{}}}],["interfaces",{"_index":261,"title":{},"body":{"interfaces/City.html":{},"interfaces/Country.html":{},"interfaces/Country-1.html":{},"interfaces/Customer.html":{},"interfaces/Representative.html":{},"overview.html":{}}}],["ioni",{"_index":834,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["ionibowcher.png",{"_index":836,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["iso",{"_index":129,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["isstepvalid",{"_index":432,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["isthereconcierge",{"_index":304,"title":{},"body":{"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{}}}],["items",{"_index":429,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["items.length",{"_index":676,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["ivan",{"_index":837,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["ivanmagalhaes.png",{"_index":839,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["javayant",{"_index":826,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["jour",{"_index":604,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["json",{"_index":624,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["justify",{"_index":705,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["k",{"_index":965,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["karma",{"_index":1285,"title":{},"body":{"index.html":{}}}],["kb",{"_index":970,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["keyfiltermodule",{"_index":295,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["l'adresse",{"_index":647,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["l'envoi",{"_index":549,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["l'index",{"_index":534,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["l'upload",{"_index":256,"title":{},"body":{"components/CadastreComponent.html":{},"components/FileUploadComponent.html":{}}}],["l\\'api",{"_index":596,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["l\\'envoi",{"_index":600,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["la",{"_index":148,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/InformationComponent.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":569,"title":{},"body":{"components/CondominiumComponent.html":{},"components/DisplayCondominiumComponent.html":{}}}],["labels",{"_index":365,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["labels[field",{"_index":389,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["largeur",{"_index":1035,"title":{},"body":{"components/InformationComponent.html":{}}}],["lastname",{"_index":659,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["le",{"_index":154,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/CondominiumComponent.html":{},"interfaces/Country-1.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/InformationComponent.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":712,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["left:50px",{"_index":710,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["legend",{"_index":197,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["les",{"_index":112,"title":{},"body":{"components/AddressComponent.html":{},"components/CadastreComponent.html":{},"interfaces/City.html":{},"components/CondominiumComponent.html":{},"interfaces/Country-1.html":{}}}],["life",{"_index":562,"title":{},"body":{"components/CondominiumComponent.html":{},"components/FileUploadComponent.html":{}}}],["limba",{"_index":841,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["liste",{"_index":867,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["load",{"_index":183,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"interfaces/Country-1.html":{}}}],["loadcities",{"_index":36,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["loadcountries",{"_index":37,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["loaded",{"_index":357,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["loading",{"_index":768,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["loadoptions",{"_index":308,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["log",{"_index":1098,"title":{},"body":{"classes/UniqueValidator.html":{}}}],["logique",{"_index":142,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["lors",{"_index":599,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["lorsque",{"_index":860,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["lot",{"_index":527,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["lots",{"_index":579,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["magalhaes",{"_index":838,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["mail",{"_index":372,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["manually",{"_index":167,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["map",{"_index":1084,"title":{},"body":{"classes/UniqueValidator.html":{}}}],["map((response",{"_index":1090,"title":{},"body":{"classes/UniqueValidator.html":{}}}],["mappez",{"_index":111,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["margin",{"_index":693,"title":{},"body":{"components/CondominiumComponent.html":{},"components/InformationComponent.html":{}}}],["matching",{"_index":227,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"interfaces/City.html":{},"injectables/CityService.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"components/CoproprietaireComponent.html":{},"interfaces/Country.html":{},"interfaces/Country-1.html":{},"injectables/CountryService.html":{},"interfaces/Customer.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"interfaces/Representative.html":{},"injectables/UniqueCheckService.html":{},"classes/UniqueValidator.html":{},"components/UnitComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.floor(math.log(bytes",{"_index":975,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["math.log(k",{"_index":976,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["math.pow(k",{"_index":977,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["max",{"_index":1036,"title":{},"body":{"components/InformationComponent.html":{}}}],["mb",{"_index":971,"title":{},"body":{"components/FileUploadComponent.html":{},"components/InformationComponent.html":{}}}],["menuitem",{"_index":470,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":546,"title":{},"body":{"components/CondominiumComponent.html":{},"components/InformationComponent.html":{}}}],["messagemodule",{"_index":1000,"title":{},"body":{"components/InformationComponent.html":{}}}],["messages",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["messageservice",{"_index":415,"title":{},"body":{"components/CondominiumComponent.html":{},"components/FileUploadComponent.html":{},"miscellaneous/variables.html":{}}}],["met",{"_index":603,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["method",{"_index":362,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["methods",{"_index":35,"title":{},"body":{"components/AddressComponent.html":{},"components/CadastreComponent.html":{},"injectables/CityService.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"injectables/CountryService.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"injectables/UniqueCheckService.html":{},"classes/UniqueValidator.html":{},"components/UnitComponent.html":{},"injectables/UploadService.html":{}}}],["min",{"_index":1040,"title":{},"body":{"components/InformationComponent.html":{}}}],["miscellaneous",{"_index":1251,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mm/dd/yyyy",{"_index":879,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["modules",{"_index":1303,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["moins",{"_index":1016,"title":{},"body":{"components/InformationComponent.html":{}}}],["more",{"_index":1297,"title":{},"body":{"index.html":{}}}],["multiselectmodule",{"_index":762,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["méthode",{"_index":252,"title":{},"body":{"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/DisplayCondominiumComponent.html":{}}}],["n'y",{"_index":323,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["n/a",{"_index":1143,"title":{},"body":{"components/UnitComponent.html":{}}}],["naissance",{"_index":380,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["name",{"_index":50,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"interfaces/City.html":{},"injectables/CityService.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"components/CoproprietaireComponent.html":{},"interfaces/Country.html":{},"interfaces/Country-1.html":{},"injectables/CountryService.html":{},"interfaces/Customer.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"interfaces/Representative.html":{},"injectables/UniqueCheckService.html":{},"classes/UniqueValidator.html":{},"components/UnitComponent.html":{},"injectables/UploadService.html":{},"index.html":{}}}],["name.common",{"_index":123,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["nametaken",{"_index":1092,"title":{},"body":{"classes/UniqueValidator.html":{}}}],["navigate",{"_index":1265,"title":{},"body":{"index.html":{}}}],["ne",{"_index":157,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{},"components/InformationComponent.html":{}}}],["need",{"_index":1290,"title":{},"body":{"index.html":{}}}],["negotiation",{"_index":852,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["new",{"_index":251,"title":{},"body":{"components/CadastreComponent.html":{},"components/CondominiumComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{},"index.html":{}}}],["newunit",{"_index":640,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["newunit.get('owners",{"_index":656,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["next",{"_index":94,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"interfaces/Country-1.html":{},"components/FileUploadComponent.html":{}}}],["nextstep",{"_index":433,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["ng",{"_index":1262,"title":{},"body":{"index.html":{}}}],["ngmodel",{"_index":757,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["ngoninit",{"_index":38,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"interfaces/Country-1.html":{},"components/DisplayCondominiumComponent.html":{}}}],["nom",{"_index":369,"title":{},"body":{"components/ConciergeComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/InformationComponent.html":{}}}],["non",{"_index":635,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["nouveau",{"_index":670,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["null",{"_index":636,"title":{},"body":{"components/CondominiumComponent.html":{},"components/DisplayCondominiumComponent.html":{},"classes/UniqueValidator.html":{},"components/UnitComponent.html":{}}}],["number",{"_index":459,"title":{},"body":{"components/CondominiumComponent.html":{},"interfaces/Country.html":{},"interfaces/Customer.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/Representative.html":{},"components/UnitComponent.html":{}}}],["nécessaire",{"_index":173,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["object",{"_index":626,"title":{},"body":{"components/CondominiumComponent.html":{},"miscellaneous/variables.html":{}}}],["object.keys(unitdata).foreach((unitkey",{"_index":627,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["observable",{"_index":275,"title":{},"body":{"injectables/CityService.html":{},"injectables/CondominiumService.html":{},"injectables/CountryService.html":{},"injectables/UniqueCheckService.html":{},"classes/UniqueValidator.html":{},"injectables/UploadService.html":{}}}],["occurred",{"_index":1188,"title":{},"body":{"injectables/UploadService.html":{}}}],["of(null",{"_index":1088,"title":{},"body":{"classes/UniqueValidator.html":{}}}],["onactiveindexchange",{"_index":434,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["onactiveindexchange(index",{"_index":458,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["oncleartemplatingupload",{"_index":895,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["oncleartemplatingupload(clear",{"_index":910,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["oncountrychange",{"_index":39,"title":{},"body":{"components/AddressComponent.html":{}}}],["oncountrychange(event",{"_index":59,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["onfileuploaded",{"_index":241,"title":{},"body":{"components/CadastreComponent.html":{}}}],["onfileuploaded(response",{"_index":246,"title":{},"body":{"components/CadastreComponent.html":{}}}],["oninit",{"_index":290,"title":{},"body":{"components/ConciergeComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/InformationComponent.html":{}}}],["onremovetemplatingfile",{"_index":896,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["onremovetemplatingfile(event",{"_index":912,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["onselectedfiles",{"_index":897,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["onselectedfiles(event",{"_index":916,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["onsubmit",{"_index":435,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["ontemplatedupload",{"_index":898,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["ontextextracted",{"_index":436,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["ontextextracted(text",{"_index":462,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["onyama",{"_index":840,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["onyamalimba.png",{"_index":842,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["opendialog",{"_index":775,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["option.name",{"_index":872,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["optional",{"_index":32,"title":{},"body":{"components/AddressComponent.html":{},"components/CadastreComponent.html":{},"injectables/CityService.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"interfaces/Country.html":{},"injectables/CountryService.html":{},"interfaces/Customer.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/Representative.html":{},"injectables/UniqueCheckService.html":{},"classes/UniqueValidator.html":{},"components/UnitComponent.html":{},"injectables/UploadService.html":{}}}],["options",{"_index":356,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["out",{"_index":1299,"title":{},"body":{"index.html":{}}}],["output",{"_index":249,"title":{},"body":{"components/CadastreComponent.html":{},"components/CondominiumComponent.html":{},"components/FileUploadComponent.html":{}}}],["outputs",{"_index":242,"title":{},"body":{"components/CadastreComponent.html":{},"components/CondominiumComponent.html":{},"components/FileUploadComponent.html":{}}}],["overview",{"_index":1300,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owner",{"_index":1151,"title":{},"body":{"components/UnitComponent.html":{}}}],["owner.address?.city",{"_index":666,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["owner.address?.country",{"_index":667,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["owner.address?.postal_code",{"_index":665,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["owner.address?.street",{"_index":664,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["owner.first_name",{"_index":662,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["owner.get('firstname')?.value",{"_index":1152,"title":{},"body":{"components/UnitComponent.html":{}}}],["owner.get('lastname')?.value",{"_index":1153,"title":{},"body":{"components/UnitComponent.html":{}}}],["owner.get('title')?.value",{"_index":1154,"title":{},"body":{"components/UnitComponent.html":{}}}],["owner.get(\\'firstname\\')?.value",{"_index":1167,"title":{},"body":{"components/UnitComponent.html":{}}}],["owner.get(\\'lastname\\')?.value",{"_index":1168,"title":{},"body":{"components/UnitComponent.html":{}}}],["owner.get(\\'title\\')?.value",{"_index":1169,"title":{},"body":{"components/UnitComponent.html":{}}}],["owner.last_name",{"_index":660,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["owner.title",{"_index":663,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["ownergroup",{"_index":658,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["owners",{"_index":648,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["ownersarray",{"_index":655,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["ownersarray.push(ownergroup",{"_index":668,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["p",{"_index":1031,"title":{},"body":{"components/InformationComponent.html":{}}}],["package",{"_index":1229,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":680,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["page",{"_index":1302,"title":{},"body":{"index.html":{}}}],["panelmodule",{"_index":338,"title":{},"body":{"components/ConciergeComponent.html":{},"components/InformationComponent.html":{}}}],["par",{"_index":137,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{},"injectables/UniqueCheckService.html":{}}}],["parameters",{"_index":48,"title":{},"body":{"components/AddressComponent.html":{},"components/CadastreComponent.html":{},"injectables/CityService.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"injectables/CountryService.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"injectables/UniqueCheckService.html":{},"classes/UniqueValidator.html":{},"components/UnitComponent.html":{},"injectables/UploadService.html":{}}}],["parcourir",{"_index":620,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["parenthesis",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pas",{"_index":324,"title":{},"body":{"components/ConciergeComponent.html":{},"components/InformationComponent.html":{}}}],["pays",{"_index":106,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["pending",{"_index":983,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["pertinentes",{"_index":117,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["peut",{"_index":1028,"title":{},"body":{"components/InformationComponent.html":{}}}],["phone",{"_index":375,"title":{},"body":{"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{}}}],["pi",{"_index":552,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["plans",{"_index":577,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["platform",{"_index":1288,"title":{},"body":{"index.html":{}}}],["please",{"_index":165,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["position",{"_index":699,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["postal",{"_index":193,"title":{},"body":{"components/AddressComponent.html":{}}}],["postal_code",{"_index":513,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["postal_code_concierge",{"_index":521,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["pour",{"_index":113,"title":{},"body":{"components/AddressComponent.html":{},"components/CadastreComponent.html":{},"interfaces/City.html":{},"components/CondominiumComponent.html":{},"interfaces/Country-1.html":{},"components/FileUploadComponent.html":{}}}],["pouvez",{"_index":168,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["prefix",{"_index":508,"title":{},"body":{"components/CondominiumComponent.html":{},"components/InformationComponent.html":{},"injectables/UniqueCheckService.html":{},"classes/UniqueValidator.html":{}}}],["prefixtaken",{"_index":1101,"title":{},"body":{"classes/UniqueValidator.html":{}}}],["previousstep",{"_index":437,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["primeicons",{"_index":1242,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":1244,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["primeng/api",{"_index":494,"title":{},"body":{"components/CondominiumComponent.html":{},"components/FileUploadComponent.html":{}}}],["primeng/badge",{"_index":940,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["primeng/blockui",{"_index":337,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["primeng/button",{"_index":492,"title":{},"body":{"components/CondominiumComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["primeng/calendar",{"_index":335,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["primeng/card",{"_index":78,"title":{},"body":{"components/AddressComponent.html":{},"components/CadastreComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"interfaces/Country-1.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{}}}],["primeng/confirmpopup",{"_index":497,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["primeng/dataview",{"_index":806,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["primeng/dialog",{"_index":496,"title":{},"body":{"components/CondominiumComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/UnitComponent.html":{}}}],["primeng/divider",{"_index":1008,"title":{},"body":{"components/InformationComponent.html":{}}}],["primeng/dropdown",{"_index":76,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"interfaces/Country-1.html":{},"components/DisplayCondominiumComponent.html":{}}}],["primeng/fileupload",{"_index":939,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["primeng/floatlabel",{"_index":75,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"interfaces/Country-1.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{}}}],["primeng/inputmask",{"_index":333,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["primeng/inputswitch",{"_index":334,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["primeng/inputtext",{"_index":77,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"interfaces/Country-1.html":{},"components/DisplayCondominiumComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{}}}],["primeng/inputtextarea",{"_index":1006,"title":{},"body":{"components/InformationComponent.html":{}}}],["primeng/keyfilter",{"_index":336,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["primeng/message",{"_index":1007,"title":{},"body":{"components/InformationComponent.html":{}}}],["primeng/multiselect",{"_index":810,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["primeng/panel",{"_index":339,"title":{},"body":{"components/ConciergeComponent.html":{},"components/InformationComponent.html":{}}}],["primeng/progressbar",{"_index":809,"title":{},"body":{"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{}}}],["primeng/steps",{"_index":493,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["primeng/table",{"_index":808,"title":{},"body":{"components/DisplayCondominiumComponent.html":{},"components/UnitComponent.html":{}}}],["primeng/tag",{"_index":807,"title":{},"body":{"components/DisplayCondominiumComponent.html":{},"components/UnitComponent.html":{}}}],["primeng/toast",{"_index":495,"title":{},"body":{"components/CondominiumComponent.html":{},"components/FileUploadComponent.html":{}}}],["primeng/tooltip",{"_index":340,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["primengconfig",{"_index":937,"title":{},"body":{"components/FileUploadComponent.html":{},"miscellaneous/variables.html":{}}}],["principale",{"_index":609,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["pris",{"_index":1020,"title":{},"body":{"components/InformationComponent.html":{}}}],["private",{"_index":88,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"injectables/CityService.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"interfaces/Country-1.html":{},"injectables/CountryService.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"injectables/UniqueCheckService.html":{},"injectables/UploadService.html":{}}}],["production",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progressbarmodule",{"_index":763,"title":{},"body":{"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{}}}],["project",{"_index":1256,"title":{},"body":{"index.html":{}}}],["properties",{"_index":29,"title":{"properties.html":{}},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"interfaces/City.html":{},"injectables/CityService.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"interfaces/Country.html":{},"interfaces/Country-1.html":{},"injectables/CountryService.html":{},"interfaces/Customer.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/Representative.html":{},"injectables/UniqueCheckService.html":{},"components/UnitComponent.html":{},"injectables/UploadService.html":{},"properties.html":{}}}],["proposal",{"_index":854,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["propriétaire",{"_index":584,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["propriétaires",{"_index":582,"title":{},"body":{"components/CondominiumComponent.html":{},"components/UnitComponent.html":{}}}],["propriétés",{"_index":868,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["provideanimationsasync",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":283,"title":{},"body":{"injectables/CityService.html":{},"injectables/CondominiumService.html":{},"injectables/CountryService.html":{},"injectables/UniqueCheckService.html":{},"injectables/UploadService.html":{}}}],["providehttpclient",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providehttpclient(withfetch",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":414,"title":{},"body":{"components/CondominiumComponent.html":{},"components/DisplayCondominiumComponent.html":{},"miscellaneous/variables.html":{}}}],["provideserverrendering",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["préfixe",{"_index":869,"title":{},"body":{"components/DisplayCondominiumComponent.html":{},"components/InformationComponent.html":{}}}],["prénom",{"_index":367,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["public",{"_index":300,"title":{},"body":{"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{}}}],["qualified",{"_index":851,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["que",{"_index":98,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["radius",{"_index":691,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["rappels",{"_index":387,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["reactiveformsmodule",{"_index":17,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"interfaces/Country-1.html":{},"components/InformationComponent.html":{}}}],["receiving",{"_index":352,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["recevoir",{"_index":253,"title":{},"body":{"components/CadastreComponent.html":{}}}],["recherche",{"_index":871,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["record",{"_index":366,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["red",{"_index":1043,"title":{},"body":{"components/InformationComponent.html":{}}}],["reference",{"_index":1301,"title":{},"body":{"index.html":{}}}],["reject",{"_index":565,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["rejected",{"_index":566,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["rejet",{"_index":567,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["reload",{"_index":1269,"title":{},"body":{"index.html":{}}}],["reminder",{"_index":361,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["reminder_delay",{"_index":385,"title":{},"body":{"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{}}}],["reminder_receiving_method",{"_index":388,"title":{},"body":{"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{}}}],["reminderreceivingmethods",{"_index":305,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["removefilecallback",{"_index":913,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["removefilecallback(event",{"_index":951,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["remplacez",{"_index":1067,"title":{},"body":{"injectables/UniqueCheckService.html":{}}}],["remplira",{"_index":651,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["renewal",{"_index":853,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["reponse",{"_index":889,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["representative",{"_index":739,"title":{"interfaces/Representative.html":{}},"body":{"interfaces/Country.html":{},"interfaces/Customer.html":{},"components/DisplayCondominiumComponent.html":{},"interfaces/Representative.html":{},"coverage.html":{}}}],["representatives",{"_index":769,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["requis",{"_index":1012,"title":{},"body":{"components/InformationComponent.html":{}}}],["resetactiveindex",{"_index":859,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["resetstep",{"_index":438,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["response",{"_index":248,"title":{},"body":{"components/CadastreComponent.html":{},"components/CondominiumComponent.html":{},"components/FileUploadComponent.html":{}}}],["response.istaken",{"_index":1091,"title":{},"body":{"classes/UniqueValidator.html":{}}}],["response.text",{"_index":258,"title":{},"body":{"components/CadastreComponent.html":{}}}],["results",{"_index":226,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"interfaces/City.html":{},"injectables/CityService.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"components/CoproprietaireComponent.html":{},"interfaces/Country.html":{},"interfaces/Country-1.html":{},"injectables/CountryService.html":{},"interfaces/Customer.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"interfaces/Representative.html":{},"injectables/UniqueCheckService.html":{},"classes/UniqueValidator.html":{},"components/UnitComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":286,"title":{},"body":{"injectables/CityService.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"injectables/CountryService.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"injectables/UniqueCheckService.html":{},"classes/UniqueValidator.html":{},"components/UnitComponent.html":{},"injectables/UploadService.html":{}}}],["returns",{"_index":55,"title":{},"body":{"components/AddressComponent.html":{},"components/CadastreComponent.html":{},"injectables/CityService.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"injectables/CountryService.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"injectables/UniqueCheckService.html":{},"classes/UniqueValidator.html":{},"components/UnitComponent.html":{},"injectables/UploadService.html":{},"miscellaneous/functions.html":{}}}],["rgba(0",{"_index":688,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["rien",{"_index":158,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["right",{"_index":701,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["root",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"injectables/CityService.html":{},"injectables/CondominiumService.html":{},"injectables/CountryService.html":{},"injectables/UniqueCheckService.html":{},"injectables/UploadService.html":{}}}],["root'},{'name",{"_index":205,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["router",{"_index":777,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["routeroutlet",{"_index":230,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":1205,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["running",{"_index":1280,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":280,"title":{},"body":{"injectables/CityService.html":{},"injectables/CondominiumService.html":{},"injectables/CountryService.html":{},"injectables/UniqueCheckService.html":{},"classes/UniqueValidator.html":{},"injectables/UploadService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1085,"title":{},"body":{"classes/UniqueValidator.html":{}}}],["récupère",{"_index":623,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["récupérer",{"_index":114,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["récupérées",{"_index":608,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["référence",{"_index":1136,"title":{},"body":{"components/UnitComponent.html":{}}}],["réponse",{"_index":947,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["scaffolding",{"_index":1271,"title":{},"body":{"index.html":{}}}],["se",{"_index":862,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["searchvalue",{"_index":770,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["sebastien.vlmnckx",{"_index":1344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["select",{"_index":166,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["selected",{"_index":161,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["selectedcity",{"_index":33,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["selectedcountry",{"_index":34,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["selectedcountrycode",{"_index":186,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["selectedoption.name",{"_index":194,"title":{},"body":{"components/AddressComponent.html":{}}}],["selectedunit",{"_index":1106,"title":{},"body":{"components/UnitComponent.html":{}}}],["selectedunit()?.get('cadastralreference')?.value",{"_index":1145,"title":{},"body":{"components/UnitComponent.html":{}}}],["selectedunit()?.get('unitaddress')?.get('city')?.value",{"_index":1147,"title":{},"body":{"components/UnitComponent.html":{}}}],["selectedunit()?.get('unitaddress')?.get('country')?.value",{"_index":1149,"title":{},"body":{"components/UnitComponent.html":{}}}],["selectedunit()?.get('unitaddress')?.get('postal_code')?.value",{"_index":1148,"title":{},"body":{"components/UnitComponent.html":{}}}],["selectedunit()?.get('unitaddress')?.get('street')?.value",{"_index":1146,"title":{},"body":{"components/UnitComponent.html":{}}}],["selectedunit()?.get(\\'cadastralreference\\')?.value",{"_index":1162,"title":{},"body":{"components/UnitComponent.html":{}}}],["selectedunit()?.get(\\'unitaddress\\')?.get(\\'city\\')?.value",{"_index":1164,"title":{},"body":{"components/UnitComponent.html":{}}}],["selectedunit()?.get(\\'unitaddress\\')?.get(\\'country\\')?.value",{"_index":1166,"title":{},"body":{"components/UnitComponent.html":{}}}],["selectedunit()?.get(\\'unitaddress\\')?.get(\\'postal_code\\')?.value",{"_index":1165,"title":{},"body":{"components/UnitComponent.html":{}}}],["selectedunit()?.get(\\'unitaddress\\')?.get(\\'street\\')?.value",{"_index":1163,"title":{},"body":{"components/UnitComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"interfaces/Country-1.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["serve",{"_index":1263,"title":{},"body":{"index.html":{}}}],["server",{"_index":1237,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["server.ts",{"_index":1203,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["serverconfig",{"_index":1209,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serveur",{"_index":1196,"title":{},"body":{"injectables/UploadService.html":{}}}],["service",{"_index":949,"title":{},"body":{"components/FileUploadComponent.html":{},"miscellaneous/variables.html":{}}}],["services/city.services",{"_index":81,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["services/condominium.service",{"_index":341,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["services/country.service",{"_index":80,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["services/display",{"_index":803,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["services/unique",{"_index":499,"title":{},"body":{"components/CondominiumComponent.html":{},"classes/UniqueValidator.html":{}}}],["services/upload.service",{"_index":938,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["severity",{"_index":557,"title":{},"body":{"components/CondominiumComponent.html":{},"components/FileUploadComponent.html":{}}}],["shadow",{"_index":685,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["sharvill",{"_index":832,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["shaw",{"_index":844,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["si",{"_index":134,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/CondominiumComponent.html":{},"interfaces/Country-1.html":{}}}],["signal",{"_index":483,"title":{},"body":{"components/CondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/UnitComponent.html":{}}}],["signal(0",{"_index":466,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["signal(false",{"_index":1121,"title":{},"body":{"components/UnitComponent.html":{}}}],["signal(null",{"_index":1123,"title":{},"body":{"components/UnitComponent.html":{}}}],["sinon",{"_index":156,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["sizes",{"_index":968,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["sizes[0",{"_index":974,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["sizes[i",{"_index":979,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["souhaitez",{"_index":135,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["soumis",{"_index":588,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"interfaces/City.html":{},"injectables/CityService.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"components/CoproprietaireComponent.html":{},"interfaces/Country.html":{},"interfaces/Country-1.html":{},"injectables/CountryService.html":{},"interfaces/Customer.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"interfaces/Representative.html":{},"injectables/UniqueCheckService.html":{},"classes/UniqueValidator.html":{},"components/UnitComponent.html":{},"injectables/UploadService.html":{},"index.html":{}}}],["space",{"_index":707,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["spécifier",{"_index":941,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["spécifique",{"_index":143,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["src/.../app.config.server.ts",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":235,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":1207,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":1210,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/address/address.component.ts",{"_index":9,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{},"coverage.html":{}}}],["src/app/components/address/address.component.ts:107",{"_index":60,"title":{},"body":{"components/AddressComponent.html":{}}}],["src/app/components/address/address.component.ts:34",{"_index":53,"title":{},"body":{"components/AddressComponent.html":{}}}],["src/app/components/address/address.component.ts:36",{"_index":67,"title":{},"body":{"components/AddressComponent.html":{}}}],["src/app/components/address/address.component.ts:37",{"_index":68,"title":{},"body":{"components/AddressComponent.html":{}}}],["src/app/components/address/address.component.ts:39",{"_index":65,"title":{},"body":{"components/AddressComponent.html":{}}}],["src/app/components/address/address.component.ts:40",{"_index":47,"title":{},"body":{"components/AddressComponent.html":{}}}],["src/app/components/address/address.component.ts:45",{"_index":58,"title":{},"body":{"components/AddressComponent.html":{}}}],["src/app/components/address/address.component.ts:49",{"_index":57,"title":{},"body":{"components/AddressComponent.html":{}}}],["src/app/components/address/address.component.ts:91",{"_index":54,"title":{},"body":{"components/AddressComponent.html":{}}}],["src/app/components/cadastre/cadastre.component.ts",{"_index":237,"title":{},"body":{"components/CadastreComponent.html":{},"coverage.html":{}}}],["src/app/components/cadastre/cadastre.component.ts:12",{"_index":245,"title":{},"body":{"components/CadastreComponent.html":{}}}],["src/app/components/cadastre/cadastre.component.ts:15",{"_index":247,"title":{},"body":{"components/CadastreComponent.html":{}}}],["src/app/components/concierge/concierge.component.ts",{"_index":288,"title":{},"body":{"components/ConciergeComponent.html":{},"coverage.html":{}}}],["src/app/components/concierge/concierge.component.ts:40",{"_index":313,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["src/app/components/concierge/concierge.component.ts:41",{"_index":331,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["src/app/components/concierge/concierge.component.ts:42",{"_index":328,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["src/app/components/concierge/concierge.component.ts:46",{"_index":315,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["src/app/components/concierge/concierge.component.ts:54",{"_index":312,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["src/app/components/concierge/concierge.component.ts:57",{"_index":321,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["src/app/components/concierge/concierge.component.ts:58",{"_index":332,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["src/app/components/concierge/concierge.component.ts:59",{"_index":329,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["src/app/components/concierge/concierge.component.ts:61",{"_index":320,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["src/app/components/concierge/concierge.component.ts:66",{"_index":319,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["src/app/components/concierge/concierge.component.ts:96",{"_index":317,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["src/app/components/condominium/condominium.component.ts",{"_index":413,"title":{},"body":{"components/CondominiumComponent.html":{},"coverage.html":{}}}],["src/app/components/condominium/condominium.component.ts:100",{"_index":474,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["src/app/components/condominium/condominium.component.ts:104",{"_index":476,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["src/app/components/condominium/condominium.component.ts:108",{"_index":478,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["src/app/components/condominium/condominium.component.ts:112",{"_index":480,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["src/app/components/condominium/condominium.component.ts:116",{"_index":482,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["src/app/components/condominium/condominium.component.ts:120",{"_index":454,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["src/app/components/condominium/condominium.component.ts:132",{"_index":460,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["src/app/components/condominium/condominium.component.ts:135",{"_index":465,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["src/app/components/condominium/condominium.component.ts:138",{"_index":456,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["src/app/components/condominium/condominium.component.ts:142",{"_index":464,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["src/app/components/condominium/condominium.component.ts:145",{"_index":450,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["src/app/components/condominium/condominium.component.ts:160",{"_index":457,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["src/app/components/condominium/condominium.component.ts:192",{"_index":461,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["src/app/components/condominium/condominium.component.ts:212",{"_index":463,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["src/app/components/condominium/condominium.component.ts:283",{"_index":453,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["src/app/components/condominium/condominium.component.ts:44",{"_index":448,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["src/app/components/condominium/condominium.component.ts:45",{"_index":471,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["src/app/components/condominium/condominium.component.ts:46",{"_index":467,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["src/app/components/condominium/condominium.component.ts:47",{"_index":468,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["src/app/components/condominium/condominium.component.ts:49",{"_index":447,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["src/app/components/condominium/condominium.component.ts:53",{"_index":472,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["src/app/components/coproprietaire/coproprietaire.component.ts",{"_index":733,"title":{},"body":{"components/CoproprietaireComponent.html":{},"coverage.html":{}}}],["src/app/components/display",{"_index":753,"title":{},"body":{"components/DisplayCondominiumComponent.html":{},"coverage.html":{}}}],["src/app/components/ftpblueprint/ftpblueprint.component.ts",{"_index":993,"title":{},"body":{"components/FtpblueprintComponent.html":{},"coverage.html":{}}}],["src/app/components/ftpblueprint/ftpblueprint.component.ts:19",{"_index":996,"title":{},"body":{"components/FtpblueprintComponent.html":{}}}],["src/app/components/information/information.component.ts",{"_index":997,"title":{},"body":{"components/InformationComponent.html":{},"coverage.html":{}}}],["src/app/components/information/information.component.ts:33",{"_index":1005,"title":{},"body":{"components/InformationComponent.html":{}}}],["src/app/components/unit/unit.component.ts",{"_index":1102,"title":{},"body":{"components/UnitComponent.html":{},"coverage.html":{}}}],["src/app/components/unit/unit.component.ts:16",{"_index":1114,"title":{},"body":{"components/UnitComponent.html":{}}}],["src/app/components/unit/unit.component.ts:18",{"_index":1122,"title":{},"body":{"components/UnitComponent.html":{}}}],["src/app/components/unit/unit.component.ts:19",{"_index":1113,"title":{},"body":{"components/UnitComponent.html":{}}}],["src/app/components/unit/unit.component.ts:23",{"_index":1120,"title":{},"body":{"components/UnitComponent.html":{}}}],["src/app/components/unit/unit.component.ts:28",{"_index":1115,"title":{},"body":{"components/UnitComponent.html":{}}}],["src/app/components/unit/unit.component.ts:33",{"_index":1116,"title":{},"body":{"components/UnitComponent.html":{}}}],["src/app/components/unit/unit.component.ts:40",{"_index":1118,"title":{},"body":{"components/UnitComponent.html":{}}}],["src/app/components/unit/unit.component.ts:44",{"_index":1125,"title":{},"body":{"components/UnitComponent.html":{}}}],["src/app/components/upload/upload.component.ts",{"_index":881,"title":{},"body":{"components/FileUploadComponent.html":{},"coverage.html":{}}}],["src/app/components/upload/upload.component.ts:26",{"_index":902,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:27",{"_index":903,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:28",{"_index":926,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:29",{"_index":923,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:30",{"_index":930,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:31",{"_index":933,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:33",{"_index":922,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:34",{"_index":925,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:35",{"_index":935,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:37",{"_index":906,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:41",{"_index":915,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:46",{"_index":911,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:51",{"_index":918,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:69",{"_index":917,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:73",{"_index":920,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:77",{"_index":908,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["src/app/domain/diplaycondominium.domain.ts",{"_index":738,"title":{},"body":{"interfaces/Country.html":{},"interfaces/Customer.html":{},"interfaces/Representative.html":{},"coverage.html":{}}}],["src/app/services/city.services.ts",{"_index":264,"title":{},"body":{"injectables/CityService.html":{},"coverage.html":{}}}],["src/app/services/city.services.ts:10",{"_index":277,"title":{},"body":{"injectables/CityService.html":{}}}],["src/app/services/city.services.ts:11",{"_index":270,"title":{},"body":{"injectables/CityService.html":{}}}],["src/app/services/city.services.ts:15",{"_index":273,"title":{},"body":{"injectables/CityService.html":{}}}],["src/app/services/condominium.service.ts",{"_index":714,"title":{},"body":{"injectables/CondominiumService.html":{},"coverage.html":{}}}],["src/app/services/condominium.service.ts:12",{"_index":726,"title":{},"body":{"injectables/CondominiumService.html":{}}}],["src/app/services/condominium.service.ts:13",{"_index":728,"title":{},"body":{"injectables/CondominiumService.html":{}}}],["src/app/services/condominium.service.ts:14",{"_index":721,"title":{},"body":{"injectables/CondominiumService.html":{}}}],["src/app/services/condominium.service.ts:18",{"_index":722,"title":{},"body":{"injectables/CondominiumService.html":{}}}],["src/app/services/condominium.service.ts:22",{"_index":723,"title":{},"body":{"injectables/CondominiumService.html":{}}}],["src/app/services/condominium.service.ts:26",{"_index":724,"title":{},"body":{"injectables/CondominiumService.html":{}}}],["src/app/services/country.service.ts",{"_index":747,"title":{},"body":{"injectables/CountryService.html":{},"coverage.html":{}}}],["src/app/services/country.service.ts:10",{"_index":749,"title":{},"body":{"injectables/CountryService.html":{}}}],["src/app/services/country.service.ts:14",{"_index":750,"title":{},"body":{"injectables/CountryService.html":{}}}],["src/app/services/display",{"_index":1222,"title":{},"body":{"coverage.html":{}}}],["src/app/services/unique",{"_index":1056,"title":{},"body":{"injectables/UniqueCheckService.html":{},"coverage.html":{}}}],["src/app/services/upload.service.ts",{"_index":1170,"title":{},"body":{"injectables/UploadService.html":{},"coverage.html":{}}}],["src/app/services/upload.service.ts:13",{"_index":1178,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/services/upload.service.ts:22",{"_index":1176,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/services/upload.service.ts:9",{"_index":1174,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/validators/unique",{"_index":1073,"title":{},"body":{"classes/UniqueValidator.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1224,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1225,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.server.ts",{"_index":1226,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":14,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"interfaces/Country-1.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["started",{"_index":1255,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1202,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1075,"title":{},"body":{"classes/UniqueValidator.html":{}}}],["status",{"_index":643,"title":{},"body":{"components/CondominiumComponent.html":{},"interfaces/Country.html":{},"interfaces/Customer.html":{},"components/DisplayCondominiumComponent.html":{},"interfaces/Representative.html":{},"components/UnitComponent.html":{}}}],["status.tolowercase",{"_index":865,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["statuses",{"_index":771,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["step",{"_index":573,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["stephen",{"_index":843,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["stephenshaw.png",{"_index":845,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["stepsmodule",{"_index":419,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["stored",{"_index":1277,"title":{},"body":{"index.html":{}}}],["street",{"_index":191,"title":{},"body":{"components/AddressComponent.html":{},"components/CondominiumComponent.html":{}}}],["street_concierge",{"_index":518,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["string",{"_index":83,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"interfaces/City.html":{},"injectables/CityService.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"interfaces/Country.html":{},"interfaces/Country-1.html":{},"interfaces/Customer.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/Representative.html":{},"injectables/UniqueCheckService.html":{},"injectables/UploadService.html":{}}}],["styles",{"_index":412,"title":{},"body":{"components/CondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["styleurl",{"_index":26,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"components/CoproprietaireComponent.html":{},"interfaces/Country-1.html":{},"components/FtpblueprintComponent.html":{}}}],["styleurls",{"_index":423,"title":{},"body":{"components/CondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["success",{"_index":786,"title":{},"body":{"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{}}}],["sum",{"_index":928,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["summary",{"_index":558,"title":{},"body":{"components/CondominiumComponent.html":{},"components/FileUploadComponent.html":{}}}],["summary:'address",{"_index":576,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["summary:'cadastre",{"_index":575,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["summary:'co",{"_index":583,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["summary:'concierge",{"_index":585,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["summary:'ftp",{"_index":578,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["summary:'information",{"_index":572,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["summary:'lot",{"_index":580,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["sur",{"_index":140,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/CondominiumComponent.html":{},"interfaces/Country-1.html":{}}}],["surname",{"_index":368,"title":{},"body":{"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{}}}],["switch",{"_index":343,"title":{},"body":{"components/ConciergeComponent.html":{},"components/DisplayCondominiumComponent.html":{}}}],["sélectionner",{"_index":155,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["table",{"_index":780,"title":{},"body":{"components/DisplayCondominiumComponent.html":{},"coverage.html":{}}}],["table.clear",{"_index":855,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["tableau",{"_index":102,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/CondominiumComponent.html":{},"interfaces/Country-1.html":{}}}],["tablemodule",{"_index":759,"title":{},"body":{"components/DisplayCondominiumComponent.html":{},"components/UnitComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1228,"title":{},"body":{"coverage.html":{}}}],["tagmodule",{"_index":761,"title":{},"body":{"components/DisplayCondominiumComponent.html":{},"components/UnitComponent.html":{}}}],["tape",{"_index":532,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["target",{"_index":543,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["tb",{"_index":973,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["templateurl",{"_index":24,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"interfaces/Country-1.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["test",{"_index":1282,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1293,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1281,"title":{},"body":{"index.html":{}}}],["text",{"_index":259,"title":{},"body":{"components/CadastreComponent.html":{},"components/CondominiumComponent.html":{}}}],["text.address.city",{"_index":614,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["text.address.country",{"_index":615,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["text.address.postal_code",{"_index":613,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["text.address.street",{"_index":612,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["text.unit",{"_index":622,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["textextracted",{"_index":243,"title":{},"body":{"components/CadastreComponent.html":{}}}],["this.activeindex",{"_index":536,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["this.activeindex.set(0",{"_index":540,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["this.activeindex.set(index",{"_index":539,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["this.activeindex.update(i",{"_index":541,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["this.addressform.patchvalue",{"_index":611,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["this.basecitiesurl}?country=${countrycode}&username=${this.username",{"_index":285,"title":{},"body":{"injectables/CityService.html":{}}}],["this.cityservice.getcities(this.selectedcountry.code).subscribe",{"_index":184,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["this.civilitytypes",{"_index":354,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["this.closedetailsdialog",{"_index":1133,"title":{},"body":{"components/UnitComponent.html":{}}}],["this.closedialog.emit",{"_index":586,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["this.conciergemessage",{"_index":347,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["this.condocomponent.resetstep",{"_index":864,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["this.condominiumservice.getcivilityoptions().subscribe",{"_index":353,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["this.condominiumservice.getdocumentreceivingmethodoptions().subscribe",{"_index":363,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["this.condominiumservice.getreminderreceivingmethodoptions().subscribe",{"_index":359,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["this.config.translation?.filesizetypes",{"_index":969,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.confirmationservice.confirm",{"_index":542,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["this.countries",{"_index":118,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["this.countries.find",{"_index":151,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["this.countries.find(country",{"_index":190,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["this.countryservice.getcountries().subscribe",{"_index":93,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["this.createcondominiumform",{"_index":504,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["this.createcondominiumform.get('address",{"_index":525,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["this.createcondominiumform.get('concierge",{"_index":529,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["this.createcondominiumform.get('ftpblueprint",{"_index":526,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["this.createcondominiumform.get('informations",{"_index":524,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["this.createcondominiumform.get('units",{"_index":528,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["this.createcondominiumform.reset",{"_index":597,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["this.createcondominiumform.value",{"_index":589,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["this.customers",{"_index":813,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["this.customers.foreach((customer",{"_index":815,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["this.displaycondominiumservice.getcustomerslarge().then((customers",{"_index":812,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["this.displaydetailsdialog.set(false",{"_index":1128,"title":{},"body":{"components/UnitComponent.html":{}}}],["this.displaydetailsdialog.set(true",{"_index":1127,"title":{},"body":{"components/UnitComponent.html":{}}}],["this.displaydialog",{"_index":857,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["this.documentreceivingmethods",{"_index":364,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["this.fb.array",{"_index":516,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["this.fb.group",{"_index":505,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["this.files().foreach(file",{"_index":957,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.files().length",{"_index":955,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.files().reduce((sum",{"_index":927,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.files.set",{"_index":954,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.files.set(event.currentfiles",{"_index":964,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.files.update(files",{"_index":952,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.filetype).subscribe",{"_index":959,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.fileuploaded.emit(response",{"_index":962,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.geterrorsubmit(error",{"_index":601,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["this.http.get(`${this.checkuniqueness}?name=${name",{"_index":1070,"title":{},"body":{"injectables/UniqueCheckService.html":{}}}],["this.http.get(`${this.checkuniqueness}?prefix=${prefix",{"_index":1071,"title":{},"body":{"injectables/UniqueCheckService.html":{}}}],["this.http.get(this.countries",{"_index":752,"title":{},"body":{"injectables/CountryService.html":{}}}],["this.http.get(this.getcivilities",{"_index":730,"title":{},"body":{"injectables/CondominiumService.html":{}}}],["this.http.get(this.getdocumentremindingmethod",{"_index":731,"title":{},"body":{"injectables/CondominiumService.html":{}}}],["this.http.get(this.getreminderremindingmethod",{"_index":732,"title":{},"body":{"injectables/CondominiumService.html":{}}}],["this.http.get(url",{"_index":287,"title":{},"body":{"injectables/CityService.html":{}}}],["this.http.post(this.fromurlcreatecondominium",{"_index":593,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["this.http.post(this.uploadurl",{"_index":1183,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.isthereconcierge",{"_index":345,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["this.items",{"_index":568,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["this.loadcities",{"_index":174,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["this.loadcountries",{"_index":91,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["this.loading",{"_index":814,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["this.loadoptions",{"_index":349,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["this.messageservice.add",{"_index":556,"title":{},"body":{"components/CondominiumComponent.html":{},"components/FileUploadComponent.html":{}}}],["this.messageservice.add({severity:'info",{"_index":571,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["this.onsubmit",{"_index":564,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["this.reminderreceivingmethods",{"_index":360,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["this.representatives",{"_index":818,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["this.searchvalue",{"_index":856,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["this.selectedcountry",{"_index":159,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["this.selectedcountry.name",{"_index":162,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["this.selectedunit",{"_index":1130,"title":{},"body":{"components/UnitComponent.html":{}}}],["this.selectedunit()?.patchvalue",{"_index":1131,"title":{},"body":{"components/UnitComponent.html":{}}}],["this.selectedunit.set(null",{"_index":1129,"title":{},"body":{"components/UnitComponent.html":{}}}],["this.selectedunit.set(this.units.at(index",{"_index":1126,"title":{},"body":{"components/UnitComponent.html":{}}}],["this.statuses",{"_index":849,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["this.textextracted.emit(text",{"_index":260,"title":{},"body":{"components/CadastreComponent.html":{}}}],["this.totalsize",{"_index":931,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.units.clear",{"_index":619,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["this.units.controls",{"_index":1135,"title":{},"body":{"components/UnitComponent.html":{}}}],["this.units.push(newunit",{"_index":671,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["this.uploadservice.uploadfile(file",{"_index":958,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["throwerror",{"_index":1180,"title":{},"body":{"injectables/UploadService.html":{}}}],["title",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"components/CondominiumComponent.html":{}}}],["toastmodule",{"_index":420,"title":{},"body":{"components/CondominiumComponent.html":{},"components/FileUploadComponent.html":{}}}],["tooltipmodule",{"_index":297,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["top",{"_index":694,"title":{},"body":{"components/CondominiumComponent.html":{},"components/InformationComponent.html":{}}}],["totalsize",{"_index":890,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["totalsizepercent",{"_index":891,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["track",{"_index":984,"title":{},"body":{"components/FileUploadComponent.html":{},"components/UnitComponent.html":{}}}],["transmettre",{"_index":946,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["triangle",{"_index":554,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["trouv",{"_index":153,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["true",{"_index":15,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"interfaces/Country-1.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"classes/UniqueValidator.html":{},"components/UnitComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1247,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":51,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"interfaces/City.html":{},"injectables/CityService.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"interfaces/Country.html":{},"interfaces/Country-1.html":{},"injectables/CountryService.html":{},"interfaces/Customer.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"interfaces/Representative.html":{},"injectables/UniqueCheckService.html":{},"classes/UniqueValidator.html":{},"components/UnitComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":625,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["types",{"_index":351,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["téléphone",{"_index":376,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["un",{"_index":101,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"interfaces/Country-1.html":{}}}],["undefined",{"_index":799,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["une",{"_index":141,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["uniquecheckservice",{"_index":446,"title":{"injectables/UniqueCheckService.html":{}},"body":{"components/CondominiumComponent.html":{},"injectables/UniqueCheckService.html":{},"classes/UniqueValidator.html":{},"coverage.html":{}}}],["uniquecheckservice.checknameuniqueness(control.value).pipe",{"_index":1089,"title":{},"body":{"classes/UniqueValidator.html":{}}}],["uniquecheckservice.checkprefixuniqueness(control.value).pipe",{"_index":1100,"title":{},"body":{"classes/UniqueValidator.html":{}}}],["uniquement",{"_index":115,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["uniqueness",{"_index":1096,"title":{},"body":{"classes/UniqueValidator.html":{},"miscellaneous/variables.html":{}}}],["uniquevalidator",{"_index":501,"title":{"classes/UniqueValidator.html":{}},"body":{"components/CondominiumComponent.html":{},"classes/UniqueValidator.html":{},"coverage.html":{}}}],["uniquevalidator.checkprefixuniqueness(this.uniquecheckservice",{"_index":509,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["unit",{"_index":223,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{},"index.html":{}}}],["unit.component.html",{"_index":1104,"title":{},"body":{"components/UnitComponent.html":{}}}],["unit.component.scss",{"_index":1103,"title":{},"body":{"components/UnitComponent.html":{}}}],["unit.get('cadastralreference')?.value",{"_index":1144,"title":{},"body":{"components/UnitComponent.html":{}}}],["unit.get('owners",{"_index":1134,"title":{},"body":{"components/UnitComponent.html":{}}}],["unit.get('unitaddress')?.get('city')?.value",{"_index":1139,"title":{},"body":{"components/UnitComponent.html":{}}}],["unit.get('unitaddress')?.get('complement')?.value",{"_index":1142,"title":{},"body":{"components/UnitComponent.html":{}}}],["unit.get('unitaddress')?.get('country')?.value",{"_index":1141,"title":{},"body":{"components/UnitComponent.html":{}}}],["unit.get('unitaddress')?.get('postal_code')?.value",{"_index":1140,"title":{},"body":{"components/UnitComponent.html":{}}}],["unit.get('unitaddress')?.get('street')?.value",{"_index":1138,"title":{},"body":{"components/UnitComponent.html":{}}}],["unit.get(\\'cadastralreference\\')?.value",{"_index":1161,"title":{},"body":{"components/UnitComponent.html":{}}}],["unit.get(\\'unitaddress\\')?.get(\\'city\\')?.value",{"_index":1157,"title":{},"body":{"components/UnitComponent.html":{}}}],["unit.get(\\'unitaddress\\')?.get(\\'complement\\')?.value",{"_index":1160,"title":{},"body":{"components/UnitComponent.html":{}}}],["unit.get(\\'unitaddress\\')?.get(\\'country\\')?.value",{"_index":1159,"title":{},"body":{"components/UnitComponent.html":{}}}],["unit.get(\\'unitaddress\\')?.get(\\'postal_code\\')?.value",{"_index":1158,"title":{},"body":{"components/UnitComponent.html":{}}}],["unit.get(\\'unitaddress\\')?.get(\\'street\\')?.value",{"_index":1156,"title":{},"body":{"components/UnitComponent.html":{}}}],["unit/unit.component",{"_index":491,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["unitaddress",{"_index":645,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["unitcomponent",{"_index":222,"title":{"components/UnitComponent.html":{}},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{},"coverage.html":{}}}],["unitcontrols",{"_index":1111,"title":{},"body":{"components/UnitComponent.html":{}}}],["unitdata",{"_index":621,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["unitdata[unitkey",{"_index":629,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["unitinfo",{"_index":628,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["unitinfo.owners",{"_index":632,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["unitinfo.owners.foreach((owner",{"_index":657,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["unitinfo.owners.length",{"_index":638,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["unitinfo?.complement",{"_index":631,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["unitkey",{"_index":642,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["units",{"_index":443,"title":{},"body":{"components/CondominiumComponent.html":{},"components/UnitComponent.html":{}}}],["unités",{"_index":617,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["unknown",{"_index":1187,"title":{},"body":{"injectables/UploadService.html":{}}}],["unqualified",{"_index":850,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["upload",{"_index":882,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload'},{'name",{"_index":217,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["upload.component.html",{"_index":886,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.scss",{"_index":885,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload/upload.component",{"_index":250,"title":{},"body":{"components/CadastreComponent.html":{},"components/FtpblueprintComponent.html":{}}}],["uploadapi",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uploaded",{"_index":961,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["uploadedfiles",{"_index":989,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["uploadedfiles.length",{"_index":987,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["uploadevent",{"_index":899,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["uploadevent(callback",{"_index":919,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["uploadfile",{"_index":1173,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadfile(file",{"_index":1177,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadservice",{"_index":892,"title":{"injectables/UploadService.html":{}},"body":{"components/FileUploadComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{}}}],["uploadurl",{"_index":1171,"title":{},"body":{"injectables/UploadService.html":{}}}],["url",{"_index":284,"title":{},"body":{"injectables/CityService.html":{}}}],["use",{"_index":1273,"title":{},"body":{"index.html":{}}}],["username",{"_index":266,"title":{},"body":{"injectables/CityService.html":{},"miscellaneous/variables.html":{}}}],["utilisez",{"_index":126,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["valeurs",{"_index":607,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["valid",{"_index":1132,"title":{},"body":{"components/UnitComponent.html":{}}}],["validationerrors",{"_index":1082,"title":{},"body":{"classes/UniqueValidator.html":{}}}],["validations",{"_index":530,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["validator",{"_index":503,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["validator.ts",{"_index":1074,"title":{},"body":{"classes/UniqueValidator.html":{},"coverage.html":{}}}],["validator.ts:22",{"_index":1080,"title":{},"body":{"classes/UniqueValidator.html":{}}}],["validator.ts:7",{"_index":1077,"title":{},"body":{"classes/UniqueValidator.html":{}}}],["validators",{"_index":73,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/CondominiumComponent.html":{},"interfaces/Country-1.html":{}}}],["validators.maxlength(500",{"_index":511,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["validators.minlength(3)],[uniquevalidator.checknameuniqueness(this.uniquecheckservice",{"_index":507,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["validators.required",{"_index":506,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["validators/unique",{"_index":502,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["valides",{"_index":107,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["value",{"_index":64,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"interfaces/City.html":{},"injectables/CityService.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"injectables/CondominiumService.html":{},"interfaces/Country-1.html":{},"injectables/CountryService.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"injectables/UniqueCheckService.html":{},"components/UnitComponent.html":{},"injectables/UploadService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":201,"title":{},"body":{"components/AddressComponent.html":{},"components/AppComponent.html":{},"components/CadastreComponent.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"components/CoproprietaireComponent.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/FtpblueprintComponent.html":{},"components/InformationComponent.html":{},"components/UnitComponent.html":{}}}],["variable",{"_index":1208,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1308,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verified",{"_index":745,"title":{},"body":{"interfaces/Country.html":{},"interfaces/Customer.html":{},"interfaces/Representative.html":{}}}],["version",{"_index":1260,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1284,"title":{},"body":{"index.html":{}}}],["vide",{"_index":650,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["vider",{"_index":616,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["viewchild",{"_index":801,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["viewchild('condo",{"_index":793,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["viewdetails",{"_index":1110,"title":{},"body":{"components/UnitComponent.html":{}}}],["viewdetails(index",{"_index":1119,"title":{},"body":{"components/UnitComponent.html":{}}}],["ville",{"_index":870,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["villes",{"_index":171,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"interfaces/Country-1.html":{}}}],["void",{"_index":56,"title":{},"body":{"components/AddressComponent.html":{},"components/CadastreComponent.html":{},"interfaces/City.html":{},"components/ConciergeComponent.html":{},"components/CondominiumComponent.html":{},"interfaces/Country-1.html":{},"components/DisplayCondominiumComponent.html":{},"components/FileUploadComponent.html":{},"components/UnitComponent.html":{},"miscellaneous/functions.html":{}}}],["votre",{"_index":1068,"title":{},"body":{"injectables/UniqueCheckService.html":{}}}],["vous",{"_index":122,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/CondominiumComponent.html":{},"interfaces/Country-1.html":{}}}],["vénement",{"_index":945,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["vérifiez",{"_index":97,"title":{},"body":{"components/AddressComponent.html":{},"interfaces/City.html":{},"components/CondominiumComponent.html":{},"interfaces/Country-1.html":{}}}],["warning",{"_index":787,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["white",{"_index":683,"title":{},"body":{"components/CondominiumComponent.html":{}}}],["width",{"_index":678,"title":{},"body":{"components/CondominiumComponent.html":{},"components/InformationComponent.html":{}}}],["works",{"_index":737,"title":{},"body":{"components/CoproprietaireComponent.html":{}}}],["wrap",{"_index":1039,"title":{},"body":{"components/InformationComponent.html":{}}}],["xuxue",{"_index":846,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["xuxuefeng.png",{"_index":848,"title":{},"body":{"components/DisplayCondominiumComponent.html":{}}}],["y",{"_index":348,"title":{},"body":{"components/ConciergeComponent.html":{}}}],["zone.js",{"_index":1249,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddressComponent.html":{"url":"components/AddressComponent.html","title":"component - AddressComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddressComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/address/address.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-address\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            FormsModule\n                            CommonModule\n                            InputTextModule\n                            FloatLabelModule\n                            DropdownModule\n                            CardModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./address.component.html\n            \n\n\n\n            \n                styleUrl\n                ./address.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cities\n                            \n                            \n                                countries\n                            \n                            \n                                    Optional\n                                selectedCity\n                            \n                            \n                                    Optional\n                                selectedCountry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadCities\n                            \n                            \n                                loadCountries\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCountryChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                addressForm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(countryService: CountryService, cityService: CityService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/address/address.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        countryService\n                                                  \n                                                        \n                                                                        CountryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cityService\n                                                  \n                                                        \n                                                                        CityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        addressForm\n                    \n                \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/address/address.component.ts:34\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadCities\n                        \n                    \n                \n            \n            \n                \nloadCities()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/address/address.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCountries\n                        \n                    \n                \n            \n            \n                \nloadCountries()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/address/address.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/address/address.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCountryChange\n                        \n                    \n                \n            \n            \n                \nonCountryChange(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/address/address.component.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cities\n                        \n                    \n                \n            \n                \n                    \n                        Type :         City[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/address/address.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        countries\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Country[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/address/address.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        selectedCity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         City\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/address/address.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        selectedCountry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Country\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/address/address.component.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormControl, FormGroup, FormsModule, Validators, ReactiveFormsModule} from '@angular/forms';\nimport { FloatLabelModule } from 'primeng/floatlabel';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { CardModule } from 'primeng/card';\nimport { CommonModule } from '@angular/common';\nimport { CountryService } from '../../services/country.service';\nimport { CityService } from '../../services/city.services';\n\ninterface Country {\n  name: string;\n  code: string;\n}\ninterface City {\n  name: string;\n}\n\n@Component({\n  selector: 'app-address',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    FormsModule,\n    CommonModule,\n    InputTextModule,\n    FloatLabelModule,\n    DropdownModule,\n    CardModule],\n  templateUrl: './address.component.html',\n  styleUrl: './address.component.scss'\n})\nexport class AddressComponent {\n  @Input() addressForm!: FormGroup;\n\n  countries: Country[] = [];\n  selectedCountry?: Country;\n\n  cities: City[] = [];\n  selectedCity?: City; \n\n  constructor(private countryService: CountryService, private cityService: CityService) {}\n\n  //fonction init\n  ngOnInit(): void{\n    this.loadCountries();\n  }\n // Get countries from DB\nloadCountries(): void {\n  this.countryService.getCountries().subscribe({\n    next: (data) => {\n      console.log('Countries:', data);\n\n      // Vérifiez que `data` est bien un tableau et contient des pays valides\n      if (Array.isArray(data) && data.length > 0) {\n        // Mappez les pays pour récupérer uniquement les informations pertinentes\n        this.countries = data.map((country: any) => ({\n          name: country.name.common,  // Assurez-vous que `name.common` est correct\n          code: country.cca2          // Utilisez `cca2` pour les codes ISO 3166-1 alpha-2\n        }));\n\n        // Si vous souhaitez définir un pays par défaut basé sur une logique spécifique\n        const defaultCountryCode = 'BE';  // Exemple : 'FR' pour la France\n        const defaultCountry = this.countries.find(\n          (country) => country.code === defaultCountryCode\n        );\n\n        // Si un pays par défaut est trouvé, le sélectionner, sinon ne rien sélectionner\n        if (defaultCountry) {\n          this.selectedCountry = defaultCountry;\n          console.log(`Default country selected: ${this.selectedCountry.name}`);\n        } else {\n          console.warn('No default country found, please select manually.');\n        }\n\n        // Vous pouvez également charger les villes pour ce pays par défaut, si nécessaire\n        if (this.selectedCountry) {\n          this.loadCities();  // Charge les villes du pays par défaut\n        }\n      } else {\n        console.error('Data format is incorrect or empty:', data);\n      }\n    },\n    error: (error) => {\n      console.error('Failed to load countries:', error);\n    }\n  });\n}\n\n  //Get cities from DB\n  loadCities(): void {\n    if (this.selectedCountry) {\n      this.cityService.getCities(this.selectedCountry.code).subscribe({\n        next: (data) => {\n          console.log('Cities:', data);\n          if (data) {      \n          } else {\n            console.error('Data format is incorrect', data);\n          }\n        },\n        error: (error) => {\n          console.error('Failed to load cities', error);\n        }\n      });\n    }\n  }\n  onCountryChange(event: any): void {\n    const selectedCountryCode = event.value; // assuming value contains country code\n    this.selectedCountry = this.countries.find(country => country.code === selectedCountryCode);\n    this.loadCities();\n  }\n}\n\n    \n\n    \n        \n  \n    \n     \n      \n       \n        \n          \n          Street\n        \n      \n     \n\n    \n      \n      \n        \n          \n          Address Complement\n        \n      \n\n      \n      \n        \n          \n          Postal Code\n        \n      \n    \n\n    \n      \n      \n        \n          \n            \n              \n              {{ selectedOption.name }}\n            \n          \n          \n            \n              \n              {{ country.name }}\n            \n          \n        \n      \n\n      \n       \n        \n          \n            \n              \n              {{ selectedOption.name }}\n            \n          \n          \n            \n              \n              {{ city.name }}\n            \n          \n        \n      \n     \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    Street                                                               Address Complement                                                      Postal Code                                                                                            {{ selectedOption.name }}                                                                        {{ country.name }}                                                                                                           {{ selectedOption.name }}                                                                        {{ city.name }}                                           '\n    var COMPONENTS = [{'name': 'AddressComponent', 'selector': 'app-address'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CadastreComponent', 'selector': 'app-cadastre'},{'name': 'ConciergeComponent', 'selector': 'app-concierge'},{'name': 'CondominiumComponent', 'selector': 'app-condominium'},{'name': 'CoproprietaireComponent', 'selector': 'app-coproprietaire'},{'name': 'DisplayCondominiumComponent', 'selector': 'displayCondominium'},{'name': 'FileUploadComponent', 'selector': 'app-upload'},{'name': 'FtpblueprintComponent', 'selector': 'app-ftpblueprint'},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'UnitComponent', 'selector': 'app-unit'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddressComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'frontend'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n\n\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddressComponent', 'selector': 'app-address'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CadastreComponent', 'selector': 'app-cadastre'},{'name': 'ConciergeComponent', 'selector': 'app-concierge'},{'name': 'CondominiumComponent', 'selector': 'app-condominium'},{'name': 'CoproprietaireComponent', 'selector': 'app-coproprietaire'},{'name': 'DisplayCondominiumComponent', 'selector': 'displayCondominium'},{'name': 'FileUploadComponent', 'selector': 'app-upload'},{'name': 'FtpblueprintComponent', 'selector': 'app-ftpblueprint'},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'UnitComponent', 'selector': 'app-unit'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CadastreComponent.html":{"url":"components/CadastreComponent.html","title":"component - CadastreComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CadastreComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/cadastre/cadastre.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cadastre\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                FileUploadComponent\n                            CardModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cadastre.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cadastre.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onFileUploaded\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                textExtracted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        textExtracted\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/cadastre/cadastre.component.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onFileUploaded\n                        \n                    \n                \n            \n            \n                \nonFileUploaded(response: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cadastre/cadastre.component.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Output, EventEmitter  } from '@angular/core';\nimport { FileUploadComponent } from '../upload/upload.component';\nimport { CardModule } from 'primeng/card';\n@Component({\n  selector: 'app-cadastre',\n  standalone: true,\n  imports: [FileUploadComponent, CardModule],\n  templateUrl: './cadastre.component.html',\n  styleUrl: './cadastre.component.scss'\n})\nexport class CadastreComponent {\n  @Output() textExtracted = new EventEmitter();\n  \n  // Méthode pour recevoir les données de l'upload depuis FileUploadComponent\n  onFileUploaded(response: any) {\n    if (response && response.text) {\n      const text = response.text;\n      this.textExtracted.emit(text);\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddressComponent', 'selector': 'app-address'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CadastreComponent', 'selector': 'app-cadastre'},{'name': 'ConciergeComponent', 'selector': 'app-concierge'},{'name': 'CondominiumComponent', 'selector': 'app-condominium'},{'name': 'CoproprietaireComponent', 'selector': 'app-coproprietaire'},{'name': 'DisplayCondominiumComponent', 'selector': 'displayCondominium'},{'name': 'FileUploadComponent', 'selector': 'app-upload'},{'name': 'FtpblueprintComponent', 'selector': 'app-ftpblueprint'},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'UnitComponent', 'selector': 'app-unit'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CadastreComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/City.html":{"url":"interfaces/City.html","title":"interface - City","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  City\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/address/address.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormControl, FormGroup, FormsModule, Validators, ReactiveFormsModule} from '@angular/forms';\nimport { FloatLabelModule } from 'primeng/floatlabel';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { CardModule } from 'primeng/card';\nimport { CommonModule } from '@angular/common';\nimport { CountryService } from '../../services/country.service';\nimport { CityService } from '../../services/city.services';\n\ninterface Country {\n  name: string;\n  code: string;\n}\ninterface City {\n  name: string;\n}\n\n@Component({\n  selector: 'app-address',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    FormsModule,\n    CommonModule,\n    InputTextModule,\n    FloatLabelModule,\n    DropdownModule,\n    CardModule],\n  templateUrl: './address.component.html',\n  styleUrl: './address.component.scss'\n})\nexport class AddressComponent {\n  @Input() addressForm!: FormGroup;\n\n  countries: Country[] = [];\n  selectedCountry?: Country;\n\n  cities: City[] = [];\n  selectedCity?: City; \n\n  constructor(private countryService: CountryService, private cityService: CityService) {}\n\n  //fonction init\n  ngOnInit(): void{\n    this.loadCountries();\n  }\n // Get countries from DB\nloadCountries(): void {\n  this.countryService.getCountries().subscribe({\n    next: (data) => {\n      console.log('Countries:', data);\n\n      // Vérifiez que `data` est bien un tableau et contient des pays valides\n      if (Array.isArray(data) && data.length > 0) {\n        // Mappez les pays pour récupérer uniquement les informations pertinentes\n        this.countries = data.map((country: any) => ({\n          name: country.name.common,  // Assurez-vous que `name.common` est correct\n          code: country.cca2          // Utilisez `cca2` pour les codes ISO 3166-1 alpha-2\n        }));\n\n        // Si vous souhaitez définir un pays par défaut basé sur une logique spécifique\n        const defaultCountryCode = 'BE';  // Exemple : 'FR' pour la France\n        const defaultCountry = this.countries.find(\n          (country) => country.code === defaultCountryCode\n        );\n\n        // Si un pays par défaut est trouvé, le sélectionner, sinon ne rien sélectionner\n        if (defaultCountry) {\n          this.selectedCountry = defaultCountry;\n          console.log(`Default country selected: ${this.selectedCountry.name}`);\n        } else {\n          console.warn('No default country found, please select manually.');\n        }\n\n        // Vous pouvez également charger les villes pour ce pays par défaut, si nécessaire\n        if (this.selectedCountry) {\n          this.loadCities();  // Charge les villes du pays par défaut\n        }\n      } else {\n        console.error('Data format is incorrect or empty:', data);\n      }\n    },\n    error: (error) => {\n      console.error('Failed to load countries:', error);\n    }\n  });\n}\n\n  //Get cities from DB\n  loadCities(): void {\n    if (this.selectedCountry) {\n      this.cityService.getCities(this.selectedCountry.code).subscribe({\n        next: (data) => {\n          console.log('Cities:', data);\n          if (data) {      \n          } else {\n            console.error('Data format is incorrect', data);\n          }\n        },\n        error: (error) => {\n          console.error('Failed to load cities', error);\n        }\n      });\n    }\n  }\n  onCountryChange(event: any): void {\n    const selectedCountryCode = event.value; // assuming value contains country code\n    this.selectedCountry = this.countries.find(country => country.code === selectedCountryCode);\n    this.loadCities();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CityService.html":{"url":"injectables/CityService.html","title":"injectable - CityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/city.services.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseCitiesUrl\n                            \n                            \n                                    Private\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/city.services.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCities\n                        \n                    \n                \n            \n            \n                \ngetCities(countryCode: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/city.services.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                countryCode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseCitiesUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiUrls.getCitiesBase\n                    \n                \n                    \n                        \n                                Defined in src/app/services/city.services.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiUrls.username\n                    \n                \n                    \n                        \n                                Defined in src/app/services/city.services.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CityService {\n    private baseCitiesUrl = environment.apiUrls.getCitiesBase;\n    private username = environment.apiUrls.username;\n\n  constructor(private http: HttpClient) {}\n\n  getCities(countryCode: string): Observable {\n    const url = `${this.baseCitiesUrl}?country=${countryCode}&username=${this.username}`;\n    return this.http.get(url);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConciergeComponent.html":{"url":"components/ConciergeComponent.html","title":"component - ConciergeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConciergeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/concierge/concierge.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-concierge\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            FormsModule\n                            FloatLabelModule\n                            InputTextModule\n                            InputMaskModule\n                            InputSwitchModule\n                            CalendarModule\n                            DropdownModule\n                            KeyFilterModule\n                            CardModule\n                            BlockUIModule\n                            TooltipModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./concierge.component.html\n            \n\n\n\n            \n                styleUrl\n                ./concierge.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                civilityTypes\n                            \n                            \n                                ConciergeMessage\n                            \n                            \n                                    Public\n                                documentReceivingMethods\n                            \n                            \n                                isThereConcierge\n                            \n                            \n                                    Public\n                                reminderReceivingMethods\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                conciergeSwitch\n                            \n                            \n                                getLabel\n                            \n                            \n                                loadOptions\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                conciergeForm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(condominiumService: CondominiumService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/concierge/concierge.component.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        condominiumService\n                                                  \n                                                        \n                                                                        CondominiumService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        conciergeForm\n                    \n                \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/concierge/concierge.component.ts:40\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        conciergeSwitch\n                        \n                    \n                \n            \n            \n                \nconciergeSwitch(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/concierge/concierge.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLabel\n                        \n                    \n                \n            \n            \n                \ngetLabel(field: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/concierge/concierge.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadOptions\n                        \n                    \n                \n            \n            \n                \nloadOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/concierge/concierge.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/concierge/concierge.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        civilityTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/concierge/concierge.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ConciergeMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Il n'y a pas de concierge dans cette copropriété\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/concierge/concierge.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        documentReceivingMethods\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/concierge/concierge.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isThereConcierge\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/concierge/concierge.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        reminderReceivingMethods\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/concierge/concierge.component.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit , Input } from '@angular/core';\nimport { FormGroup , ReactiveFormsModule, FormsModule} from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { FloatLabelModule } from 'primeng/floatlabel';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { CalendarModule } from 'primeng/calendar';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { KeyFilterModule } from 'primeng/keyfilter';\nimport { BlockUIModule } from 'primeng/blockui';\nimport { PanelModule } from 'primeng/panel';\nimport { CardModule } from 'primeng/card';\nimport { TooltipModule } from 'primeng/tooltip';\n\n\nimport { CondominiumService } from '../../services/condominium.service';\n\n@Component({\n  selector: 'app-concierge',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    FloatLabelModule, \n    InputTextModule, \n    InputMaskModule, \n    InputSwitchModule, \n    CalendarModule, \n    DropdownModule, \n    KeyFilterModule,\n    CardModule,\n    BlockUIModule,\n    TooltipModule],\n  templateUrl: './concierge.component.html',\n  styleUrl: './concierge.component.scss'\n})\nexport class ConciergeComponent implements OnInit{\n  @Input() conciergeForm!: FormGroup;\n  isThereConcierge = false ;\n  ConciergeMessage = \"Il n'y a pas de concierge dans cette copropriété\";\n\n\n  // Function to switch the concierge form\n  conciergeSwitch(event: any) {\n    this.isThereConcierge! = event.checked;\n    if (event.checked == true){\n      this.ConciergeMessage = \"Il y a un concierge dans cette copropriété\";\n    }else {\n      this.ConciergeMessage = \"Il n'y a pas de concierge dans cette copropriété\";\n    }\n    \n  }\n\n  constructor(private condominiumService: CondominiumService) {}\n  public civilityTypes: any[] = [];\n  public reminderReceivingMethods: any[] = [];\n  public documentReceivingMethods: any[] = [];\n\n  ngOnInit(): void{\n    this.loadOptions();\n  }\n\n  //Get civilities types and receiving methods from DB\n  loadOptions(): void {\n    this.condominiumService.getCivilityOptions().subscribe({\n      next: (data) => {\n        this.civilityTypes = data;\n        console.log('Civility options loaded', data);\n      },\n      error: (error) => {\n        console.error('Failed to load civility options', error);\n      }\n    });\n\n    this.condominiumService.getReminderReceivingMethodOptions().subscribe({\n      next: (data) => {\n        this.reminderReceivingMethods = data;\n      },\n      error: (error) => {\n        console.error('Failed to load reminder receiving method options', error);\n      }\n    });\n\n    this.condominiumService.getDocumentReceivingMethodOptions().subscribe({\n      next: (data) => {\n        this.documentReceivingMethods = data;\n      },\n      error: (error) => {\n        console.error('Failed to load receiving method options', error);\n      }\n    });\n  }\n\n  getLabel(field: string): string {\n    const labels: Record = {\n      name: 'Prénom',\n      surname: 'Nom',\n      email: 'Adresse mail',\n      corporation: 'Entreprise',\n      phone: 'Téléphone',\n      iban: 'Iban',\n      birthdate: 'Date de naissance',\n      civility: 'Civilité',\n      document_receiving_method: 'Méthode d\\'envoi des documents',\n      reminder_delay: 'Délai rappels',\n      reminder_receiving_method: 'Méthode d\\'envoi rappels'\n    };\n    return labels[field] || field;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ ConciergeMessage }}\n    \n  \n\n\n  \n    \n  \n\n\n  \n\n      \n        \n          \n          {{ getLabel('name') }}\n        \n      \n  \n      \n        \n          \n          {{ getLabel('surname') }}\n        \n      \n  \n      \n        \n          \n          {{ getLabel('email') }}\n        \n      \n  \n      \n        \n        {{ getLabel('corporation') }}\n      \n  \n      \n        \n          \n          {{ getLabel('phone') }}\n        \n        \n  \n      \n        \n          \n          {{ getLabel('iban') }}\n        \n        \n  \n      \n        \n          \n          {{ getLabel('birthdate') }}\n        \n        \n      \n      \n        \n          \n          {{ getLabel('civility') }}\n        \n        \n  \n      \n        \n          \n          {{ getLabel('document_receiving_method') }}\n        \n        \n      \n      \n        \n          \n          {{ getLabel('reminder_delay') }}\n        \n      \n  \n      \n        \n          \n          {{ getLabel('reminder_receiving_method') }}\n        \n        \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ ConciergeMessage }}                                                  {{ getLabel(\\'name\\') }}                                                  {{ getLabel(\\'surname\\') }}                                                  {{ getLabel(\\'email\\') }}                                      {{ getLabel(\\'corporation\\') }}                                          {{ getLabel(\\'phone\\') }}                                                    {{ getLabel(\\'iban\\') }}                                                    {{ getLabel(\\'birthdate\\') }}                                                        {{ getLabel(\\'civility\\') }}                                                    {{ getLabel(\\'document_receiving_method\\') }}                                                        {{ getLabel(\\'reminder_delay\\') }}                                                  {{ getLabel(\\'reminder_receiving_method\\') }}                  '\n    var COMPONENTS = [{'name': 'AddressComponent', 'selector': 'app-address'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CadastreComponent', 'selector': 'app-cadastre'},{'name': 'ConciergeComponent', 'selector': 'app-concierge'},{'name': 'CondominiumComponent', 'selector': 'app-condominium'},{'name': 'CoproprietaireComponent', 'selector': 'app-coproprietaire'},{'name': 'DisplayCondominiumComponent', 'selector': 'displayCondominium'},{'name': 'FileUploadComponent', 'selector': 'app-upload'},{'name': 'FtpblueprintComponent', 'selector': 'app-ftpblueprint'},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'UnitComponent', 'selector': 'app-unit'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConciergeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CondominiumComponent.html":{"url":"components/CondominiumComponent.html","title":"component - CondominiumComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CondominiumComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/condominium/condominium.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-condominium\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            ButtonModule\n                                AddressComponent\n                                InformationComponent\n                                FtpblueprintComponent\n                                ConciergeComponent\n                                CadastreComponent\n                                UnitComponent\n                            StepsModule\n                            ToastModule\n                            DialogModule\n                            ConfirmPopupModule\n                                CoproprietaireComponent\n                \n            \n\n            \n                styleUrls\n                ./condominium.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./condominium.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeIndex\n                            \n                            \n                                createCondominiumForm\n                            \n                            \n                                    Private\n                                fromUrlCreateCondominium\n                            \n                            \n                                items\n                            \n                            \n                                    Public\n                                messageService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmation\n                            \n                            \n                                getErrorSubmit\n                            \n                            \n                                isStepValid\n                            \n                            \n                                nextStep\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onActiveIndexChange\n                            \n                            \n                                onSubmit\n                            \n                            \n                                onTextExtracted\n                            \n                            \n                                previousStep\n                            \n                            \n                                resetStep\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeDialog\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    informationsForm\n                                \n                                \n                                    addressForm\n                                \n                                \n                                    ftpBlueprintForm\n                                \n                                \n                                    units\n                                \n                                \n                                    conciergeForm\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, fb: FormBuilder, messageService: MessageService, confirmationService: ConfirmationService, uniqueCheckService: UniqueCheckService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/condominium/condominium.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uniqueCheckService\n                                                  \n                                                        \n                                                                        UniqueCheckService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeDialog\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/condominium/condominium.component.ts:44\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmation\n                        \n                    \n                \n            \n            \n                \nconfirmation(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/condominium/condominium.component.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorSubmit\n                        \n                    \n                \n            \n            \n                \ngetErrorSubmit(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/condominium/condominium.component.ts:283\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isStepValid\n                        \n                    \n                \n            \n            \n                \nisStepValid()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/condominium/condominium.component.ts:120\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextStep\n                        \n                    \n                \n            \n            \n                \nnextStep()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/condominium/condominium.component.ts:138\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/condominium/condominium.component.ts:160\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onActiveIndexChange\n                        \n                    \n                \n            \n            \n                \nonActiveIndexChange(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/condominium/condominium.component.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/condominium/condominium.component.ts:192\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTextExtracted\n                        \n                    \n                \n            \n            \n                \nonTextExtracted(text: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/condominium/condominium.component.ts:212\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousStep\n                        \n                    \n                \n            \n            \n                \npreviousStep()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/condominium/condominium.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetStep\n                        \n                    \n                \n            \n            \n                \nresetStep()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/condominium/condominium.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeIndex\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/condominium/condominium.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createCondominiumForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/condominium/condominium.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fromUrlCreateCondominium\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiUrls.condominiumApi\n                    \n                \n                    \n                        \n                                Defined in src/app/components/condominium/condominium.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/condominium/condominium.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MessageService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/condominium/condominium.component.ts:53\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        informationsForm\n                    \n                \n\n                \n                    \n                        getinformationsForm()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/condominium/condominium.component.ts:100\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        addressForm\n                    \n                \n\n                \n                    \n                        getaddressForm()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/condominium/condominium.component.ts:104\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        ftpBlueprintForm\n                    \n                \n\n                \n                    \n                        getftpBlueprintForm()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/condominium/condominium.component.ts:108\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        units\n                    \n                \n\n                \n                    \n                        getunits()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/condominium/condominium.component.ts:112\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        conciergeForm\n                    \n                \n\n                \n                    \n                        getconciergeForm()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/condominium/condominium.component.ts:116\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component , Output, EventEmitter, signal, computed } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule, FormArray } from '@angular/forms';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport { AddressComponent } from '../address/address.component';\nimport { FtpblueprintComponent } from '../ftpblueprint/ftpblueprint.component';\nimport { ConciergeComponent } from '../concierge/concierge.component';\nimport { InformationComponent } from '../information/information.component';\nimport { CadastreComponent } from '../cadastre/cadastre.component';\nimport { UnitComponent } from '../unit/unit.component';\nimport { ButtonModule } from 'primeng/button';\nimport { StepsModule } from 'primeng/steps';\nimport { ConfirmationService, MenuItem, MessageService } from 'primeng/api';\nimport { ToastModule } from 'primeng/toast';\nimport { DialogModule } from 'primeng/dialog';\nimport { ConfirmPopupModule } from 'primeng/confirmpopup';\nimport { CoproprietaireComponent } from \"../coproprietaire/coproprietaire.component\";\nimport { UniqueCheckService } from '../../services/unique-check.service';\nimport { UniqueValidator } from '../../validators/unique-validator';\n@Component({\n  selector: 'app-condominium',\n  templateUrl: './condominium.component.html',\n  styleUrls: ['./condominium.component.scss'],\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    ButtonModule,\n    AddressComponent,\n    InformationComponent,\n    FtpblueprintComponent,\n    ConciergeComponent,\n    CadastreComponent,\n    UnitComponent,\n    StepsModule,\n    ToastModule,\n    DialogModule,\n    ConfirmPopupModule,\n    CoproprietaireComponent,\n    \n],\n  providers: [MessageService, ConfirmationService]\n})\nexport class CondominiumComponent {\n  @Output() closeDialog = new EventEmitter();\n  items: MenuItem[] = [];\n  activeIndex = signal(0);\n  createCondominiumForm: FormGroup;\n\n  private fromUrlCreateCondominium = environment.apiUrls.condominiumApi;\n\n  constructor(private http: HttpClient,\n     private fb: FormBuilder,\n     public messageService: MessageService,\n     private confirmationService: ConfirmationService,\n    private uniqueCheckService: UniqueCheckService) {\n    this.createCondominiumForm = this.fb.group({\n      informations: this.fb.group({\n        name: ['', [Validators.required, Validators.minLength(3)],[UniqueValidator.checkNameUniqueness(this.uniqueCheckService)]],\n        prefix: ['', [Validators.required], [UniqueValidator.checkPrefixUniqueness(this.uniqueCheckService)]],\n        description: ['', [Validators.maxLength(500)]]\n      }),\n\n      address: this.fb.group({\n        street: ['', Validators.required],\n        address_complement: [''],\n        city: ['', Validators.required],\n        postal_code: ['', Validators.required],\n        country: ['', Validators.required]\n      }),\n\n      ftpBlueprint: this.fb.group({\n        blueprint: ['']\n      }),\n\n      units: this.fb.array([]),\n\n      concierge: this.fb.group({\n        isThereConcierge: [false],\n        name: [''],\n        surname: [''],\n        email: [''],\n        corporation: [false],\n        phone: [''],\n        iban: [''],\n        birthdate: [''],\n        civility: [''],\n        document_receiving_method: [''],\n        reminder_delay: [40],\n        reminder_receiving_method: [''],\n        street_concierge: [''],\n        address_complement_concierge: [''],\n        city_concierge: [''],\n        postal_code_concierge: [''],\n        country_concierge: ['']\n      })\n    });\n  }\n\n  // Getter pour le formGroup 'informations'\n  get informationsForm(): FormGroup {\n    return this.createCondominiumForm.get('informations') as FormGroup;\n  }\n  // Getter pour le formGroup 'address'\n  get addressForm(): FormGroup {\n    return this.createCondominiumForm.get('address') as FormGroup;\n  }\n  // Getter pour le formGroup 'ftpBlueprint'\n  get ftpBlueprintForm(): FormGroup {\n    return this.createCondominiumForm.get('ftpBlueprint') as FormGroup;\n  }\n  // Getter pour le formGroup 'lot'\n  get units(): FormArray {\n    return this.createCondominiumForm.get('units') as FormArray;\n  }\n  // Getter pour le formGroup 'concierge'\n  get conciergeForm(): FormGroup {\n    return this.createCondominiumForm.get('concierge') as FormGroup;\n  }\n  \n  isStepValid(): boolean {\n    // Vérifiez les validations pour chaque étape en fonction de l'index actif\n    if (this.activeIndex() === 0) {\n      const informationsForm = this.createCondominiumForm.get('informations');\n      return informationsForm?.valid ?? false;\n    } else if (this.activeIndex() === 2) {\n      const addressForm = this.createCondominiumForm.get('address');\n      return addressForm?.valid ?? false;\n    }\n    return true;\n  }\n\n  onActiveIndexChange(index: number) {\n    this.activeIndex.set(index);\n  }\n  resetStep(){\n    this.activeIndex.set(0);\n  }\n  nextStep() {\n    this.activeIndex.update(i => i + 1);\n  }\n\n  previousStep() {\n    this.activeIndex.update(i => i - 1);\n  }\n  confirmation(event: Event) {\n    this.confirmationService.confirm({\n        target: event.target as EventTarget,\n        message: \"Etes-vous sur de confirmer l'envoi du formulaire?\",\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n            this.messageService.add({ severity: 'info', summary: 'Confirmed', detail: 'Formulaire confirmé', life: 3000 });\n            this.onSubmit();\n        },\n        reject: () => {\n            this.messageService.add({ severity: 'error', summary: 'Rejected', detail: 'Formulaire rejeté', life: 3000 });\n        }\n    });\n}\n\n  ngOnInit() {\n    this.items = [\n        {\n            label: 'Informations',\n            command: (event: any) => this.messageService.add({severity:'info', summary:'Information Step', detail: event.item.label})\n        },\n        {\n          label: 'Cadastre',\n          command: (event: any) => this.messageService.add({severity:'info', summary:'Cadastre Step', detail: event.item.label})\n        },\n        {\n            label: 'Adresse',\n            command: (event: any) => this.messageService.add({severity:'info', summary:'Address Step', detail: event.item.label})\n        },\n        {\n            label: 'Plans',\n            command: (event: any) => this.messageService.add({severity:'info', summary:'FTP Blueprint Step', detail: event.item.label})\n        },\n        {\n          label: 'Lots',\n          command: (event: any) => this.messageService.add({severity:'info', summary:'Lot Step', detail: event.item.label})\n        },\n        {\n          label: 'Co-propriétaires',\n          command: (event: any) => this.messageService.add({severity:'info', summary:'Co-propriétaire Step', detail: event.item.label})\n        },\n        {\n            label: 'Concierge',\n            command: (event: any) => this.messageService.add({severity:'info', summary:'Concierge Step', detail: event.item.label})\n        }\n    ];\n  }\n  onSubmit(): void {\n    this.closeDialog.emit();\n    console.log('Formulaire soumis:', this.createCondominiumForm.value);\n    let formData = this.createCondominiumForm.value;\n\n    if (formData.concierge) {\n      formData.concierge.corporation = !!formData.concierge.corporation;\n    }\n\n    this.http.post(this.fromUrlCreateCondominium, formData).subscribe({\n      next: (response) => {\n        console.log('Réponse de l\\'API:', response);\n        this.createCondominiumForm.reset();\n      },\n      error: (error: HttpErrorResponse) => {\n        console.error('Erreur lors de l\\'envoi:', error);\n        this.getErrorSubmit(error);\n      }\n    });\n  }\n  onTextExtracted(text: any) {\n    if (text) {\n      console.log(text);\n      \n      // Met à jour le formulaire d'adresse avec les valeurs récupérées (adresse principale du bâtiment)\n      this.addressForm.patchValue({\n        street: text.address.street,\n        postal_code: text.address.postal_code,\n        city: text.address.city,\n        country: text.address.country\n      });\n      \n      // Vider les unités existantes\n      this.units.clear();\n      \n      // Parcourir les unités (lots) dans 'unit'\n      const unitData = text.unit; // Récupère les unités depuis le JSON\n      if (unitData && typeof unitData === 'object') {\n        Object.keys(unitData).forEach((unitKey: string) => {\n          const unitInfo = unitData[unitKey];\n  \n          // Récupère le complément d'adresse\n          const complement = unitInfo?.complement || '';\n  \n          // Si 'unitInfo.owners' existe et est un tableau (donc non 'null')\n          if (Array.isArray(unitInfo.owners) && unitInfo.owners.length > 0) {\n            // Crée un formulaire pour chaque unité\n            const newUnit = this.fb.group({\n              cadastralReference: [unitKey || '', Validators.required],\n              status: ['brouillon'],\n              unitAddress: this.fb.group({\n                // Combiner l'adresse principale avec le complément d'adresse\n                street: [text.address.street || '', Validators.required],\n                complement: [complement],\n                postal_code: [text.address.postal_code || '', Validators.required],\n                city: [text.address.city || '', Validators.required],\n                country: [text.address.country || '', Validators.required],\n              }),\n              // Crée un FormArray pour les propriétaires\n              owners: this.fb.array([])  // Initialisation vide, on le remplira après\n            });\n  \n            // Ajoute les propriétaires au FormArray\n            const ownersArray = newUnit.get('owners') as FormArray;\n            unitInfo.owners.forEach((owner: any) => {\n              const ownerGroup = this.fb.group({\n                lastName: [owner.last_name || '', Validators.required],\n                firstName: [owner.first_name || '', Validators.required],\n                title: [owner.title || '', Validators.required],\n                address: this.fb.group({\n                  street: [owner.address?.street || '', Validators.required],\n                  postal_code: [owner.address?.postal_code || '', Validators.required],\n                  city: [owner.address?.city || '', Validators.required],\n                  country: [owner.address?.country || '', Validators.required],\n                }),\n              });\n  \n              // Ajoute chaque propriétaire au FormArray\n              ownersArray.push(ownerGroup);\n            });\n  \n            // Ajouter le nouveau lot avec les propriétaires au FormArray des unités\n            this.units.push(newUnit);\n          }\n        });\n      }\n    }\n  }\n  \n  \n  \n  getErrorSubmit(error: HttpErrorResponse) {\n    // Gestion des erreurs\n  }\n}\n\n    \n\n    \n        \n    \n    \n    \n\n\n\n    @if (activeIndex() === 0) {\n        \n    }\n    @if (activeIndex() === 1) {\n        \n    }@if (activeIndex() === 2) {\n        \n    }@if (activeIndex() === 3) {\n        \n    }@if (activeIndex() === 4) {\n        \n    }\n    \n\n    \n        @if (activeIndex() > 0) {\n            \n        }\n\n        \n            \n            \n\n            \n            @if (activeIndex() === items.length - 1) {\n                \n            }\n        \n    \n\n\n\n    \n\n    \n                \n                    ./condominium.component.scss\n                \n                .card {\n    width: 100%;\n    padding: 20px;\n    background: white;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    border-radius: 10px;\n    margin-top: 20px;\n    margin-bottom: 30px;\n}\n\n\n.button-group {\n    \n    position: absolute;\n    bottom: 30px;\n    right: 4%;\n    width: 92%;\n    display: flex;\n    justify-content: space-between;\n\n}\n\n.right-buttons {\n    left:50px;\n    display: flex;\n    gap: 10px;\n    margin-left: auto; \n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                @if (activeIndex() === 0) {            }    @if (activeIndex() === 1) {            }@if (activeIndex() === 2) {            }@if (activeIndex() === 3) {            }@if (activeIndex() === 4) {            }                @if (activeIndex() > 0) {                    }                                                        @if (activeIndex() === items.length - 1) {                            }            '\n    var COMPONENTS = [{'name': 'AddressComponent', 'selector': 'app-address'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CadastreComponent', 'selector': 'app-cadastre'},{'name': 'ConciergeComponent', 'selector': 'app-concierge'},{'name': 'CondominiumComponent', 'selector': 'app-condominium'},{'name': 'CoproprietaireComponent', 'selector': 'app-coproprietaire'},{'name': 'DisplayCondominiumComponent', 'selector': 'displayCondominium'},{'name': 'FileUploadComponent', 'selector': 'app-upload'},{'name': 'FtpblueprintComponent', 'selector': 'app-ftpblueprint'},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'UnitComponent', 'selector': 'app-unit'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CondominiumComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CondominiumService.html":{"url":"injectables/CondominiumService.html","title":"injectable - CondominiumService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CondominiumService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/condominium.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getCivilities\n                            \n                            \n                                    Private\n                                getDocumentRemindingMethod\n                            \n                            \n                                    Private\n                                getReminderRemindingMethod\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCivilityOptions\n                            \n                            \n                                getDocumentReceivingMethodOptions\n                            \n                            \n                                getReminderReceivingMethodOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/condominium.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCivilityOptions\n                        \n                    \n                \n            \n            \n                \ngetCivilityOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/condominium.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDocumentReceivingMethodOptions\n                        \n                    \n                \n            \n            \n                \ngetDocumentReceivingMethodOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/condominium.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReminderReceivingMethodOptions\n                        \n                    \n                \n            \n            \n                \ngetReminderReceivingMethodOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/condominium.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getCivilities\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiUrls.getCivilities\n                    \n                \n                    \n                        \n                                Defined in src/app/services/condominium.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getDocumentRemindingMethod\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiUrls.getDocumentRemindingMethod\n                    \n                \n                    \n                        \n                                Defined in src/app/services/condominium.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getReminderRemindingMethod\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiUrls.getReminderRemindingMethod\n                    \n                \n                    \n                        \n                                Defined in src/app/services/condominium.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CondominiumService {\n\n  private getCivilities = environment.apiUrls.getCivilities;\n  private getDocumentRemindingMethod = environment.apiUrls.getDocumentRemindingMethod;\n  private getReminderRemindingMethod = environment.apiUrls.getReminderRemindingMethod;\n\n  constructor(private http: HttpClient) {}\n\n  getCivilityOptions(): Observable {\n    return this.http.get(this.getCivilities);\n  }\n\n  getDocumentReceivingMethodOptions(): Observable {\n    return this.http.get(this.getDocumentRemindingMethod);\n  }\n\n  getReminderReceivingMethodOptions(): Observable {\n    return this.http.get(this.getReminderRemindingMethod);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoproprietaireComponent.html":{"url":"components/CoproprietaireComponent.html","title":"component - CoproprietaireComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CoproprietaireComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/coproprietaire/coproprietaire.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-coproprietaire\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./coproprietaire.component.html\n            \n\n\n\n            \n                styleUrl\n                ./coproprietaire.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-coproprietaire',\n  standalone: true,\n  imports: [],\n  templateUrl: './coproprietaire.component.html',\n  styleUrl: './coproprietaire.component.scss'\n})\nexport class CoproprietaireComponent {\n\n}\n\n    \n\n    \n        coproprietaire works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'coproprietaire works!'\n    var COMPONENTS = [{'name': 'AddressComponent', 'selector': 'app-address'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CadastreComponent', 'selector': 'app-cadastre'},{'name': 'ConciergeComponent', 'selector': 'app-concierge'},{'name': 'CondominiumComponent', 'selector': 'app-condominium'},{'name': 'CoproprietaireComponent', 'selector': 'app-coproprietaire'},{'name': 'DisplayCondominiumComponent', 'selector': 'displayCondominium'},{'name': 'FileUploadComponent', 'selector': 'app-upload'},{'name': 'FtpblueprintComponent', 'selector': 'app-ftpblueprint'},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'UnitComponent', 'selector': 'app-unit'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CoproprietaireComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Country.html":{"url":"interfaces/Country.html","title":"interface - Country","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Country\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/diplayCondominium.domain.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Country {\n    name?: string;\n    code?: string;\n}\n\nexport interface Representative {\n    name?: string;\n    image?: string;\n}\n\nexport interface Customer {\n    id?: number;\n    name?: string;\n    country?: Country;\n    company?: string;\n    date?: string | Date;\n    status?: string;\n    activity?: number;\n    representative?: Representative;\n    verified?: boolean;\n    balance?: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Country-1.html":{"url":"interfaces/Country-1.html","title":"interface - Country-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Country\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/address/address.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormControl, FormGroup, FormsModule, Validators, ReactiveFormsModule} from '@angular/forms';\nimport { FloatLabelModule } from 'primeng/floatlabel';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { CardModule } from 'primeng/card';\nimport { CommonModule } from '@angular/common';\nimport { CountryService } from '../../services/country.service';\nimport { CityService } from '../../services/city.services';\n\ninterface Country {\n  name: string;\n  code: string;\n}\ninterface City {\n  name: string;\n}\n\n@Component({\n  selector: 'app-address',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    FormsModule,\n    CommonModule,\n    InputTextModule,\n    FloatLabelModule,\n    DropdownModule,\n    CardModule],\n  templateUrl: './address.component.html',\n  styleUrl: './address.component.scss'\n})\nexport class AddressComponent {\n  @Input() addressForm!: FormGroup;\n\n  countries: Country[] = [];\n  selectedCountry?: Country;\n\n  cities: City[] = [];\n  selectedCity?: City; \n\n  constructor(private countryService: CountryService, private cityService: CityService) {}\n\n  //fonction init\n  ngOnInit(): void{\n    this.loadCountries();\n  }\n // Get countries from DB\nloadCountries(): void {\n  this.countryService.getCountries().subscribe({\n    next: (data) => {\n      console.log('Countries:', data);\n\n      // Vérifiez que `data` est bien un tableau et contient des pays valides\n      if (Array.isArray(data) && data.length > 0) {\n        // Mappez les pays pour récupérer uniquement les informations pertinentes\n        this.countries = data.map((country: any) => ({\n          name: country.name.common,  // Assurez-vous que `name.common` est correct\n          code: country.cca2          // Utilisez `cca2` pour les codes ISO 3166-1 alpha-2\n        }));\n\n        // Si vous souhaitez définir un pays par défaut basé sur une logique spécifique\n        const defaultCountryCode = 'BE';  // Exemple : 'FR' pour la France\n        const defaultCountry = this.countries.find(\n          (country) => country.code === defaultCountryCode\n        );\n\n        // Si un pays par défaut est trouvé, le sélectionner, sinon ne rien sélectionner\n        if (defaultCountry) {\n          this.selectedCountry = defaultCountry;\n          console.log(`Default country selected: ${this.selectedCountry.name}`);\n        } else {\n          console.warn('No default country found, please select manually.');\n        }\n\n        // Vous pouvez également charger les villes pour ce pays par défaut, si nécessaire\n        if (this.selectedCountry) {\n          this.loadCities();  // Charge les villes du pays par défaut\n        }\n      } else {\n        console.error('Data format is incorrect or empty:', data);\n      }\n    },\n    error: (error) => {\n      console.error('Failed to load countries:', error);\n    }\n  });\n}\n\n  //Get cities from DB\n  loadCities(): void {\n    if (this.selectedCountry) {\n      this.cityService.getCities(this.selectedCountry.code).subscribe({\n        next: (data) => {\n          console.log('Cities:', data);\n          if (data) {      \n          } else {\n            console.error('Data format is incorrect', data);\n          }\n        },\n        error: (error) => {\n          console.error('Failed to load cities', error);\n        }\n      });\n    }\n  }\n  onCountryChange(event: any): void {\n    const selectedCountryCode = event.value; // assuming value contains country code\n    this.selectedCountry = this.countries.find(country => country.code === selectedCountryCode);\n    this.loadCities();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CountryService.html":{"url":"injectables/CountryService.html","title":"injectable - CountryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CountryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/country.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                countries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCountries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/country.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCountries\n                        \n                    \n                \n            \n            \n                \ngetCountries()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/country.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        countries\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiUrls.getCountries\n                    \n                \n                    \n                        \n                                Defined in src/app/services/country.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CountryService {\n  private countries = environment.apiUrls.getCountries;\n\n  constructor(private http: HttpClient) {}\n\n  getCountries(): Observable {\n    return this.http.get(this.countries);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Customer.html":{"url":"interfaces/Customer.html","title":"interface - Customer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Customer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/diplayCondominium.domain.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            activity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            balance\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            company\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            country\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            date\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            representative\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            verified\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        balance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        balance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        company\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        company:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        country:         Country\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Country\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:     string | Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        representative\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        representative:         Representative\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Representative\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        verified\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        verified:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Country {\n    name?: string;\n    code?: string;\n}\n\nexport interface Representative {\n    name?: string;\n    image?: string;\n}\n\nexport interface Customer {\n    id?: number;\n    name?: string;\n    country?: Country;\n    company?: string;\n    date?: string | Date;\n    status?: string;\n    activity?: number;\n    representative?: Representative;\n    verified?: boolean;\n    balance?: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DisplayCondominiumComponent.html":{"url":"components/DisplayCondominiumComponent.html","title":"component - DisplayCondominiumComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DisplayCondominiumComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/display-condominium/display-condominium.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                DisplayCondominiumService\n                            NgModel\n                \n            \n\n\n            \n                selector\n                displayCondominium\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            TableModule\n                            HttpClientModule\n                            CommonModule\n                            InputTextModule\n                            TagModule\n                            DropdownModule\n                            MultiSelectModule\n                            ProgressBarModule\n                            ButtonModule\n                            FormsModule\n                            DialogModule\n                                CondominiumComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                display-condominium.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activityValues\n                            \n                            \n                                    \n                                condoComponent\n                            \n                            \n                                customers\n                            \n                            \n                                displayDialog\n                            \n                            \n                                loading\n                            \n                            \n                                representatives\n                            \n                            \n                                searchValue\n                            \n                            \n                                statuses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                closeDialog\n                            \n                            \n                                getSeverity\n                            \n                            \n                                handleDialogHide\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(DisplayCondominiumService: DisplayCondominiumService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/display-condominium/display-condominium.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        DisplayCondominiumService\n                                                  \n                                                        \n                                                                        DisplayCondominiumService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear(table: Table)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/display-condominium/display-condominium.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                table\n                                            \n                                                        Table\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/display-condominium/display-condominium.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSeverity\n                        \n                    \n                \n            \n            \n                \ngetSeverity(status: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/display-condominium/display-condominium.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     \"danger\" | \"success\" | \"info\" | \"warning\"\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDialogHide\n                        \n                    \n                \n            \n            \n                \nhandleDialogHide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/display-condominium/display-condominium.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/display-condominium/display-condominium.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/display-condominium/display-condominium.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activityValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [0, 100]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/display-condominium/display-condominium.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        condoComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CondominiumComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('condo')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/display-condominium/display-condominium.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Customer[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/display-condominium/display-condominium.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayDialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/display-condominium/display-condominium.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/display-condominium/display-condominium.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        representatives\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Representative[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/display-condominium/display-condominium.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/display-condominium/display-condominium.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statuses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/display-condominium/display-condominium.component.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Customer, Representative } from '../../domain/diplayCondominium.domain';\nimport { DisplayCondominiumService } from '../../services/display-condominium.service';\nimport { DataViewModule } from 'primeng/dataview';\nimport { ButtonModule } from 'primeng/button';\nimport { TagModule } from 'primeng/tag';\nimport { CommonModule } from '@angular/common';\nimport { TableModule } from 'primeng/table';\nimport { Table } from 'primeng/table';\nimport { HttpClientModule } from '@angular/common/http';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ProgressBarModule } from 'primeng/progressbar';\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { NgModel, FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { DialogModule } from 'primeng/dialog';\nimport { CondominiumComponent } from '../condominium/condominium.component';\n\n@Component({\n    selector: 'displayCondominium',\n    templateUrl: 'display-condominium.component.html',\n    standalone: true,\n    imports: [TableModule, HttpClientModule, CommonModule, InputTextModule, TagModule, \n    DropdownModule, MultiSelectModule, ProgressBarModule, ButtonModule, FormsModule, DialogModule, CondominiumComponent ],\n    providers: [DisplayCondominiumService, NgModel]\n})\nexport class DisplayCondominiumComponent implements OnInit {\n    displayDialog: boolean = false;\n    @ViewChild('condo') condoComponent!: CondominiumComponent;\n\n    customers!: Customer[];\n    representatives!: Representative[];\n\n    statuses!: any[];\n\n    loading: boolean = true;\n\n    activityValues: number[] = [0, 100];\n\n    searchValue: string | undefined;\n\n    constructor(private DisplayCondominiumService: DisplayCondominiumService, private router : Router) {}\n\n    ngOnInit() {\n        this.DisplayCondominiumService.getCustomersLarge().then((customers) => {\n            this.customers = customers;\n            this.loading = false;\n\n            this.customers.forEach((customer) => (customer.date = new Date(customer.date)));\n        });\n\n        this.representatives = [\n            { name: 'Amy Elsner', image: 'amyelsner.png' },\n            { name: 'Anna Fali', image: 'annafali.png' },\n            { name: 'Asiya Javayant', image: 'asiyajavayant.png' },\n            { name: 'Bernardo Dominic', image: 'bernardodominic.png' },\n            { name: 'Elwin Sharvill', image: 'elwinsharvill.png' },\n            { name: 'Ioni Bowcher', image: 'ionibowcher.png' },\n            { name: 'Ivan Magalhaes', image: 'ivanmagalhaes.png' },\n            { name: 'Onyama Limba', image: 'onyamalimba.png' },\n            { name: 'Stephen Shaw', image: 'stephenshaw.png' },\n            { name: 'Xuxue Feng', image: 'xuxuefeng.png' }\n        ];\n\n        this.statuses = [\n            { label: 'Unqualified', value: 'unqualified' },\n            { label: 'Qualified', value: 'qualified' },\n            { label: 'New', value: 'new' },\n            { label: 'Negotiation', value: 'negotiation' },\n            { label: 'Renewal', value: 'renewal' },\n            { label: 'Proposal', value: 'proposal' }\n        ];\n    }\n\n    clear(table: Table) {\n        table.clear();\n        this.searchValue = ''\n    }\n    openDialog() {\n        this.displayDialog = true;\n    }\n    closeDialog() {\n        this.displayDialog = false;\n      }\n    handleDialogHide() {\n        // Appeler la méthode resetActiveIndex lorsque le dialog se ferme\n        this.condoComponent.resetStep();\n      }\n    getSeverity(status: string) {\n        switch (status.toLowerCase()) {\n            case 'unqualified':\n                return 'danger';\n\n            case 'qualified':\n                return 'success';\n\n            case 'new':\n                return 'info';\n\n            case 'negotiation':\n                return 'warning';\n\n            case 'renewal':\n                return null;\n            default:\n              return null;\n        }\n    }\n}\n    \n\n    \n        \n    Liste des co-propriétés\n\n\n    \n        \n            \n            \n            \n                \n            \n        \n    \n    \n        \n            \n                \n                    Nom\n                    -->\n                \n            \n            \n                \n                    Préfixe\n                    -->\n                \n            \n            \n                \n                    Ville\n                    \n                        \n                            \n                                recherche\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        {{ option.name }}\n                                    \n                                \n                            \n                        \n                    \n                \n            \n            \n                \n                    Date de fin d'exercice\n                    -->\n                \n            \n            \n                \n                    Détails\n                \n            \n        \n    \n    \n        \n            \n                {{ customer.name }}\n            \n            \n                {{ customer.country.name }}\n            \n            \n                {{ customer.representative.name }}\n            \n            \n                {{ customer.date | date: 'MM/dd/yyyy' }}\n            \n            \n                \n            \n        \n    \n    \n        \n            No customers found.\n        \n    \n\n\n\n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Liste des co-propriétés                                                                                                                                                    Nom                    -->                                                                            Préfixe                    -->                                                                            Ville                                                                                                        recherche                                                                                                                                                                                                                    {{ option.name }}                                                                                                                                                                                                                        Date de fin d\\'exercice                    -->                                                                            Détails                                                                                {{ customer.name }}                                        {{ customer.country.name }}                                        {{ customer.representative.name }}                                        {{ customer.date | date: \\'MM/dd/yyyy\\' }}                                                                                        No customers found.                '\n    var COMPONENTS = [{'name': 'AddressComponent', 'selector': 'app-address'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CadastreComponent', 'selector': 'app-cadastre'},{'name': 'ConciergeComponent', 'selector': 'app-concierge'},{'name': 'CondominiumComponent', 'selector': 'app-condominium'},{'name': 'CoproprietaireComponent', 'selector': 'app-coproprietaire'},{'name': 'DisplayCondominiumComponent', 'selector': 'displayCondominium'},{'name': 'FileUploadComponent', 'selector': 'app-upload'},{'name': 'FtpblueprintComponent', 'selector': 'app-ftpblueprint'},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'UnitComponent', 'selector': 'app-unit'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DisplayCondominiumComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileUploadComponent.html":{"url":"components/FileUploadComponent.html","title":"component - FileUploadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FileUploadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/upload/upload.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-upload\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FileUploadModule\n                            ButtonModule\n                            BadgeModule\n                            ProgressBarModule\n                            ToastModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./upload.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./upload.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                config\n                            \n                            \n                                files\n                            \n                            \n                                    Private\n                                messageService\n                            \n                            \n                                reponse\n                            \n                            \n                                totalSize\n                            \n                            \n                                totalSizePercent\n                            \n                            \n                                    Private\n                                uploadService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                choose\n                            \n                            \n                                formatSize\n                            \n                            \n                                onClearTemplatingUpload\n                            \n                            \n                                onRemoveTemplatingFile\n                            \n                            \n                                onSelectedFiles\n                            \n                            \n                                onTemplatedUpload\n                            \n                            \n                                uploadEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                fileType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                fileUploaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        fileType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/upload/upload.component.ts:26\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        fileUploaded\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/upload/upload.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        choose\n                        \n                    \n                \n            \n            \n                \nchoose(event: Event, callback: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/upload/upload.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatSize\n                        \n                    \n                \n            \n            \n                \nformatSize(bytes: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/upload/upload.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bytes\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClearTemplatingUpload\n                        \n                    \n                \n            \n            \n                \nonClearTemplatingUpload(clear: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/upload/upload.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                clear\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRemoveTemplatingFile\n                        \n                    \n                \n            \n            \n                \nonRemoveTemplatingFile(event: Event, file: File, removeFileCallback: (event: Event,index: number) => void, index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/upload/upload.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                removeFileCallback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectedFiles\n                        \n                    \n                \n            \n            \n                \nonSelectedFiles(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/upload/upload.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTemplatedUpload\n                        \n                    \n                \n            \n            \n                \nonTemplatedUpload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/upload/upload.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadEvent\n                        \n                    \n                \n            \n            \n                \nuploadEvent(callback: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/upload/upload.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PrimeNGConfig)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/upload/upload.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/components/upload/upload.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MessageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/upload/upload.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reponse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/upload/upload.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalSize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.files().reduce((sum, file) => sum + file.size, 0))\n                    \n                \n                    \n                        \n                                Defined in src/app/components/upload/upload.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalSizePercent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.totalSize() / 10)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/upload/upload.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        uploadService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UploadService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/upload/upload.component.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, signal, computed, inject, Output, EventEmitter } from '@angular/core';\nimport { MessageService, PrimeNGConfig } from 'primeng/api';\nimport { UploadService } from '../../services/upload.service';\nimport { FileUploadModule } from 'primeng/fileupload';\nimport { ButtonModule } from 'primeng/button';\nimport { CommonModule } from '@angular/common';\nimport { BadgeModule } from 'primeng/badge';\nimport { ProgressBarModule } from 'primeng/progressbar';\nimport { ToastModule } from 'primeng/toast';\n\n@Component({\n  selector: 'app-upload',\n  standalone: true,\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.scss'],\n  imports: [\n    FileUploadModule, \n    ButtonModule, \n    BadgeModule, \n    ProgressBarModule, \n    ToastModule, \n    CommonModule\n  ],\n})\nexport class FileUploadComponent {\n  @Input() fileType: string = ''; // Input pour spécifier le type de fichier (ex: 'cadastre', 'facture')\n  @Output() fileUploaded = new EventEmitter(); // Événement pour transmettre la réponse après l'upload\n  reponse = \"\";\n  files = signal([]);\n  totalSize = computed(() => this.files().reduce((sum, file) => sum + file.size, 0));\n  totalSizePercent = computed(() => this.totalSize() / 10);\n\n  private config = inject(PrimeNGConfig);\n  private messageService = inject(MessageService);\n  private uploadService = inject(UploadService); // Injection du service d'upload\n\n  choose(event: Event, callback: () => void) {\n    callback();\n  }\n\n  onRemoveTemplatingFile(event: Event, file: File, removeFileCallback: (event: Event, index: number) => void, index: number) {\n    removeFileCallback(event, index);\n    this.files.update(files => files.filter((_, i) => i !== index));\n  }\n\n  onClearTemplatingUpload(clear: () => void) {\n    clear();\n    this.files.set([]);\n  }\n\n  onTemplatedUpload() {\n    if (this.files().length > 0) {\n      console.log(this.files());\n      this.files().forEach(file => {\n        this.uploadService.uploadFile(file, this.fileType).subscribe({\n          next: (response) => {\n            console.log(response)\n            this.messageService.add({ severity: 'success', summary: 'Success', detail: 'File Uploaded', life: 3000 });\n            this.fileUploaded.emit(response);\n          },\n          error: (error) => {\n            this.messageService.add({ severity: 'error', summary: 'Error', detail: error.message, life: 3000 });\n          }\n        });\n      });\n    }\n  }\n\n  onSelectedFiles(event: any) {\n    this.files.set(event.currentFiles);\n  }\n\n  uploadEvent(callback: () => void) {\n    callback();\n  }\n\n  formatSize(bytes: number): string {\n    const k = 1024;\n    const dm = 3;\n\n    const sizes = this.config.translation?.fileSizeTypes || ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n\n    if (bytes === 0) return `0 ${sizes[0]}`;\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return `${(bytes / Math.pow(k, i)).toFixed(dm)} ${sizes[i]}`;\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n            \n                \n                    \n                    \n                    \n                \n                 100 }\">\n                    {{ totalSize() }}B / 1Mb\n                \n            \n        \n        \n            @if (files.length > 0) {\n                \n                    Pending\n                    \n                        @for (file of files; track $index) {\n                            \n                                \n                                    \n                                \n                                {{ file.name }}\n                                {{ formatSize(file.size) }}\n                                \n                                \n                            \n                        }\n                    \n                \n            }\n            @if (uploadedFiles.length > 0) {\n                \n                    Completed\n                    \n                        @for (file of uploadedFiles; track $index) {\n                            \n                                \n                                    \n                                \n                                {{ file.name }}\n                                {{ formatSize(file.size) }}\n                                \n                                \n                            \n                        }\n                        \n                    \n                \n            }\n            \n        \n        \n            \n                \n                Drag and drop files here to upload.\n            \n        \n    \n\n{{reponse}}\n\n    \n\n    \n                \n                    ./upload.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                         100 }\">                    {{ totalSize() }}B / 1Mb                                                        @if (files.length > 0) {                                    Pending                                            @for (file of files; track $index) {                                                                                                                                                                {{ file.name }}                                {{ formatSize(file.size) }}                                                                                                                    }                                                }            @if (uploadedFiles.length > 0) {                                    Completed                                            @for (file of uploadedFiles; track $index) {                                                                                                                                                                {{ file.name }}                                {{ formatSize(file.size) }}                                                                                                                    }                                                                        }                                                                        Drag and drop files here to upload.                        {{reponse}}'\n    var COMPONENTS = [{'name': 'AddressComponent', 'selector': 'app-address'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CadastreComponent', 'selector': 'app-cadastre'},{'name': 'ConciergeComponent', 'selector': 'app-concierge'},{'name': 'CondominiumComponent', 'selector': 'app-condominium'},{'name': 'CoproprietaireComponent', 'selector': 'app-coproprietaire'},{'name': 'DisplayCondominiumComponent', 'selector': 'displayCondominium'},{'name': 'FileUploadComponent', 'selector': 'app-upload'},{'name': 'FtpblueprintComponent', 'selector': 'app-ftpblueprint'},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'UnitComponent', 'selector': 'app-unit'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FileUploadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FtpblueprintComponent.html":{"url":"components/FtpblueprintComponent.html","title":"component - FtpblueprintComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FtpblueprintComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ftpblueprint/ftpblueprint.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ftpblueprint\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FloatLabelModule\n                            InputTextModule\n                            CardModule\n                                FileUploadComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./ftpblueprint.component.html\n            \n\n\n\n            \n                styleUrl\n                ./ftpblueprint.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ftpBlueprintForm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ftpBlueprintForm\n                    \n                \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ftpblueprint/ftpblueprint.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormGroup} from '@angular/forms';\nimport { FloatLabelModule } from 'primeng/floatlabel';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { CardModule } from 'primeng/card';\nimport { FileUploadComponent } from '../upload/upload.component';\n@Component({\n  selector: 'app-ftpblueprint',\n  standalone: true,\n  imports: [\n    FloatLabelModule,\n    InputTextModule,\n    CardModule,\n    FileUploadComponent],\n  templateUrl: './ftpblueprint.component.html',\n  styleUrl: './ftpblueprint.component.scss'\n})\nexport class FtpblueprintComponent {\n  @Input() ftpBlueprintForm!: FormGroup;\n  \n} \n\n    \n\n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AddressComponent', 'selector': 'app-address'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CadastreComponent', 'selector': 'app-cadastre'},{'name': 'ConciergeComponent', 'selector': 'app-concierge'},{'name': 'CondominiumComponent', 'selector': 'app-condominium'},{'name': 'CoproprietaireComponent', 'selector': 'app-coproprietaire'},{'name': 'DisplayCondominiumComponent', 'selector': 'displayCondominium'},{'name': 'FileUploadComponent', 'selector': 'app-upload'},{'name': 'FtpblueprintComponent', 'selector': 'app-ftpblueprint'},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'UnitComponent', 'selector': 'app-unit'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FtpblueprintComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InformationComponent.html":{"url":"components/InformationComponent.html","title":"component - InformationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InformationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/information/information.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-information\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            FormsModule\n                            InputTextModule\n                            FloatLabelModule\n                            InputTextareaModule\n                            CardModule\n                            MessageModule\n                            ButtonModule\n                            DividerModule\n                            PanelModule\n                \n            \n\n            \n                styleUrls\n                ./information.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./information.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                informationForm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        informationForm\n                    \n                \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/information/information.component.ts:33\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input , OnInit} from '@angular/core';\nimport { FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { FloatLabelModule } from 'primeng/floatlabel';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { CardModule } from 'primeng/card';\nimport { MessageModule } from 'primeng/message';\nimport { ButtonModule } from 'primeng/button';\nimport { DividerModule } from 'primeng/divider';\nimport { PanelModule } from 'primeng/panel';\n\n@Component({\n  selector: 'app-information',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    InputTextModule,\n    FloatLabelModule,\n    InputTextareaModule,\n    CardModule,\n    MessageModule,\n    ButtonModule,\n    DividerModule,\n    PanelModule\n  ],\n  templateUrl: './information.component.html',\n  styleUrls: ['./information.component.scss']\n})\nexport class InformationComponent {\n  @Input() informationForm!: FormGroup;\n}\n\n    \n\n    \n        \n  \n\n     \n      \n      \n        \n          \n          Name\n        \n        @if (informationForm.get('name')?.invalid && informationForm.get('name')?.touched) {\n          \n            @if (informationForm.get('name')?.errors?.['required']) {Le nom est requis.}\n            @if (informationForm.get('name')?.errors?.['minlength']) {Le nom doit avoir au moins 3 caractères.}\n            @if (informationForm.get('name')?.errors?.['nameTaken']) {Ce nom est déjà pris.}\n          \n        }\n      \n    \n\n     \n    \n      \n        \n          \n          Prefix\n        \n        @if (informationForm.get('prefix')?.invalid && informationForm.get('prefix')?.touched) {\n          \n            @if (informationForm.get('prefix')?.errors?.['required']) {Le préfixe est requis.}\n            @if (informationForm.get('prefix')?.errors?.['nameTaken']) {Ce préfixe est déjà pris.}\n          \n        }\n      \n    \n\n    \n      \n      \n        \n          \n          \n          Description\n        \n        @if (informationForm.get('description')?.invalid && informationForm.get('description')?.touched) {\n          \n            @if (informationForm.get('description')?.errors?.['maxlength']) {\n              La description ne peut pas dépasser 500 caractères.}\n          \n        }\n      \n    \n  \n\n    \n\n    \n                \n                    ./information.component.scss\n                \n                \n.p-col-custom-12 {\n  flex: 0 0 100%; /* 100% de la largeur */\n  max-width: 100%;\n}\n\n.p-mb-3 {\n  margin-bottom: 1.6rem;\n}\n.p-grid {\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n}\n  \n  .error-message {\n    min-height: 20px; \n    color: red; \n    margin-top: 10px; \n  }\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                               Name                @if (informationForm.get(\\'name\\')?.invalid && informationForm.get(\\'name\\')?.touched) {                      @if (informationForm.get(\\'name\\')?.errors?.[\\'required\\']) {Le nom est requis.}            @if (informationForm.get(\\'name\\')?.errors?.[\\'minlength\\']) {Le nom doit avoir au moins 3 caractères.}            @if (informationForm.get(\\'name\\')?.errors?.[\\'nameTaken\\']) {Ce nom est déjà pris.}                  }                                                     Prefix                @if (informationForm.get(\\'prefix\\')?.invalid && informationForm.get(\\'prefix\\')?.touched) {                      @if (informationForm.get(\\'prefix\\')?.errors?.[\\'required\\']) {Le préfixe est requis.}            @if (informationForm.get(\\'prefix\\')?.errors?.[\\'nameTaken\\']) {Ce préfixe est déjà pris.}                  }                                                                Description                @if (informationForm.get(\\'description\\')?.invalid && informationForm.get(\\'description\\')?.touched) {                      @if (informationForm.get(\\'description\\')?.errors?.[\\'maxlength\\']) {              La description ne peut pas dépasser 500 caractères.}                  }            '\n    var COMPONENTS = [{'name': 'AddressComponent', 'selector': 'app-address'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CadastreComponent', 'selector': 'app-cadastre'},{'name': 'ConciergeComponent', 'selector': 'app-concierge'},{'name': 'CondominiumComponent', 'selector': 'app-condominium'},{'name': 'CoproprietaireComponent', 'selector': 'app-coproprietaire'},{'name': 'DisplayCondominiumComponent', 'selector': 'displayCondominium'},{'name': 'FileUploadComponent', 'selector': 'app-upload'},{'name': 'FtpblueprintComponent', 'selector': 'app-ftpblueprint'},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'UnitComponent', 'selector': 'app-unit'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InformationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Representative.html":{"url":"interfaces/Representative.html","title":"interface - Representative","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Representative\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/diplayCondominium.domain.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            image\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Country {\n    name?: string;\n    code?: string;\n}\n\nexport interface Representative {\n    name?: string;\n    image?: string;\n}\n\nexport interface Customer {\n    id?: number;\n    name?: string;\n    country?: Country;\n    company?: string;\n    date?: string | Date;\n    status?: string;\n    activity?: number;\n    representative?: Representative;\n    verified?: boolean;\n    balance?: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UniqueCheckService.html":{"url":"injectables/UniqueCheckService.html","title":"injectable - UniqueCheckService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UniqueCheckService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/unique-check.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUniqueness\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkNameUniqueness\n                            \n                            \n                                checkPrefixUniqueness\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/unique-check.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkNameUniqueness\n                        \n                    \n                \n            \n            \n                \ncheckNameUniqueness(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/unique-check.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkPrefixUniqueness\n                        \n                    \n                \n            \n            \n                \ncheckPrefixUniqueness(prefix: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/unique-check.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                prefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUniqueness\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiUrls.checkUniqueness\n                    \n                \n                    \n                        \n                                Defined in src/app/services/unique-check.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UniqueCheckService {\n  private checkUniqueness = environment.apiUrls.checkUniqueness; // Remplacez par votre API\n\n  constructor(private http: HttpClient) {}\n\n  checkNameUniqueness(name: string): Observable {\n    return this.http.get(`${this.checkUniqueness}?name=${name}`);\n  }\n\n  checkPrefixUniqueness(prefix: string): Observable {\n    return this.http.get(`${this.checkUniqueness}?prefix=${prefix}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UniqueValidator.html":{"url":"classes/UniqueValidator.html","title":"class - UniqueValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UniqueValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/validators/unique-validator.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                checkNameUniqueness\n                            \n                            \n                                    Static\n                                checkPrefixUniqueness\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        checkNameUniqueness\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkNameUniqueness(uniqueCheckService: UniqueCheckService)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/validators/unique-validator.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uniqueCheckService\n                                            \n                                                            UniqueCheckService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     AsyncValidatorFn\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        checkPrefixUniqueness\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkPrefixUniqueness(uniqueCheckService: UniqueCheckService)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/validators/unique-validator.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uniqueCheckService\n                                            \n                                                            UniqueCheckService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     AsyncValidatorFn\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl, AsyncValidatorFn, ValidationErrors } from '@angular/forms';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { UniqueCheckService } from '../services/unique-check.service';\n\nexport class UniqueValidator {\n  static checkNameUniqueness(uniqueCheckService: UniqueCheckService): AsyncValidatorFn {\n    return (control: AbstractControl): Observable => {\n      if (!control.value) {\n        return of(null);\n      }\n      return uniqueCheckService.checkNameUniqueness(control.value).pipe(\n        map((response: any) => {return response.isTaken ? { nameTaken: true } : null;}),\n        catchError((error) => {\n          console.error('Error during uniqueness check (name):', error); // Log errors\n          return of(null);\n        })\n      );\n    };\n  }\n\n  static checkPrefixUniqueness(uniqueCheckService: UniqueCheckService): AsyncValidatorFn {\n    return (control: AbstractControl): Observable => {\n      if (!control.value) {\n        return of(null);\n      }\n      return uniqueCheckService.checkPrefixUniqueness(control.value).pipe(\n        map((response: any) => {return response.isTaken ? { prefixTaken: true } : null;}),\n        catchError((error) => {\n          console.error('Error during uniqueness check (prefix):', error); // Log errors\n          return of(null);\n        })\n      );\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UnitComponent.html":{"url":"components/UnitComponent.html","title":"component - UnitComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UnitComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/unit/unit.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-unit\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            TableModule\n                            TagModule\n                            DialogModule\n                            ButtonModule\n                \n            \n\n            \n                styleUrls\n                ./unit.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./unit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayDetailsDialog\n                            \n                            \n                                selectedUnit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDetailsDialog\n                            \n                            \n                                confirmDetails\n                            \n                            \n                                getOwners\n                            \n                            \n                                viewDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                units\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    unitControls\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/unit/unit.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        units\n                    \n                \n                \n                    \n                        Type :     FormArray\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/unit/unit.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDetailsDialog\n                        \n                    \n                \n            \n            \n                \ncloseDetailsDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/unit/unit.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmDetails\n                        \n                    \n                \n            \n            \n                \nconfirmDetails()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/unit/unit.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOwners\n                        \n                    \n                \n            \n            \n                \ngetOwners(unit: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/unit/unit.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                unit\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormArray | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDetails\n                        \n                    \n                \n            \n            \n                \nviewDetails(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/unit/unit.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayDetailsDialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/unit/unit.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUnit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/unit/unit.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        unitControls\n                    \n                \n\n                \n                    \n                        getunitControls()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/unit/unit.component.ts:44\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\nimport { TableModule } from 'primeng/table';\nimport { TagModule } from 'primeng/tag';\nimport { DialogModule } from 'primeng/dialog';\nimport { ButtonModule } from 'primeng/button';\n\n@Component({\n  selector: 'app-unit',\n  standalone: true,\n  imports: [TableModule, TagModule, DialogModule, ButtonModule],\n  templateUrl: './unit.component.html',\n  styleUrls: ['./unit.component.scss']\n})\nexport class UnitComponent {\n  @Input() units!: FormArray;\n\n  displayDetailsDialog = signal(false);  \n  selectedUnit = signal(null);  \n\n  constructor(private fb: FormBuilder) {}\n\n  viewDetails(index: number): void {\n    this.selectedUnit.set(this.units.at(index) as FormGroup);\n    this.displayDetailsDialog.set(true);\n  }\n\n  closeDetailsDialog(): void {\n    this.displayDetailsDialog.set(false);\n    this.selectedUnit.set(null);\n  }\n\n  confirmDetails(): void {\n    if (this.selectedUnit()) {\n      this.selectedUnit()?.patchValue({ status: 'Validé' });\n    }\n    this.closeDetailsDialog();\n  }\n\n  getOwners(unit: FormGroup): FormArray | null {\n    return unit.get('owners') as FormArray || null;\n  }\n  \n  get unitControls() {\n    return this.units.controls;\n  }\n}\n\n    \n\n    \n        \n  \n      \n      \n          \n              Adresse\n              Référence cadastrale\n              Status\n              \n          \n      \n      \n      \n          \n              \n                  \n                  \n                  {{ unit.get('unitAddress')?.get('street')?.value }},\n                  {{ unit.get('unitAddress')?.get('city')?.value }},\n                  {{ unit.get('unitAddress')?.get('postal_code')?.value }},\n                  {{ unit.get('unitAddress')?.get('country')?.value }}\n              \n              \n              \n              \n          \n      \n      \n      \n          \n              {{ unit.get('unitAddress')?.get('complement')?.value || 'N/A' }}\n              {{ unit.get('cadastralReference')?.value }}\n              \n                  \n                  \n              \n              \n                  \n                      \n                  \n              \n          \n      \n  \n\n  \n    @if (selectedUnit()) {\n      \n        Référence cadastrale: {{ selectedUnit()?.get('cadastralReference')?.value }}\n        Adresse:\n        {{ selectedUnit()?.get('unitAddress')?.get('street')?.value }}, \n          {{ selectedUnit()?.get('unitAddress')?.get('city')?.value }},\n          {{ selectedUnit()?.get('unitAddress')?.get('postal_code')?.value }},\n          {{ selectedUnit()?.get('unitAddress')?.get('country')?.value }}\n        \n\n        Propriétaires:\n        @if (getOwners(selectedUnit()!)?.controls) {\n          \n            @for (owner of getOwners(selectedUnit()!)?.controls; track $index) {\n              {{ owner.get('firstName')?.value }} {{ owner.get('lastName')?.value }} - {{ owner.get('title')?.value }}\n            }\n          \n        }\n\n        Confirmer\n        Annuler\n      \n    }\n  \n\n\n    \n\n    \n                \n                    ./unit.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      Adresse              Référence cadastrale              Status                                                                                                                        {{ unit.get(\\'unitAddress\\')?.get(\\'street\\')?.value }},                  {{ unit.get(\\'unitAddress\\')?.get(\\'city\\')?.value }},                  {{ unit.get(\\'unitAddress\\')?.get(\\'postal_code\\')?.value }},                  {{ unit.get(\\'unitAddress\\')?.get(\\'country\\')?.value }}                                                                                                            {{ unit.get(\\'unitAddress\\')?.get(\\'complement\\')?.value || \\'N/A\\' }}              {{ unit.get(\\'cadastralReference\\')?.value }}                                                                                                                                                                              @if (selectedUnit()) {              Référence cadastrale: {{ selectedUnit()?.get(\\'cadastralReference\\')?.value }}        Adresse:        {{ selectedUnit()?.get(\\'unitAddress\\')?.get(\\'street\\')?.value }},           {{ selectedUnit()?.get(\\'unitAddress\\')?.get(\\'city\\')?.value }},          {{ selectedUnit()?.get(\\'unitAddress\\')?.get(\\'postal_code\\')?.value }},          {{ selectedUnit()?.get(\\'unitAddress\\')?.get(\\'country\\')?.value }}                Propriétaires:        @if (getOwners(selectedUnit()!)?.controls) {                      @for (owner of getOwners(selectedUnit()!)?.controls; track $index) {              {{ owner.get(\\'firstName\\')?.value }} {{ owner.get(\\'lastName\\')?.value }} - {{ owner.get(\\'title\\')?.value }}            }                  }        Confirmer        Annuler          }  '\n    var COMPONENTS = [{'name': 'AddressComponent', 'selector': 'app-address'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CadastreComponent', 'selector': 'app-cadastre'},{'name': 'ConciergeComponent', 'selector': 'app-concierge'},{'name': 'CondominiumComponent', 'selector': 'app-condominium'},{'name': 'CoproprietaireComponent', 'selector': 'app-coproprietaire'},{'name': 'DisplayCondominiumComponent', 'selector': 'displayCondominium'},{'name': 'FileUploadComponent', 'selector': 'app-upload'},{'name': 'FtpblueprintComponent', 'selector': 'app-ftpblueprint'},{'name': 'InformationComponent', 'selector': 'app-information'},{'name': 'UnitComponent', 'selector': 'app-unit'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UnitComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadService.html":{"url":"injectables/UploadService.html","title":"injectable - UploadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/upload.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                uploadUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/upload.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/upload.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \nuploadFile(file: File, fileType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/upload.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                fileType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        uploadUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiUrls.uploadApi\n                    \n                \n                    \n                        \n                                Defined in src/app/services/upload.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, catchError, throwError } from 'rxjs';\nimport { environment } from '../../environments/environment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n  private uploadUrl = environment.apiUrls.uploadApi;\n\n  constructor(private http: HttpClient) {}\n\n  uploadFile(file: File, fileType: string): Observable {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('type', fileType);\n    return this.http.post(this.uploadUrl, formData).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    let errorMessage = 'An unknown error occurred!';\n    if (error.error instanceof ErrorEvent) {\n      // Erreur côté client\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      // Erreur côté serveur\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(() => new Error(errorMessage));\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        server.ts\n            \n            function\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        server.ts\n            \n            function\n            run\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/address/address.component.ts\n            \n            component\n            AddressComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/address/address.component.ts\n            \n            interface\n            City\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/address/address.component.ts\n            \n            interface\n            Country\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/cadastre/cadastre.component.ts\n            \n            component\n            CadastreComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/concierge/concierge.component.ts\n            \n            component\n            ConciergeComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/components/condominium/condominium.component.ts\n            \n            component\n            CondominiumComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/coproprietaire/coproprietaire.component.ts\n            \n            component\n            CoproprietaireComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/display-condominium/display-condominium.component.ts\n            \n            component\n            DisplayCondominiumComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/components/ftpblueprint/ftpblueprint.component.ts\n            \n            component\n            FtpblueprintComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/information/information.component.ts\n            \n            component\n            InformationComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/unit/unit.component.ts\n            \n            component\n            UnitComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/upload/upload.component.ts\n            \n            component\n            FileUploadComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/domain/diplayCondominium.domain.ts\n            \n            interface\n            Country\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/domain/diplayCondominium.domain.ts\n            \n            interface\n            Customer\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/domain/diplayCondominium.domain.ts\n            \n            interface\n            Representative\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/city.services.ts\n            \n            injectable\n            CityService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/condominium.service.ts\n            \n            injectable\n            CondominiumService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/country.service.ts\n            \n            injectable\n            CountryService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/display-condominium.service.ts\n            \n            injectable\n            DisplayCondominiumService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/unique-check.service.ts\n            \n            injectable\n            UniqueCheckService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/upload.service.ts\n            \n            injectable\n            UploadService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/validators/unique-validator.ts\n            \n            class\n            UniqueValidator\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.1.0\n        \n            @angular/common : ^18.1.0\n        \n            @angular/compiler : ^18.1.0\n        \n            @angular/core : ^18.1.0\n        \n            @angular/forms : ^18.1.0\n        \n            @angular/platform-browser : ^18.1.0\n        \n            @angular/platform-browser-dynamic : ^18.1.0\n        \n            @angular/platform-server : ^18.1.0\n        \n            @angular/router : ^18.1.0\n        \n            @angular/ssr : ^18.1.2\n        \n            express : ^4.18.2\n        \n            primeicons : ^7.0.0\n        \n            primeng : ^17.18.9\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (server.ts)\n                        \n                        \n                            run   (server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n            \n                \napp()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     express.Express\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFrontend\nThis project was generated with Angular CLI version 18.1.2.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }), \n    provideRouter(routes), \n    provideClientHydration(), \n    provideAnimationsAsync(),\n    provideHttpClient(withFetch()), // Add the missing closing parenthesis\n    provideHttpClient(), // Fournit le client HTTP\n    MessageService,      // Fournit le service de messages PrimeNG\n    PrimeNGConfig,       // Fournit la configuration de PrimeNG\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering()\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: true,\n    apiUrls: {\n      uploadApi: 'https://api.example.com/upload'\n    }\n  }\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: false,\n    apiUrls: {\n      uploadApi: 'http://localhost:8080/upload',\n      condominiumApi: 'http://localhost:8080/condominium',\n      getCivilities: 'http://localhost:8080/getcivilities',\n      getReminderRemindingMethod : 'http://localhost:8080/getreminderreceivingmethods',\n      getDocumentRemindingMethod : 'http://localhost:8080/getdocumentreceivingmethods',\n      getCountries: 'https://restcountries.com/v3.1/independent?status=true&fields=name,cca2',\n      getCitiesBase: 'http://api.geonames.org/searchJSON',\n      username: 'sebastien.vlmnckx',\n      checkUniqueness: 'http://localhost:8080/check-uniqueness',\n    }\n  }\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
